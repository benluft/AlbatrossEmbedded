ARM GAS  /tmp/ccKkCas2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_msp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_MspInit:
  26              	.LFB124:
  27              		.file 1 "Src/stm32f4xx_hal_msp.c"
   1:Src/stm32f4xx_hal_msp.c **** /**
   2:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   3:Src/stm32f4xx_hal_msp.c ****   * File Name          : stm32f4xx_hal_msp.c
   4:Src/stm32f4xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   5:Src/stm32f4xx_hal_msp.c ****   *                      and de-Initialization codes.
   6:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
   7:Src/stm32f4xx_hal_msp.c ****   ** This notice applies to any and all portions of this file
   8:Src/stm32f4xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/stm32f4xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  10:Src/stm32f4xx_hal_msp.c ****   * inserted by the user or by software development tools
  11:Src/stm32f4xx_hal_msp.c ****   * are owned by their respective copyright owners.
  12:Src/stm32f4xx_hal_msp.c ****   *
  13:Src/stm32f4xx_hal_msp.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/stm32f4xx_hal_msp.c ****   *
  15:Src/stm32f4xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/stm32f4xx_hal_msp.c ****   * are permitted provided that the following conditions are met:
  17:Src/stm32f4xx_hal_msp.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/stm32f4xx_hal_msp.c ****   *      this list of conditions and the following disclaimer.
  19:Src/stm32f4xx_hal_msp.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/stm32f4xx_hal_msp.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/stm32f4xx_hal_msp.c ****   *      and/or other materials provided with the distribution.
  22:Src/stm32f4xx_hal_msp.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/stm32f4xx_hal_msp.c ****   *      may be used to endorse or promote products derived from this software
  24:Src/stm32f4xx_hal_msp.c ****   *      without specific prior written permission.
  25:Src/stm32f4xx_hal_msp.c ****   *
  26:Src/stm32f4xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/stm32f4xx_hal_msp.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/stm32f4xx_hal_msp.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/stm32f4xx_hal_msp.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/stm32f4xx_hal_msp.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/stm32f4xx_hal_msp.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccKkCas2.s 			page 2


  32:Src/stm32f4xx_hal_msp.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/stm32f4xx_hal_msp.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/stm32f4xx_hal_msp.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/stm32f4xx_hal_msp.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/stm32f4xx_hal_msp.c ****   *
  37:Src/stm32f4xx_hal_msp.c ****   ******************************************************************************
  38:Src/stm32f4xx_hal_msp.c ****   */
  39:Src/stm32f4xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  40:Src/stm32f4xx_hal_msp.c **** #include "stm32f4xx_hal.h"
  41:Src/stm32f4xx_hal_msp.c **** 
  42:Src/stm32f4xx_hal_msp.c **** extern void _Error_Handler(char *, int);
  43:Src/stm32f4xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  44:Src/stm32f4xx_hal_msp.c **** 
  45:Src/stm32f4xx_hal_msp.c **** /* USER CODE END 0 */
  46:Src/stm32f4xx_hal_msp.c **** /**
  47:Src/stm32f4xx_hal_msp.c ****   * Initializes the Global MSP.
  48:Src/stm32f4xx_hal_msp.c ****   */
  49:Src/stm32f4xx_hal_msp.c **** void HAL_MspInit(void)
  50:Src/stm32f4xx_hal_msp.c **** {
  28              		.loc 1 50 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  51:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  52:Src/stm32f4xx_hal_msp.c **** 
  53:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  54:Src/stm32f4xx_hal_msp.c **** 
  55:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  40              		.loc 1 55 0
  41 0004 0320     		movs	r0, #3
  42 0006 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
  56:Src/stm32f4xx_hal_msp.c **** 
  57:Src/stm32f4xx_hal_msp.c ****   /* System interrupt init*/
  58:Src/stm32f4xx_hal_msp.c ****   /* MemoryManagement_IRQn interrupt configuration */
  59:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
  43              		.loc 1 59 0
  44 000a 0022     		movs	r2, #0
  45 000c 0021     		movs	r1, #0
  46 000e 6FF00B00 		mvn	r0, #11
  47 0012 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  60:Src/stm32f4xx_hal_msp.c ****   /* BusFault_IRQn interrupt configuration */
  61:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
  48              		.loc 1 61 0
  49 0016 0022     		movs	r2, #0
  50 0018 0021     		movs	r1, #0
  51 001a 6FF00A00 		mvn	r0, #10
  52 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  62:Src/stm32f4xx_hal_msp.c ****   /* UsageFault_IRQn interrupt configuration */
  63:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
ARM GAS  /tmp/ccKkCas2.s 			page 3


  53              		.loc 1 63 0
  54 0022 0022     		movs	r2, #0
  55 0024 0021     		movs	r1, #0
  56 0026 6FF00900 		mvn	r0, #9
  57 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  64:Src/stm32f4xx_hal_msp.c ****   /* SVCall_IRQn interrupt configuration */
  65:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
  58              		.loc 1 65 0
  59 002e 0022     		movs	r2, #0
  60 0030 0021     		movs	r1, #0
  61 0032 6FF00400 		mvn	r0, #4
  62 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  66:Src/stm32f4xx_hal_msp.c ****   /* DebugMonitor_IRQn interrupt configuration */
  67:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
  63              		.loc 1 67 0
  64 003a 0022     		movs	r2, #0
  65 003c 0021     		movs	r1, #0
  66 003e 6FF00300 		mvn	r0, #3
  67 0042 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  68:Src/stm32f4xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  69:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  68              		.loc 1 69 0
  69 0046 0022     		movs	r2, #0
  70 0048 0021     		movs	r1, #0
  71 004a 6FF00100 		mvn	r0, #1
  72 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
  70:Src/stm32f4xx_hal_msp.c ****   /* SysTick_IRQn interrupt configuration */
  71:Src/stm32f4xx_hal_msp.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  73              		.loc 1 71 0
  74 0052 0022     		movs	r2, #0
  75 0054 0021     		movs	r1, #0
  76 0056 4FF0FF30 		mov	r0, #-1
  77 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  72:Src/stm32f4xx_hal_msp.c **** 
  73:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  74:Src/stm32f4xx_hal_msp.c **** 
  75:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  76:Src/stm32f4xx_hal_msp.c **** }
  78              		.loc 1 76 0
  79 005e 00BF     		nop
  80 0060 80BD     		pop	{r7, pc}
  81              		.cfi_endproc
  82              	.LFE124:
  84              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  85              		.align	1
  86              		.global	HAL_ADC_MspInit
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu fpv4-sp-d16
  92              	HAL_ADC_MspInit:
  93              	.LFB125:
  77:Src/stm32f4xx_hal_msp.c **** 
  78:Src/stm32f4xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
  79:Src/stm32f4xx_hal_msp.c **** {
  94              		.loc 1 79 0
  95              		.cfi_startproc
ARM GAS  /tmp/ccKkCas2.s 			page 4


  96              		@ args = 0, pretend = 0, frame = 40
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 8AB0     		sub	sp, sp, #40
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 48
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI4:
 108              		.cfi_def_cfa_register 7
 109 0006 7860     		str	r0, [r7, #4]
  80:Src/stm32f4xx_hal_msp.c **** 
  81:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
  82:Src/stm32f4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 110              		.loc 1 82 0
 111 0008 7B68     		ldr	r3, [r7, #4]
 112 000a 1B68     		ldr	r3, [r3]
 113 000c 3C4A     		ldr	r2, .L7
 114 000e 9342     		cmp	r3, r2
 115 0010 22D1     		bne	.L3
 116              	.LBB2:
  83:Src/stm32f4xx_hal_msp.c ****   {
  84:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  85:Src/stm32f4xx_hal_msp.c **** 
  86:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
  87:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
  88:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 117              		.loc 1 88 0
 118 0012 0023     		movs	r3, #0
 119 0014 3B61     		str	r3, [r7, #16]
 120 0016 3B4A     		ldr	r2, .L7+4
 121 0018 3A4B     		ldr	r3, .L7+4
 122 001a 5B6C     		ldr	r3, [r3, #68]
 123 001c 43F48073 		orr	r3, r3, #256
 124 0020 5364     		str	r3, [r2, #68]
 125 0022 384B     		ldr	r3, .L7+4
 126 0024 5B6C     		ldr	r3, [r3, #68]
 127 0026 03F48073 		and	r3, r3, #256
 128 002a 3B61     		str	r3, [r7, #16]
 129 002c 3B69     		ldr	r3, [r7, #16]
 130              	.LBE2:
  89:Src/stm32f4xx_hal_msp.c ****   
  90:Src/stm32f4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
  91:Src/stm32f4xx_hal_msp.c ****     PA5     ------> ADC1_IN5
  92:Src/stm32f4xx_hal_msp.c ****     PA6     ------> ADC1_IN6 
  93:Src/stm32f4xx_hal_msp.c ****     */
  94:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = BackRightSense_Pin|FrontRightSense_Pin;
 131              		.loc 1 94 0
 132 002e 6023     		movs	r3, #96
 133 0030 7B61     		str	r3, [r7, #20]
  95:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 134              		.loc 1 95 0
 135 0032 0323     		movs	r3, #3
 136 0034 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccKkCas2.s 			page 5


  96:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 96 0
 138 0036 0023     		movs	r3, #0
 139 0038 FB61     		str	r3, [r7, #28]
  97:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 140              		.loc 1 97 0
 141 003a 07F11403 		add	r3, r7, #20
 142 003e 1946     		mov	r1, r3
 143 0040 3148     		ldr	r0, .L7+8
 144 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  98:Src/stm32f4xx_hal_msp.c **** 
  99:Src/stm32f4xx_hal_msp.c ****     /* ADC1 interrupt Init */
 100:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 145              		.loc 1 100 0
 146 0046 0022     		movs	r2, #0
 147 0048 0021     		movs	r1, #0
 148 004a 1220     		movs	r0, #18
 149 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 101:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 150              		.loc 1 101 0
 151 0050 1220     		movs	r0, #18
 152 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 102:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 103:Src/stm32f4xx_hal_msp.c **** 
 104:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 105:Src/stm32f4xx_hal_msp.c ****   }
 106:Src/stm32f4xx_hal_msp.c ****   else if(hadc->Instance==ADC2)
 107:Src/stm32f4xx_hal_msp.c ****   {
 108:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 109:Src/stm32f4xx_hal_msp.c **** 
 110:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 0 */
 111:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 112:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC2_CLK_ENABLE();
 113:Src/stm32f4xx_hal_msp.c ****   
 114:Src/stm32f4xx_hal_msp.c ****     /**ADC2 GPIO Configuration    
 115:Src/stm32f4xx_hal_msp.c ****     PA1     ------> ADC2_IN1 
 116:Src/stm32f4xx_hal_msp.c ****     */
 117:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = FrontLeftSense_Pin;
 118:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 119:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 120:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(FrontLeftSense_GPIO_Port, &GPIO_InitStruct);
 121:Src/stm32f4xx_hal_msp.c **** 
 122:Src/stm32f4xx_hal_msp.c ****     /* ADC2 interrupt Init */
 123:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 124:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 125:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 126:Src/stm32f4xx_hal_msp.c **** 
 127:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 1 */
 128:Src/stm32f4xx_hal_msp.c ****   }
 129:Src/stm32f4xx_hal_msp.c ****   else if(hadc->Instance==ADC3)
 130:Src/stm32f4xx_hal_msp.c ****   {
 131:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 132:Src/stm32f4xx_hal_msp.c **** 
 133:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC3_MspInit 0 */
 134:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 135:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC3_CLK_ENABLE();
 136:Src/stm32f4xx_hal_msp.c ****   
ARM GAS  /tmp/ccKkCas2.s 			page 6


 137:Src/stm32f4xx_hal_msp.c ****     /**ADC3 GPIO Configuration    
 138:Src/stm32f4xx_hal_msp.c ****     PA2     ------> ADC3_IN2 
 139:Src/stm32f4xx_hal_msp.c ****     */
 140:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = BackLeftSense_Pin;
 141:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 142:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 143:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(BackLeftSense_GPIO_Port, &GPIO_InitStruct);
 144:Src/stm32f4xx_hal_msp.c **** 
 145:Src/stm32f4xx_hal_msp.c ****     /* ADC3 interrupt Init */
 146:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 147:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 148:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 149:Src/stm32f4xx_hal_msp.c **** 
 150:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC3_MspInit 1 */
 151:Src/stm32f4xx_hal_msp.c ****   }
 152:Src/stm32f4xx_hal_msp.c **** 
 153:Src/stm32f4xx_hal_msp.c **** }
 153              		.loc 1 153 0
 154 0056 4EE0     		b	.L6
 155              	.L3:
 106:Src/stm32f4xx_hal_msp.c ****   {
 156              		.loc 1 106 0
 157 0058 7B68     		ldr	r3, [r7, #4]
 158 005a 1B68     		ldr	r3, [r3]
 159 005c 2B4A     		ldr	r2, .L7+12
 160 005e 9342     		cmp	r3, r2
 161 0060 22D1     		bne	.L5
 162              	.LBB3:
 112:Src/stm32f4xx_hal_msp.c ****   
 163              		.loc 1 112 0
 164 0062 0023     		movs	r3, #0
 165 0064 FB60     		str	r3, [r7, #12]
 166 0066 274A     		ldr	r2, .L7+4
 167 0068 264B     		ldr	r3, .L7+4
 168 006a 5B6C     		ldr	r3, [r3, #68]
 169 006c 43F40073 		orr	r3, r3, #512
 170 0070 5364     		str	r3, [r2, #68]
 171 0072 244B     		ldr	r3, .L7+4
 172 0074 5B6C     		ldr	r3, [r3, #68]
 173 0076 03F40073 		and	r3, r3, #512
 174 007a FB60     		str	r3, [r7, #12]
 175 007c FB68     		ldr	r3, [r7, #12]
 176              	.LBE3:
 117:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 177              		.loc 1 117 0
 178 007e 0223     		movs	r3, #2
 179 0080 7B61     		str	r3, [r7, #20]
 118:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 118 0
 181 0082 0323     		movs	r3, #3
 182 0084 BB61     		str	r3, [r7, #24]
 119:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(FrontLeftSense_GPIO_Port, &GPIO_InitStruct);
 183              		.loc 1 119 0
 184 0086 0023     		movs	r3, #0
 185 0088 FB61     		str	r3, [r7, #28]
 120:Src/stm32f4xx_hal_msp.c **** 
 186              		.loc 1 120 0
ARM GAS  /tmp/ccKkCas2.s 			page 7


 187 008a 07F11403 		add	r3, r7, #20
 188 008e 1946     		mov	r1, r3
 189 0090 1D48     		ldr	r0, .L7+8
 190 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 123:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 191              		.loc 1 123 0
 192 0096 0022     		movs	r2, #0
 193 0098 0021     		movs	r1, #0
 194 009a 1220     		movs	r0, #18
 195 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 124:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 196              		.loc 1 124 0
 197 00a0 1220     		movs	r0, #18
 198 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 199              		.loc 1 153 0
 200 00a6 26E0     		b	.L6
 201              	.L5:
 129:Src/stm32f4xx_hal_msp.c ****   {
 202              		.loc 1 129 0
 203 00a8 7B68     		ldr	r3, [r7, #4]
 204 00aa 1B68     		ldr	r3, [r3]
 205 00ac 184A     		ldr	r2, .L7+16
 206 00ae 9342     		cmp	r3, r2
 207 00b0 21D1     		bne	.L6
 208              	.LBB4:
 135:Src/stm32f4xx_hal_msp.c ****   
 209              		.loc 1 135 0
 210 00b2 0023     		movs	r3, #0
 211 00b4 BB60     		str	r3, [r7, #8]
 212 00b6 134A     		ldr	r2, .L7+4
 213 00b8 124B     		ldr	r3, .L7+4
 214 00ba 5B6C     		ldr	r3, [r3, #68]
 215 00bc 43F48063 		orr	r3, r3, #1024
 216 00c0 5364     		str	r3, [r2, #68]
 217 00c2 104B     		ldr	r3, .L7+4
 218 00c4 5B6C     		ldr	r3, [r3, #68]
 219 00c6 03F48063 		and	r3, r3, #1024
 220 00ca BB60     		str	r3, [r7, #8]
 221 00cc BB68     		ldr	r3, [r7, #8]
 222              	.LBE4:
 140:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 223              		.loc 1 140 0
 224 00ce 0423     		movs	r3, #4
 225 00d0 7B61     		str	r3, [r7, #20]
 141:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 141 0
 227 00d2 0323     		movs	r3, #3
 228 00d4 BB61     		str	r3, [r7, #24]
 142:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(BackLeftSense_GPIO_Port, &GPIO_InitStruct);
 229              		.loc 1 142 0
 230 00d6 0023     		movs	r3, #0
 231 00d8 FB61     		str	r3, [r7, #28]
 143:Src/stm32f4xx_hal_msp.c **** 
 232              		.loc 1 143 0
 233 00da 07F11403 		add	r3, r7, #20
 234 00de 1946     		mov	r1, r3
 235 00e0 0948     		ldr	r0, .L7+8
ARM GAS  /tmp/ccKkCas2.s 			page 8


 236 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 146:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC_IRQn);
 237              		.loc 1 146 0
 238 00e6 0022     		movs	r2, #0
 239 00e8 0021     		movs	r1, #0
 240 00ea 1220     		movs	r0, #18
 241 00ec FFF7FEFF 		bl	HAL_NVIC_SetPriority
 147:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 242              		.loc 1 147 0
 243 00f0 1220     		movs	r0, #18
 244 00f2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 245              	.L6:
 246              		.loc 1 153 0
 247 00f6 00BF     		nop
 248 00f8 2837     		adds	r7, r7, #40
 249              	.LCFI5:
 250              		.cfi_def_cfa_offset 8
 251 00fa BD46     		mov	sp, r7
 252              	.LCFI6:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00fc 80BD     		pop	{r7, pc}
 256              	.L8:
 257 00fe 00BF     		.align	2
 258              	.L7:
 259 0100 00200140 		.word	1073815552
 260 0104 00380240 		.word	1073887232
 261 0108 00000240 		.word	1073872896
 262 010c 00210140 		.word	1073815808
 263 0110 00220140 		.word	1073816064
 264              		.cfi_endproc
 265              	.LFE125:
 267              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_ADC_MspDeInit
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv4-sp-d16
 275              	HAL_ADC_MspDeInit:
 276              	.LFB126:
 154:Src/stm32f4xx_hal_msp.c **** 
 155:Src/stm32f4xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 156:Src/stm32f4xx_hal_msp.c **** {
 277              		.loc 1 156 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              	.LCFI7:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              	.LCFI8:
 288              		.cfi_def_cfa_offset 16
 289 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccKkCas2.s 			page 9


 290              	.LCFI9:
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]
 157:Src/stm32f4xx_hal_msp.c **** 
 158:Src/stm32f4xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 293              		.loc 1 158 0
 294 0008 7B68     		ldr	r3, [r7, #4]
 295 000a 1B68     		ldr	r3, [r3]
 296 000c 184A     		ldr	r2, .L14
 297 000e 9342     		cmp	r3, r2
 298 0010 0AD1     		bne	.L10
 159:Src/stm32f4xx_hal_msp.c ****   {
 160:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 161:Src/stm32f4xx_hal_msp.c **** 
 162:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 163:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 164:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 299              		.loc 1 164 0
 300 0012 184A     		ldr	r2, .L14+4
 301 0014 174B     		ldr	r3, .L14+4
 302 0016 5B6C     		ldr	r3, [r3, #68]
 303 0018 23F48073 		bic	r3, r3, #256
 304 001c 5364     		str	r3, [r2, #68]
 165:Src/stm32f4xx_hal_msp.c ****   
 166:Src/stm32f4xx_hal_msp.c ****     /**ADC1 GPIO Configuration    
 167:Src/stm32f4xx_hal_msp.c ****     PA5     ------> ADC1_IN5
 168:Src/stm32f4xx_hal_msp.c ****     PA6     ------> ADC1_IN6 
 169:Src/stm32f4xx_hal_msp.c ****     */
 170:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, BackRightSense_Pin|FrontRightSense_Pin);
 305              		.loc 1 170 0
 306 001e 6021     		movs	r1, #96
 307 0020 1548     		ldr	r0, .L14+8
 308 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 171:Src/stm32f4xx_hal_msp.c **** 
 172:Src/stm32f4xx_hal_msp.c ****     /* ADC1 interrupt DeInit */
 173:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1:ADC_IRQn disable */
 174:Src/stm32f4xx_hal_msp.c ****     /**
 175:Src/stm32f4xx_hal_msp.c ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 176:Src/stm32f4xx_hal_msp.c ****     * Be aware, disabling shared interrupt may affect other IPs
 177:Src/stm32f4xx_hal_msp.c ****     */
 178:Src/stm32f4xx_hal_msp.c ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 179:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1:ADC_IRQn disable */
 180:Src/stm32f4xx_hal_msp.c **** 
 181:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 182:Src/stm32f4xx_hal_msp.c **** 
 183:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 184:Src/stm32f4xx_hal_msp.c ****   }
 185:Src/stm32f4xx_hal_msp.c ****   else if(hadc->Instance==ADC2)
 186:Src/stm32f4xx_hal_msp.c ****   {
 187:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 188:Src/stm32f4xx_hal_msp.c **** 
 189:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 190:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 191:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC2_CLK_DISABLE();
 192:Src/stm32f4xx_hal_msp.c ****   
 193:Src/stm32f4xx_hal_msp.c ****     /**ADC2 GPIO Configuration    
 194:Src/stm32f4xx_hal_msp.c ****     PA1     ------> ADC2_IN1 
ARM GAS  /tmp/ccKkCas2.s 			page 10


 195:Src/stm32f4xx_hal_msp.c ****     */
 196:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(FrontLeftSense_GPIO_Port, FrontLeftSense_Pin);
 197:Src/stm32f4xx_hal_msp.c **** 
 198:Src/stm32f4xx_hal_msp.c ****     /* ADC2 interrupt DeInit */
 199:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2:ADC_IRQn disable */
 200:Src/stm32f4xx_hal_msp.c ****     /**
 201:Src/stm32f4xx_hal_msp.c ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 202:Src/stm32f4xx_hal_msp.c ****     * Be aware, disabling shared interrupt may affect other IPs
 203:Src/stm32f4xx_hal_msp.c ****     */
 204:Src/stm32f4xx_hal_msp.c ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 205:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC2:ADC_IRQn disable */
 206:Src/stm32f4xx_hal_msp.c **** 
 207:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 208:Src/stm32f4xx_hal_msp.c **** 
 209:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 210:Src/stm32f4xx_hal_msp.c ****   }
 211:Src/stm32f4xx_hal_msp.c ****   else if(hadc->Instance==ADC3)
 212:Src/stm32f4xx_hal_msp.c ****   {
 213:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 214:Src/stm32f4xx_hal_msp.c **** 
 215:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC3_MspDeInit 0 */
 216:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 217:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_ADC3_CLK_DISABLE();
 218:Src/stm32f4xx_hal_msp.c ****   
 219:Src/stm32f4xx_hal_msp.c ****     /**ADC3 GPIO Configuration    
 220:Src/stm32f4xx_hal_msp.c ****     PA2     ------> ADC3_IN2 
 221:Src/stm32f4xx_hal_msp.c ****     */
 222:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(BackLeftSense_GPIO_Port, BackLeftSense_Pin);
 223:Src/stm32f4xx_hal_msp.c **** 
 224:Src/stm32f4xx_hal_msp.c ****     /* ADC3 interrupt DeInit */
 225:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3:ADC_IRQn disable */
 226:Src/stm32f4xx_hal_msp.c ****     /**
 227:Src/stm32f4xx_hal_msp.c ****     * Uncomment the line below to disable the "ADC_IRQn" interrupt
 228:Src/stm32f4xx_hal_msp.c ****     * Be aware, disabling shared interrupt may affect other IPs
 229:Src/stm32f4xx_hal_msp.c ****     */
 230:Src/stm32f4xx_hal_msp.c ****     /* HAL_NVIC_DisableIRQ(ADC_IRQn); */
 231:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC3:ADC_IRQn disable */
 232:Src/stm32f4xx_hal_msp.c **** 
 233:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 234:Src/stm32f4xx_hal_msp.c **** 
 235:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END ADC3_MspDeInit 1 */
 236:Src/stm32f4xx_hal_msp.c ****   }
 237:Src/stm32f4xx_hal_msp.c **** 
 238:Src/stm32f4xx_hal_msp.c **** }
 309              		.loc 1 238 0
 310 0026 1EE0     		b	.L13
 311              	.L10:
 185:Src/stm32f4xx_hal_msp.c ****   {
 312              		.loc 1 185 0
 313 0028 7B68     		ldr	r3, [r7, #4]
 314 002a 1B68     		ldr	r3, [r3]
 315 002c 134A     		ldr	r2, .L14+12
 316 002e 9342     		cmp	r3, r2
 317 0030 0AD1     		bne	.L12
 191:Src/stm32f4xx_hal_msp.c ****   
 318              		.loc 1 191 0
 319 0032 104A     		ldr	r2, .L14+4
ARM GAS  /tmp/ccKkCas2.s 			page 11


 320 0034 0F4B     		ldr	r3, .L14+4
 321 0036 5B6C     		ldr	r3, [r3, #68]
 322 0038 23F40073 		bic	r3, r3, #512
 323 003c 5364     		str	r3, [r2, #68]
 196:Src/stm32f4xx_hal_msp.c **** 
 324              		.loc 1 196 0
 325 003e 0221     		movs	r1, #2
 326 0040 0D48     		ldr	r0, .L14+8
 327 0042 FFF7FEFF 		bl	HAL_GPIO_DeInit
 328              		.loc 1 238 0
 329 0046 0EE0     		b	.L13
 330              	.L12:
 211:Src/stm32f4xx_hal_msp.c ****   {
 331              		.loc 1 211 0
 332 0048 7B68     		ldr	r3, [r7, #4]
 333 004a 1B68     		ldr	r3, [r3]
 334 004c 0C4A     		ldr	r2, .L14+16
 335 004e 9342     		cmp	r3, r2
 336 0050 09D1     		bne	.L13
 217:Src/stm32f4xx_hal_msp.c ****   
 337              		.loc 1 217 0
 338 0052 084A     		ldr	r2, .L14+4
 339 0054 074B     		ldr	r3, .L14+4
 340 0056 5B6C     		ldr	r3, [r3, #68]
 341 0058 23F48063 		bic	r3, r3, #1024
 342 005c 5364     		str	r3, [r2, #68]
 222:Src/stm32f4xx_hal_msp.c **** 
 343              		.loc 1 222 0
 344 005e 0421     		movs	r1, #4
 345 0060 0548     		ldr	r0, .L14+8
 346 0062 FFF7FEFF 		bl	HAL_GPIO_DeInit
 347              	.L13:
 348              		.loc 1 238 0
 349 0066 00BF     		nop
 350 0068 0837     		adds	r7, r7, #8
 351              	.LCFI10:
 352              		.cfi_def_cfa_offset 8
 353 006a BD46     		mov	sp, r7
 354              	.LCFI11:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 006c 80BD     		pop	{r7, pc}
 358              	.L15:
 359 006e 00BF     		.align	2
 360              	.L14:
 361 0070 00200140 		.word	1073815552
 362 0074 00380240 		.word	1073887232
 363 0078 00000240 		.word	1073872896
 364 007c 00210140 		.word	1073815808
 365 0080 00220140 		.word	1073816064
 366              		.cfi_endproc
 367              	.LFE126:
 369              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 370              		.align	1
 371              		.global	HAL_UART_MspInit
 372              		.syntax unified
 373              		.thumb
ARM GAS  /tmp/ccKkCas2.s 			page 12


 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	HAL_UART_MspInit:
 378              	.LFB127:
 239:Src/stm32f4xx_hal_msp.c **** 
 240:Src/stm32f4xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 241:Src/stm32f4xx_hal_msp.c **** {
 379              		.loc 1 241 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 40
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI12:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 8AB0     		sub	sp, sp, #40
 389              	.LCFI13:
 390              		.cfi_def_cfa_offset 48
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI14:
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 242:Src/stm32f4xx_hal_msp.c **** 
 243:Src/stm32f4xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 244:Src/stm32f4xx_hal_msp.c ****   if(huart->Instance==USART1)
 395              		.loc 1 244 0
 396 0008 7B68     		ldr	r3, [r7, #4]
 397 000a 1B68     		ldr	r3, [r3]
 398 000c 2D4A     		ldr	r2, .L20
 399 000e 9342     		cmp	r3, r2
 400 0010 27D1     		bne	.L17
 401              	.LBB5:
 245:Src/stm32f4xx_hal_msp.c ****   {
 246:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 247:Src/stm32f4xx_hal_msp.c **** 
 248:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 249:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 250:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 402              		.loc 1 250 0
 403 0012 0023     		movs	r3, #0
 404 0014 3B61     		str	r3, [r7, #16]
 405 0016 2C4A     		ldr	r2, .L20+4
 406 0018 2B4B     		ldr	r3, .L20+4
 407 001a 5B6C     		ldr	r3, [r3, #68]
 408 001c 43F01003 		orr	r3, r3, #16
 409 0020 5364     		str	r3, [r2, #68]
 410 0022 294B     		ldr	r3, .L20+4
 411 0024 5B6C     		ldr	r3, [r3, #68]
 412 0026 03F01003 		and	r3, r3, #16
 413 002a 3B61     		str	r3, [r7, #16]
 414 002c 3B69     		ldr	r3, [r7, #16]
 415              	.LBE5:
 251:Src/stm32f4xx_hal_msp.c ****   
 252:Src/stm32f4xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 253:Src/stm32f4xx_hal_msp.c ****     PA9     ------> USART1_TX
 254:Src/stm32f4xx_hal_msp.c ****     PA10     ------> USART1_RX 
ARM GAS  /tmp/ccKkCas2.s 			page 13


 255:Src/stm32f4xx_hal_msp.c ****     */
 256:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = MCU_TX_Pin|MCU_RX_Pin;
 416              		.loc 1 256 0
 417 002e 4FF4C063 		mov	r3, #1536
 418 0032 7B61     		str	r3, [r7, #20]
 257:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 419              		.loc 1 257 0
 420 0034 0223     		movs	r3, #2
 421 0036 BB61     		str	r3, [r7, #24]
 258:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 422              		.loc 1 258 0
 423 0038 0123     		movs	r3, #1
 424 003a FB61     		str	r3, [r7, #28]
 259:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 425              		.loc 1 259 0
 426 003c 0323     		movs	r3, #3
 427 003e 3B62     		str	r3, [r7, #32]
 260:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 428              		.loc 1 260 0
 429 0040 0723     		movs	r3, #7
 430 0042 7B62     		str	r3, [r7, #36]
 261:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 431              		.loc 1 261 0
 432 0044 07F11403 		add	r3, r7, #20
 433 0048 1946     		mov	r1, r3
 434 004a 2048     		ldr	r0, .L20+8
 435 004c FFF7FEFF 		bl	HAL_GPIO_Init
 262:Src/stm32f4xx_hal_msp.c **** 
 263:Src/stm32f4xx_hal_msp.c ****     /* USART1 interrupt Init */
 264:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 436              		.loc 1 264 0
 437 0050 0022     		movs	r2, #0
 438 0052 0021     		movs	r1, #0
 439 0054 2520     		movs	r0, #37
 440 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 265:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 441              		.loc 1 265 0
 442 005a 2520     		movs	r0, #37
 443 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 266:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 267:Src/stm32f4xx_hal_msp.c **** 
 268:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 269:Src/stm32f4xx_hal_msp.c ****   }
 270:Src/stm32f4xx_hal_msp.c ****   else if(huart->Instance==USART3)
 271:Src/stm32f4xx_hal_msp.c ****   {
 272:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 273:Src/stm32f4xx_hal_msp.c **** 
 274:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 0 */
 275:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock enable */
 276:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 277:Src/stm32f4xx_hal_msp.c ****   
 278:Src/stm32f4xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 279:Src/stm32f4xx_hal_msp.c ****     PB10     ------> USART3_TX
 280:Src/stm32f4xx_hal_msp.c ****     PB11     ------> USART3_RX 
 281:Src/stm32f4xx_hal_msp.c ****     */
 282:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pin = Debug_Tx_Pin|Debug_RX_Pin;
 283:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /tmp/ccKkCas2.s 			page 14


 284:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 285:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 286:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 287:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 288:Src/stm32f4xx_hal_msp.c **** 
 289:Src/stm32f4xx_hal_msp.c ****     /* USART3 interrupt Init */
 290:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 291:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 292:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 293:Src/stm32f4xx_hal_msp.c **** 
 294:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 1 */
 295:Src/stm32f4xx_hal_msp.c ****   }
 296:Src/stm32f4xx_hal_msp.c **** 
 297:Src/stm32f4xx_hal_msp.c **** }
 444              		.loc 1 297 0
 445 0060 2BE0     		b	.L19
 446              	.L17:
 270:Src/stm32f4xx_hal_msp.c ****   {
 447              		.loc 1 270 0
 448 0062 7B68     		ldr	r3, [r7, #4]
 449 0064 1B68     		ldr	r3, [r3]
 450 0066 1A4A     		ldr	r2, .L20+12
 451 0068 9342     		cmp	r3, r2
 452 006a 26D1     		bne	.L19
 453              	.LBB6:
 276:Src/stm32f4xx_hal_msp.c ****   
 454              		.loc 1 276 0
 455 006c 0023     		movs	r3, #0
 456 006e FB60     		str	r3, [r7, #12]
 457 0070 154A     		ldr	r2, .L20+4
 458 0072 154B     		ldr	r3, .L20+4
 459 0074 1B6C     		ldr	r3, [r3, #64]
 460 0076 43F48023 		orr	r3, r3, #262144
 461 007a 1364     		str	r3, [r2, #64]
 462 007c 124B     		ldr	r3, .L20+4
 463 007e 1B6C     		ldr	r3, [r3, #64]
 464 0080 03F48023 		and	r3, r3, #262144
 465 0084 FB60     		str	r3, [r7, #12]
 466 0086 FB68     		ldr	r3, [r7, #12]
 467              	.LBE6:
 282:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 468              		.loc 1 282 0
 469 0088 4FF44063 		mov	r3, #3072
 470 008c 7B61     		str	r3, [r7, #20]
 283:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 471              		.loc 1 283 0
 472 008e 0223     		movs	r3, #2
 473 0090 BB61     		str	r3, [r7, #24]
 284:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 474              		.loc 1 284 0
 475 0092 0123     		movs	r3, #1
 476 0094 FB61     		str	r3, [r7, #28]
 285:Src/stm32f4xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 477              		.loc 1 285 0
 478 0096 0323     		movs	r3, #3
 479 0098 3B62     		str	r3, [r7, #32]
 286:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccKkCas2.s 			page 15


 480              		.loc 1 286 0
 481 009a 0723     		movs	r3, #7
 482 009c 7B62     		str	r3, [r7, #36]
 287:Src/stm32f4xx_hal_msp.c **** 
 483              		.loc 1 287 0
 484 009e 07F11403 		add	r3, r7, #20
 485 00a2 1946     		mov	r1, r3
 486 00a4 0B48     		ldr	r0, .L20+16
 487 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 290:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 488              		.loc 1 290 0
 489 00aa 0022     		movs	r2, #0
 490 00ac 0021     		movs	r1, #0
 491 00ae 2720     		movs	r0, #39
 492 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 291:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 493              		.loc 1 291 0
 494 00b4 2720     		movs	r0, #39
 495 00b6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 496              	.L19:
 497              		.loc 1 297 0
 498 00ba 00BF     		nop
 499 00bc 2837     		adds	r7, r7, #40
 500              	.LCFI15:
 501              		.cfi_def_cfa_offset 8
 502 00be BD46     		mov	sp, r7
 503              	.LCFI16:
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 00c0 80BD     		pop	{r7, pc}
 507              	.L21:
 508 00c2 00BF     		.align	2
 509              	.L20:
 510 00c4 00100140 		.word	1073811456
 511 00c8 00380240 		.word	1073887232
 512 00cc 00000240 		.word	1073872896
 513 00d0 00480040 		.word	1073760256
 514 00d4 00040240 		.word	1073873920
 515              		.cfi_endproc
 516              	.LFE127:
 518              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 519              		.align	1
 520              		.global	HAL_UART_MspDeInit
 521              		.syntax unified
 522              		.thumb
 523              		.thumb_func
 524              		.fpu fpv4-sp-d16
 526              	HAL_UART_MspDeInit:
 527              	.LFB128:
 298:Src/stm32f4xx_hal_msp.c **** 
 299:Src/stm32f4xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 300:Src/stm32f4xx_hal_msp.c **** {
 528              		.loc 1 300 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccKkCas2.s 			page 16


 533              	.LCFI17:
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 82B0     		sub	sp, sp, #8
 538              	.LCFI18:
 539              		.cfi_def_cfa_offset 16
 540 0004 00AF     		add	r7, sp, #0
 541              	.LCFI19:
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 301:Src/stm32f4xx_hal_msp.c **** 
 302:Src/stm32f4xx_hal_msp.c ****   if(huart->Instance==USART1)
 544              		.loc 1 302 0
 545 0008 7B68     		ldr	r3, [r7, #4]
 546 000a 1B68     		ldr	r3, [r3]
 547 000c 144A     		ldr	r2, .L26
 548 000e 9342     		cmp	r3, r2
 549 0010 0ED1     		bne	.L23
 303:Src/stm32f4xx_hal_msp.c ****   {
 304:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 305:Src/stm32f4xx_hal_msp.c **** 
 306:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 307:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
 308:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 550              		.loc 1 308 0
 551 0012 144A     		ldr	r2, .L26+4
 552 0014 134B     		ldr	r3, .L26+4
 553 0016 5B6C     		ldr	r3, [r3, #68]
 554 0018 23F01003 		bic	r3, r3, #16
 555 001c 5364     		str	r3, [r2, #68]
 309:Src/stm32f4xx_hal_msp.c ****   
 310:Src/stm32f4xx_hal_msp.c ****     /**USART1 GPIO Configuration    
 311:Src/stm32f4xx_hal_msp.c ****     PA9     ------> USART1_TX
 312:Src/stm32f4xx_hal_msp.c ****     PA10     ------> USART1_RX 
 313:Src/stm32f4xx_hal_msp.c ****     */
 314:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, MCU_TX_Pin|MCU_RX_Pin);
 556              		.loc 1 314 0
 557 001e 4FF4C061 		mov	r1, #1536
 558 0022 1148     		ldr	r0, .L26+8
 559 0024 FFF7FEFF 		bl	HAL_GPIO_DeInit
 315:Src/stm32f4xx_hal_msp.c **** 
 316:Src/stm32f4xx_hal_msp.c ****     /* USART1 interrupt DeInit */
 317:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 560              		.loc 1 317 0
 561 0028 2520     		movs	r0, #37
 562 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 318:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 319:Src/stm32f4xx_hal_msp.c **** 
 320:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 321:Src/stm32f4xx_hal_msp.c ****   }
 322:Src/stm32f4xx_hal_msp.c ****   else if(huart->Instance==USART3)
 323:Src/stm32f4xx_hal_msp.c ****   {
 324:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 325:Src/stm32f4xx_hal_msp.c **** 
 326:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 0 */
 327:Src/stm32f4xx_hal_msp.c ****     /* Peripheral clock disable */
ARM GAS  /tmp/ccKkCas2.s 			page 17


 328:Src/stm32f4xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 329:Src/stm32f4xx_hal_msp.c ****   
 330:Src/stm32f4xx_hal_msp.c ****     /**USART3 GPIO Configuration    
 331:Src/stm32f4xx_hal_msp.c ****     PB10     ------> USART3_TX
 332:Src/stm32f4xx_hal_msp.c ****     PB11     ------> USART3_RX 
 333:Src/stm32f4xx_hal_msp.c ****     */
 334:Src/stm32f4xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, Debug_Tx_Pin|Debug_RX_Pin);
 335:Src/stm32f4xx_hal_msp.c **** 
 336:Src/stm32f4xx_hal_msp.c ****     /* USART3 interrupt DeInit */
 337:Src/stm32f4xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 338:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 339:Src/stm32f4xx_hal_msp.c **** 
 340:Src/stm32f4xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 1 */
 341:Src/stm32f4xx_hal_msp.c ****   }
 342:Src/stm32f4xx_hal_msp.c **** 
 343:Src/stm32f4xx_hal_msp.c **** }
 563              		.loc 1 343 0
 564 002e 12E0     		b	.L25
 565              	.L23:
 322:Src/stm32f4xx_hal_msp.c ****   {
 566              		.loc 1 322 0
 567 0030 7B68     		ldr	r3, [r7, #4]
 568 0032 1B68     		ldr	r3, [r3]
 569 0034 0D4A     		ldr	r2, .L26+12
 570 0036 9342     		cmp	r3, r2
 571 0038 0DD1     		bne	.L25
 328:Src/stm32f4xx_hal_msp.c ****   
 572              		.loc 1 328 0
 573 003a 0A4A     		ldr	r2, .L26+4
 574 003c 094B     		ldr	r3, .L26+4
 575 003e 1B6C     		ldr	r3, [r3, #64]
 576 0040 23F48023 		bic	r3, r3, #262144
 577 0044 1364     		str	r3, [r2, #64]
 334:Src/stm32f4xx_hal_msp.c **** 
 578              		.loc 1 334 0
 579 0046 4FF44061 		mov	r1, #3072
 580 004a 0948     		ldr	r0, .L26+16
 581 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 337:Src/stm32f4xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 582              		.loc 1 337 0
 583 0050 2720     		movs	r0, #39
 584 0052 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 585              	.L25:
 586              		.loc 1 343 0
 587 0056 00BF     		nop
 588 0058 0837     		adds	r7, r7, #8
 589              	.LCFI20:
 590              		.cfi_def_cfa_offset 8
 591 005a BD46     		mov	sp, r7
 592              	.LCFI21:
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 005c 80BD     		pop	{r7, pc}
 596              	.L27:
 597 005e 00BF     		.align	2
 598              	.L26:
 599 0060 00100140 		.word	1073811456
ARM GAS  /tmp/ccKkCas2.s 			page 18


 600 0064 00380240 		.word	1073887232
 601 0068 00000240 		.word	1073872896
 602 006c 00480040 		.word	1073760256
 603 0070 00040240 		.word	1073873920
 604              		.cfi_endproc
 605              	.LFE128:
 607              		.text
 608              	.Letext0:
 609              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 610              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 611              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 612              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 613              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 614              		.file 7 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 615              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 616              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 617              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 618              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 619              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 620              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 621              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 622              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  /tmp/ccKkCas2.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_msp.c
     /tmp/ccKkCas2.s:18     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccKkCas2.s:25     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccKkCas2.s:85     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccKkCas2.s:92     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccKkCas2.s:259    .text.HAL_ADC_MspInit:0000000000000100 $d
     /tmp/ccKkCas2.s:268    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccKkCas2.s:275    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccKkCas2.s:361    .text.HAL_ADC_MspDeInit:0000000000000070 $d
     /tmp/ccKkCas2.s:370    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccKkCas2.s:377    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccKkCas2.s:510    .text.HAL_UART_MspInit:00000000000000c4 $d
     /tmp/ccKkCas2.s:519    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccKkCas2.s:526    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccKkCas2.s:599    .text.HAL_UART_MspDeInit:0000000000000060 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
