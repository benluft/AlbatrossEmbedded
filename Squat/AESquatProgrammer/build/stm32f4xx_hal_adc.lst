ARM GAS  /tmp/ccsc4Dzg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_ADC_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADC_Init:
  26              	.LFB124:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @file    stm32f4xx_hal_adc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + IO operation functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           + State and errors functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     ##### ADC Peripheral features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..] 
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Interrupt generation at the end of conversion, end of injected conversion,  
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and in case of analog watchdog or overrun events
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Single and continuous conversion modes.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Scan mode for automatic conversion of channel 0 to channel x.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Data alignment with in-built data coherency.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Channel-wise programmable sampling time.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) External trigger option with configurable polarity for both regular and 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       injected conversion.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Dual/Triple mode (on devices with 2 ADCs or more).
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable DMA data storage in Dual/Triple ADC mode. 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configurable delay between conversions in Dual/Triple interleaved mode.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC conversion type (refer to the datasheets).
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       slower speed.
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC input range: VREF(minus) = VIN = VREF(plus).
ARM GAS  /tmp/ccsc4Dzg.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) DMA request generation during regular channel conversion.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                      ##### How to use this driver #####
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#)Initialize the ADC low level resources by implementing the HAL_ADC_MspInit():
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) Enable the ADC interface clock using __HAL_RCC_ADC_CLK_ENABLE()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) ADC pins configuration
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the clock for the ADC GPIOs using the following function:
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    __HAL_RCC_GPIOx_CLK_ENABLE()  
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure these ADC pins in analog mode using HAL_GPIO_Init() 
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using interrupts (e.g. HAL_ADC_Start_IT())
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the ADC interrupt priority using HAL_NVIC_SetPriority()
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the ADC IRQ handler using HAL_NVIC_EnableIRQ()
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) In ADC IRQ handler, call HAL_ADC_IRQHandler()
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (##) In case of using DMA to control data transfer (e.g. HAL_ADC_Start_DMA())
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE()
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure and enable two DMA streams stream for managing data
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  transfer from peripheral to memory (output stream)
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Associate the initialized DMA handle to the CRYP DMA handle
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  using  __HAL_LINKDMA()
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              (+++) Configure the priority and enable the NVIC for the transfer complete
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  interrupt on the two DMA Streams. The output stream should have higher
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                  priority than the input stream.
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     *** Configuration of ADC, groups regular/injected, channels parameters ***
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the ADC parameters (resolution, data alignment, ...)
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and regular group parameters (conversion trigger, sequencer, ...)
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_Init().
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Configure the channels for regular group parameters (channel number, 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into regular group)
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADC_ConfigChannel().
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the injected group parameters (conversion trigger, 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       sequencer, ..., of injected group)
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       and the channels for injected group parameters (channel number, 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       channel rank into sequencer, ..., into injected group)
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       using function HAL_ADCEx_InjectedConfigChannel().
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, configure the analog watchdog parameters (channels
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       monitored, thresholds, ...) using function HAL_ADC_AnalogWDGConfig().
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, for devices with several ADC instances: configure the 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       multimode parameters using function HAL_ADCEx_MultiModeConfigChannel().
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                        *** Execution of ADC conversions ***
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]  
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC driver can be used among three modes: polling, interruption,
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       transfer by DMA.    
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Polling mode IO operation ***
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      =================================
ARM GAS  /tmp/ccsc4Dzg.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start() 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Wait for end of conversion using HAL_ADC_PollForConversion(), at this stage
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            user can specify the value of timeout according to his end application      
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) To read the ADC converted values, use the HAL_ADC_GetValue() function.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop()
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** Interrupt mode IO operation ***    
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ===================================
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_IT() 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Use HAL_ADC_IRQHandler() called under ADC_IRQHandler() Interrupt subroutine
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At ADC end of conversion HAL_ADC_ConvCpltCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of ADC Error, HAL_ADC_ErrorCallback() function is executed and user can 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_IT()     
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** DMA mode IO operation ***    
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ==============================
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]    
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Start the ADC peripheral using HAL_ADC_Start_DMA(), at this stage the user specify the l
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            of data to be transferred at each end of conversion 
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) At The end of data transfer by HAL_ADC_ConvCpltCallback() function is executed and user 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ConvCpltCallback 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) In case of transfer Error, HAL_ADC_ErrorCallback() function is executed and user can 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****            add his own code by customization of function pointer HAL_ADC_ErrorCallback
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (+) Stop the ADC peripheral using HAL_ADC_Stop_DMA()
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                     
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      *** ADC HAL driver macros list ***
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      ============================================= 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..]
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        Below the list of most used macros in ADC HAL driver.
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE : Enable the ADC peripheral
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE : Disable the ADC peripheral
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_ENABLE_IT: Enable the ADC end of conversion interrupt
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_DISABLE_IT: Disable the ADC end of conversion interrupt
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_IT_SOURCE: Check if the specified ADC interrupt source is enabled or disabl
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_CLEAR_FLAG: Clear the ADC's pending flags
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) __HAL_ADC_GET_FLAG: Get the selected ADC's flag status
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) ADC_GET_RESOLUTION: Return resolution bits in CR1 register 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      [..] 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (@) You can refer to the ADC HAL driver header file for more useful macros 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       *** Deinitialization of ADC ***
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ==============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Disable the ADC interface
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock can be hard reset and disabled at RCC top level.
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Hard reset of ADC peripherals
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           using macro __HAL_RCC_ADC_FORCE_RESET(), __HAL_RCC_ADC_RELEASE_RESET().
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) ADC clock disable using the equivalent macro/functions as configuration step.
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) Example:
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                    other device clock parameters configuration:
ARM GAS  /tmp/ccsc4Dzg.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_GetOscConfig(&RCC_OscInitStructure);
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSIState = RCC_HSI_OFF; (if not used for system clock)
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) ADC pins configuration
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the clock for the ADC GPIOs using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of ADC with interruptions:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (++) Disable the NVIC for ADC using function HAL_NVIC_DisableIRQ(ADCx_IRQn)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   (#) Optionally, in case of usage of DMA:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Deinitialize the DMA using function HAL_DMA_DeInit().
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (++) Disable the NVIC for DMA using function HAL_NVIC_DisableIRQ(DMAx_Channelx_IRQn)   
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     @endverbatim
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @attention
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *      without specific prior written permission.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ******************************************************************************
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #include "stm32f4xx_hal.h"
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup STM32F4xx_HAL_Driver
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC ADC
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief ADC driver modules
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */ 
ARM GAS  /tmp/ccsc4Dzg.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc);
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions 
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim    
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) De-initialize the ADC. 
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct and initializes the ADC MSP.
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         ClockPrescaler, Resolution, Data Alignment and number of conversion), however,
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the rest of the configuration parameters are specific to the regular
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         channels group (scan mode activation, continuous mode activation,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         External trigger source and edge, DMA continuous request after the  
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         last transfer and End of conversion selection).
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *             
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
  28              		.loc 1 257 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccsc4Dzg.s 			page 6


  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  44              		.loc 1 258 0
  45 0008 0023     		movs	r3, #0
  46 000a FB73     		strb	r3, [r7, #15]
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
  47              		.loc 1 261 0
  48 000c 7B68     		ldr	r3, [r7, #4]
  49 000e 002B     		cmp	r3, #0
  50 0010 01D1     		bne	.L2
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
  51              		.loc 1 263 0
  52 0012 0123     		movs	r3, #1
  53 0014 33E0     		b	.L3
  54              	.L2:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ScanConvMode));
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG(hadc->Init.ExternalTrigConv));
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
  55              		.loc 1 284 0
  56 0016 7B68     		ldr	r3, [r7, #4]
  57 0018 1B6C     		ldr	r3, [r3, #64]
  58 001a 002B     		cmp	r3, #0
  59 001c 09D1     		bne	.L4
ARM GAS  /tmp/ccsc4Dzg.s 			page 7


 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Initialize ADC error code */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  60              		.loc 1 287 0
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 5A64     		str	r2, [r3, #68]
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Allocate lock resource and initialize it */
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
  64              		.loc 1 290 0
  65 0024 7B68     		ldr	r3, [r7, #4]
  66 0026 0022     		movs	r2, #0
  67 0028 83F83C20 		strb	r2, [r3, #60]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Init the low level hardware */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
  68              		.loc 1 293 0
  69 002c 7868     		ldr	r0, [r7, #4]
  70 002e FFF7FEFF 		bl	HAL_ADC_MspInit
  71              	.L4:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  72              		.loc 1 298 0
  73 0032 7B68     		ldr	r3, [r7, #4]
  74 0034 1B6C     		ldr	r3, [r3, #64]
  75 0036 03F01003 		and	r3, r3, #16
  76 003a 002B     		cmp	r3, #0
  77 003c 18D1     		bne	.L5
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  78              		.loc 1 301 0
  79 003e 7B68     		ldr	r3, [r7, #4]
  80 0040 1B6C     		ldr	r3, [r3, #64]
  81 0042 23F48853 		bic	r3, r3, #4352
  82 0046 23F00203 		bic	r3, r3, #2
  83 004a 43F00202 		orr	r2, r3, #2
  84 004e 7B68     		ldr	r3, [r7, #4]
  85 0050 1A64     		str	r2, [r3, #64]
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC parameters */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_Init(hadc);
  86              		.loc 1 306 0
  87 0052 7868     		ldr	r0, [r7, #4]
  88 0054 FFF7FEFF 		bl	ADC_Init
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
  89              		.loc 1 309 0
  90 0058 7B68     		ldr	r3, [r7, #4]
  91 005a 0022     		movs	r2, #0
ARM GAS  /tmp/ccsc4Dzg.s 			page 8


  92 005c 5A64     		str	r2, [r3, #68]
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the ADC state */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
  93              		.loc 1 312 0
  94 005e 7B68     		ldr	r3, [r7, #4]
  95 0060 1B6C     		ldr	r3, [r3, #64]
  96 0062 23F00303 		bic	r3, r3, #3
  97 0066 43F00102 		orr	r2, r3, #1
  98 006a 7B68     		ldr	r3, [r7, #4]
  99 006c 1A64     		str	r2, [r3, #64]
 100 006e 01E0     		b	.L6
 101              	.L5:
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 102              		.loc 1 318 0
 103 0070 0123     		movs	r3, #1
 104 0072 FB73     		strb	r3, [r7, #15]
 105              	.L6:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Release Lock */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 106              		.loc 1 322 0
 107 0074 7B68     		ldr	r3, [r7, #4]
 108 0076 0022     		movs	r2, #0
 109 0078 83F83C20 		strb	r2, [r3, #60]
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 110              		.loc 1 325 0
 111 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 112              	.L3:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 113              		.loc 1 326 0
 114 007e 1846     		mov	r0, r3
 115 0080 1037     		adds	r7, r7, #16
 116              	.LCFI3:
 117              		.cfi_def_cfa_offset 8
 118 0082 BD46     		mov	sp, r7
 119              	.LCFI4:
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0084 80BD     		pop	{r7, pc}
 123              		.cfi_endproc
 124              	.LFE124:
 126              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 127              		.align	1
 128              		.global	HAL_ADC_DeInit
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccsc4Dzg.s 			page 9


 134              	HAL_ADC_DeInit:
 135              	.LFB125:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Deinitializes the ADCx peripheral registers to their default reset values. 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 136              		.loc 1 335 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 16
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              	.LCFI5:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 84B0     		sub	sp, sp, #16
 146              	.LCFI6:
 147              		.cfi_def_cfa_offset 24
 148 0004 00AF     		add	r7, sp, #0
 149              	.LCFI7:
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 152              		.loc 1 336 0
 153 0008 0023     		movs	r3, #0
 154 000a FB73     		strb	r3, [r7, #15]
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check ADC handle */
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc == NULL)
 155              		.loc 1 339 0
 156 000c 7B68     		ldr	r3, [r7, #4]
 157 000e 002B     		cmp	r3, #0
 158 0010 01D1     		bne	.L8
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 159              		.loc 1 341 0
 160 0012 0123     		movs	r3, #1
 161 0014 22E0     		b	.L9
 162              	.L8:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC state */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 163              		.loc 1 348 0
 164 0016 7B68     		ldr	r3, [r7, #4]
 165 0018 1B6C     		ldr	r3, [r3, #64]
 166 001a 43F00202 		orr	r2, r3, #2
 167 001e 7B68     		ldr	r3, [r7, #4]
 168 0020 1A64     		str	r2, [r3, #64]
ARM GAS  /tmp/ccsc4Dzg.s 			page 10


 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 169              		.loc 1 352 0
 170 0022 7B68     		ldr	r3, [r7, #4]
 171 0024 1B68     		ldr	r3, [r3]
 172 0026 7A68     		ldr	r2, [r7, #4]
 173 0028 1268     		ldr	r2, [r2]
 174 002a 9268     		ldr	r2, [r2, #8]
 175 002c 22F00102 		bic	r2, r2, #1
 176 0030 9A60     		str	r2, [r3, #8]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* correctly completed.                                                     */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 177              		.loc 1 356 0
 178 0032 7B68     		ldr	r3, [r7, #4]
 179 0034 1B68     		ldr	r3, [r3]
 180 0036 9B68     		ldr	r3, [r3, #8]
 181 0038 03F00103 		and	r3, r3, #1
 182 003c 002B     		cmp	r3, #0
 183 003e 08D1     		bne	.L10
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DeInit the low level hardware */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 184              		.loc 1 359 0
 185 0040 7868     		ldr	r0, [r7, #4]
 186 0042 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to none */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 187              		.loc 1 362 0
 188 0046 7B68     		ldr	r3, [r7, #4]
 189 0048 0022     		movs	r2, #0
 190 004a 5A64     		str	r2, [r3, #68]
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->State = HAL_ADC_STATE_RESET;
 191              		.loc 1 365 0
 192 004c 7B68     		ldr	r3, [r7, #4]
 193 004e 0022     		movs	r2, #0
 194 0050 1A64     		str	r2, [r3, #64]
 195              	.L10:
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 196              		.loc 1 369 0
 197 0052 7B68     		ldr	r3, [r7, #4]
 198 0054 0022     		movs	r2, #0
 199 0056 83F83C20 		strb	r2, [r3, #60]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 200              		.loc 1 372 0
 201 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccsc4Dzg.s 			page 11


 202              	.L9:
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 203              		.loc 1 373 0
 204 005c 1846     		mov	r0, r3
 205 005e 1037     		adds	r7, r7, #16
 206              	.LCFI8:
 207              		.cfi_def_cfa_offset 8
 208 0060 BD46     		mov	sp, r7
 209              	.LCFI9:
 210              		.cfi_def_cfa_register 13
 211              		@ sp needed
 212 0062 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE125:
 216              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 217              		.align	1
 218              		.weak	HAL_ADC_MspInit
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	HAL_ADC_MspInit:
 225              	.LFB126:
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 226              		.loc 1 382 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              	.LCFI10:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 0002 83B0     		sub	sp, sp, #12
 236              	.LCFI11:
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI12:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspInit could be implemented in the user file
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 242              		.loc 1 388 0
 243 0008 00BF     		nop
 244 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccsc4Dzg.s 			page 12


 245              	.LCFI13:
 246              		.cfi_def_cfa_offset 4
 247 000c BD46     		mov	sp, r7
 248              	.LCFI14:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 000e 5DF8047B 		ldr	r7, [sp], #4
 252              	.LCFI15:
 253              		.cfi_restore 7
 254              		.cfi_def_cfa_offset 0
 255 0012 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE126:
 259              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 260              		.align	1
 261              		.weak	HAL_ADC_MspDeInit
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_ADC_MspDeInit:
 268              	.LFB127:
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 269              		.loc 1 397 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274 0000 80B4     		push	{r7}
 275              	.LCFI16:
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 7, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              	.LCFI17:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI18:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_MspDeInit could be implemented in the user file
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */ 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 285              		.loc 1 403 0
 286 0008 00BF     		nop
 287 000a 0C37     		adds	r7, r7, #12
 288              	.LCFI19:
ARM GAS  /tmp/ccsc4Dzg.s 			page 13


 289              		.cfi_def_cfa_offset 4
 290 000c BD46     		mov	sp, r7
 291              	.LCFI20:
 292              		.cfi_def_cfa_register 13
 293              		@ sp needed
 294 000e 5DF8047B 		ldr	r7, [sp], #4
 295              	.LCFI21:
 296              		.cfi_restore 7
 297              		.cfi_def_cfa_offset 0
 298 0012 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE127:
 302              		.section	.text.HAL_ADC_Start,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_ADC_Start
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	HAL_ADC_Start:
 311              	.LFB128:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 IO operation functions
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief    IO operation functions 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### IO operation functions #####
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel.
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel.
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable interrupt.
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable interrupt.
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Start conversion of regular channel and enable DMA transfer.
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Stop conversion of regular channel and disable DMA transfer.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Handle ADC interrupt request. 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC and starts conversion of the regular channels.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 312              		.loc 1 436 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccsc4Dzg.s 			page 14


 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI22:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 85B0     		sub	sp, sp, #20
 322              	.LCFI23:
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI24:
 326              		.cfi_def_cfa_register 7
 327 0006 7860     		str	r0, [r7, #4]
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 328              		.loc 1 437 0
 329 0008 0023     		movs	r3, #0
 330 000a BB60     		str	r3, [r7, #8]
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 331              		.loc 1 445 0
 332 000c 7B68     		ldr	r3, [r7, #4]
 333 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 334 0012 012B     		cmp	r3, #1
 335 0014 01D1     		bne	.L14
 336              		.loc 1 445 0 is_stmt 0 discriminator 1
 337 0016 0223     		movs	r3, #2
 338 0018 89E0     		b	.L15
 339              	.L14:
 340              		.loc 1 445 0 discriminator 2
 341 001a 7B68     		ldr	r3, [r7, #4]
 342 001c 0122     		movs	r2, #1
 343 001e 83F83C20 		strb	r2, [r3, #60]
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 344              		.loc 1 450 0 is_stmt 1 discriminator 2
 345 0022 7B68     		ldr	r3, [r7, #4]
 346 0024 1B68     		ldr	r3, [r3]
 347 0026 9B68     		ldr	r3, [r3, #8]
 348 0028 03F00103 		and	r3, r3, #1
 349 002c 012B     		cmp	r3, #1
 350 002e 18D0     		beq	.L16
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 351              		.loc 1 453 0
 352 0030 7B68     		ldr	r3, [r7, #4]
 353 0032 1B68     		ldr	r3, [r3]
 354 0034 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 15


 355 0036 1268     		ldr	r2, [r2]
 356 0038 9268     		ldr	r2, [r2, #8]
 357 003a 42F00102 		orr	r2, r2, #1
 358 003e 9A60     		str	r2, [r3, #8]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 359              		.loc 1 457 0
 360 0040 3E4B     		ldr	r3, .L25
 361 0042 1B68     		ldr	r3, [r3]
 362 0044 3E4A     		ldr	r2, .L25+4
 363 0046 A2FB0323 		umull	r2, r3, r2, r3
 364 004a 9A0C     		lsrs	r2, r3, #18
 365 004c 1346     		mov	r3, r2
 366 004e 5B00     		lsls	r3, r3, #1
 367 0050 1344     		add	r3, r3, r2
 368 0052 BB60     		str	r3, [r7, #8]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 369              		.loc 1 458 0
 370 0054 02E0     		b	.L17
 371              	.L18:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 372              		.loc 1 460 0
 373 0056 BB68     		ldr	r3, [r7, #8]
 374 0058 013B     		subs	r3, r3, #1
 375 005a BB60     		str	r3, [r7, #8]
 376              	.L17:
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 377              		.loc 1 458 0
 378 005c BB68     		ldr	r3, [r7, #8]
 379 005e 002B     		cmp	r3, #0
 380 0060 F9D1     		bne	.L18
 381              	.L16:
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 382              		.loc 1 465 0
 383 0062 7B68     		ldr	r3, [r7, #4]
 384 0064 1B68     		ldr	r3, [r3]
 385 0066 9B68     		ldr	r3, [r3, #8]
 386 0068 03F00103 		and	r3, r3, #1
 387 006c 002B     		cmp	r3, #0
 388 006e 5DD0     		beq	.L19
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 389              		.loc 1 470 0
 390 0070 7B68     		ldr	r3, [r7, #4]
 391 0072 1B6C     		ldr	r3, [r3, #64]
 392 0074 23F4E063 		bic	r3, r3, #1792
 393 0078 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccsc4Dzg.s 			page 16


 394 007c 43F48072 		orr	r2, r3, #256
 395 0080 7B68     		ldr	r3, [r7, #4]
 396 0082 1A64     		str	r2, [r3, #64]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 397              		.loc 1 476 0
 398 0084 7B68     		ldr	r3, [r7, #4]
 399 0086 1B68     		ldr	r3, [r3]
 400 0088 5B68     		ldr	r3, [r3, #4]
 401 008a 03F48063 		and	r3, r3, #1024
 402 008e 002B     		cmp	r3, #0
 403 0090 07D0     		beq	.L20
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 404              		.loc 1 478 0
 405 0092 7B68     		ldr	r3, [r7, #4]
 406 0094 1B6C     		ldr	r3, [r3, #64]
 407 0096 23F44053 		bic	r3, r3, #12288
 408 009a 43F48052 		orr	r2, r3, #4096
 409 009e 7B68     		ldr	r3, [r7, #4]
 410 00a0 1A64     		str	r2, [r3, #64]
 411              	.L20:
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 412              		.loc 1 482 0
 413 00a2 7B68     		ldr	r3, [r7, #4]
 414 00a4 1B6C     		ldr	r3, [r3, #64]
 415 00a6 03F48053 		and	r3, r3, #4096
 416 00aa 002B     		cmp	r3, #0
 417 00ac 06D0     		beq	.L21
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 418              		.loc 1 485 0
 419 00ae 7B68     		ldr	r3, [r7, #4]
 420 00b0 5B6C     		ldr	r3, [r3, #68]
 421 00b2 23F00602 		bic	r2, r3, #6
 422 00b6 7B68     		ldr	r3, [r7, #4]
 423 00b8 5A64     		str	r2, [r3, #68]
 424 00ba 02E0     		b	.L22
 425              	.L21:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 426              		.loc 1 490 0
 427 00bc 7B68     		ldr	r3, [r7, #4]
 428 00be 0022     		movs	r2, #0
 429 00c0 5A64     		str	r2, [r3, #68]
 430              	.L22:
ARM GAS  /tmp/ccsc4Dzg.s 			page 17


 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     } 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 431              		.loc 1 496 0
 432 00c2 7B68     		ldr	r3, [r7, #4]
 433 00c4 0022     		movs	r2, #0
 434 00c6 83F83C20 		strb	r2, [r3, #60]
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 435              		.loc 1 501 0
 436 00ca 1E4B     		ldr	r3, .L25+8
 437 00cc FB60     		str	r3, [r7, #12]
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 438              		.loc 1 505 0
 439 00ce 7B68     		ldr	r3, [r7, #4]
 440 00d0 1B68     		ldr	r3, [r3]
 441 00d2 6FF02202 		mvn	r2, #34
 442 00d6 1A60     		str	r2, [r3]
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 443              		.loc 1 508 0
 444 00d8 FB68     		ldr	r3, [r7, #12]
 445 00da 5B68     		ldr	r3, [r3, #4]
 446 00dc 03F01F03 		and	r3, r3, #31
 447 00e0 002B     		cmp	r3, #0
 448 00e2 0FD1     		bne	.L23
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 449              		.loc 1 511 0
 450 00e4 7B68     		ldr	r3, [r7, #4]
 451 00e6 1B68     		ldr	r3, [r3]
 452 00e8 9B68     		ldr	r3, [r3, #8]
 453 00ea 03F04053 		and	r3, r3, #805306368
 454 00ee 002B     		cmp	r3, #0
 455 00f0 1CD1     		bne	.L19
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 456              		.loc 1 514 0
 457 00f2 7B68     		ldr	r3, [r7, #4]
 458 00f4 1B68     		ldr	r3, [r3]
 459 00f6 7A68     		ldr	r2, [r7, #4]
 460 00f8 1268     		ldr	r2, [r2]
 461 00fa 9268     		ldr	r2, [r2, #8]
 462 00fc 42F08042 		orr	r2, r2, #1073741824
 463 0100 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccsc4Dzg.s 			page 18


 464 0102 13E0     		b	.L19
 465              	.L23:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 466              		.loc 1 520 0
 467 0104 7B68     		ldr	r3, [r7, #4]
 468 0106 1B68     		ldr	r3, [r3]
 469 0108 0F4A     		ldr	r2, .L25+12
 470 010a 9342     		cmp	r3, r2
 471 010c 0ED1     		bne	.L19
 472              		.loc 1 520 0 is_stmt 0 discriminator 1
 473 010e 7B68     		ldr	r3, [r7, #4]
 474 0110 1B68     		ldr	r3, [r3]
 475 0112 9B68     		ldr	r3, [r3, #8]
 476 0114 03F04053 		and	r3, r3, #805306368
 477 0118 002B     		cmp	r3, #0
 478 011a 07D1     		bne	.L19
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 479              		.loc 1 523 0 is_stmt 1
 480 011c 7B68     		ldr	r3, [r7, #4]
 481 011e 1B68     		ldr	r3, [r3]
 482 0120 7A68     		ldr	r2, [r7, #4]
 483 0122 1268     		ldr	r2, [r2]
 484 0124 9268     		ldr	r2, [r2, #8]
 485 0126 42F08042 		orr	r2, r2, #1073741824
 486 012a 9A60     		str	r2, [r3, #8]
 487              	.L19:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 488              		.loc 1 529 0
 489 012c 0023     		movs	r3, #0
 490              	.L15:
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 491              		.loc 1 530 0
 492 012e 1846     		mov	r0, r3
 493 0130 1437     		adds	r7, r7, #20
 494              	.LCFI25:
 495              		.cfi_def_cfa_offset 4
 496 0132 BD46     		mov	sp, r7
 497              	.LCFI26:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0134 5DF8047B 		ldr	r7, [sp], #4
 501              	.LCFI27:
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 0138 7047     		bx	lr
ARM GAS  /tmp/ccsc4Dzg.s 			page 19


 505              	.L26:
 506 013a 00BF     		.align	2
 507              	.L25:
 508 013c 00000000 		.word	SystemCoreClock
 509 0140 83DE1B43 		.word	1125899907
 510 0144 00230140 		.word	1073816320
 511 0148 00200140 		.word	1073815552
 512              		.cfi_endproc
 513              	.LFE128:
 515              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_ADC_Stop
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	HAL_ADC_Stop:
 524              	.LFB129:
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC and stop conversion of regular channels.
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 525              		.loc 1 543 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              	.LCFI28:
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 83B0     		sub	sp, sp, #12
 535              	.LCFI29:
 536              		.cfi_def_cfa_offset 16
 537 0004 00AF     		add	r7, sp, #0
 538              	.LCFI30:
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 541              		.loc 1 548 0
 542 0008 7B68     		ldr	r3, [r7, #4]
 543 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 544 000e 012B     		cmp	r3, #1
 545 0010 01D1     		bne	.L28
ARM GAS  /tmp/ccsc4Dzg.s 			page 20


 546              		.loc 1 548 0 is_stmt 0 discriminator 1
 547 0012 0223     		movs	r3, #2
 548 0014 21E0     		b	.L29
 549              	.L28:
 550              		.loc 1 548 0 discriminator 2
 551 0016 7B68     		ldr	r3, [r7, #4]
 552 0018 0122     		movs	r2, #1
 553 001a 83F83C20 		strb	r2, [r3, #60]
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 554              		.loc 1 552 0 is_stmt 1 discriminator 2
 555 001e 7B68     		ldr	r3, [r7, #4]
 556 0020 1B68     		ldr	r3, [r3]
 557 0022 7A68     		ldr	r2, [r7, #4]
 558 0024 1268     		ldr	r2, [r2]
 559 0026 9268     		ldr	r2, [r2, #8]
 560 0028 22F00102 		bic	r2, r2, #1
 561 002c 9A60     		str	r2, [r3, #8]
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 562              		.loc 1 555 0 discriminator 2
 563 002e 7B68     		ldr	r3, [r7, #4]
 564 0030 1B68     		ldr	r3, [r3]
 565 0032 9B68     		ldr	r3, [r3, #8]
 566 0034 03F00103 		and	r3, r3, #1
 567 0038 002B     		cmp	r3, #0
 568 003a 09D1     		bne	.L30
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 569              		.loc 1 558 0
 570 003c 7B68     		ldr	r3, [r7, #4]
 571 003e 1B6C     		ldr	r3, [r3, #64]
 572 0040 23F48853 		bic	r3, r3, #4352
 573 0044 23F00103 		bic	r3, r3, #1
 574 0048 43F00102 		orr	r2, r3, #1
 575 004c 7B68     		ldr	r3, [r7, #4]
 576 004e 1A64     		str	r2, [r3, #64]
 577              	.L30:
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 578              		.loc 1 564 0
 579 0050 7B68     		ldr	r3, [r7, #4]
 580 0052 0022     		movs	r2, #0
 581 0054 83F83C20 		strb	r2, [r3, #60]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 582              		.loc 1 567 0
 583 0058 0023     		movs	r3, #0
ARM GAS  /tmp/ccsc4Dzg.s 			page 21


 584              	.L29:
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 585              		.loc 1 568 0
 586 005a 1846     		mov	r0, r3
 587 005c 0C37     		adds	r7, r7, #12
 588              	.LCFI31:
 589              		.cfi_def_cfa_offset 4
 590 005e BD46     		mov	sp, r7
 591              	.LCFI32:
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0060 5DF8047B 		ldr	r7, [sp], #4
 595              	.LCFI33:
 596              		.cfi_restore 7
 597              		.cfi_def_cfa_offset 0
 598 0064 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE129:
 602              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 603              		.align	1
 604              		.global	HAL_ADC_PollForConversion
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu fpv4-sp-d16
 610              	HAL_ADC_PollForConversion:
 611              	.LFB130:
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for regular conversion complete
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         conversion) are cleared by this function.
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         be performed on the complete sequence.
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.  
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 612              		.loc 1 586 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 16
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              	.LCFI34:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 84B0     		sub	sp, sp, #16
 622              	.LCFI35:
 623              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccsc4Dzg.s 			page 22


 624 0004 00AF     		add	r7, sp, #0
 625              	.LCFI36:
 626              		.cfi_def_cfa_register 7
 627 0006 7860     		str	r0, [r7, #4]
 628 0008 3960     		str	r1, [r7]
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 629              		.loc 1 587 0
 630 000a 0023     		movs	r3, #0
 631 000c FB60     		str	r3, [r7, #12]
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Verification that ADC configuration is compliant with polling for      */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* each conversion:                                                       */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* several ranks and polling for end of each conversion.                  */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For code simplicity sake, this particular case is generalized to       */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* ADC configured in DMA mode and polling for end of each conversion.     */
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 632              		.loc 1 595 0
 633 000e 7B68     		ldr	r3, [r7, #4]
 634 0010 1B68     		ldr	r3, [r3]
 635 0012 9B68     		ldr	r3, [r3, #8]
 636 0014 03F48063 		and	r3, r3, #1024
 637 0018 002B     		cmp	r3, #0
 638 001a 12D0     		beq	.L32
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 639              		.loc 1 596 0 discriminator 1
 640 001c 7B68     		ldr	r3, [r7, #4]
 641 001e 1B68     		ldr	r3, [r3]
 642 0020 9B68     		ldr	r3, [r3, #8]
 643 0022 03F48073 		and	r3, r3, #256
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 644              		.loc 1 595 0 discriminator 1
 645 0026 002B     		cmp	r3, #0
 646 0028 0BD0     		beq	.L32
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine to error */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 647              		.loc 1 599 0
 648 002a 7B68     		ldr	r3, [r7, #4]
 649 002c 1B6C     		ldr	r3, [r3, #64]
 650 002e 43F02002 		orr	r2, r3, #32
 651 0032 7B68     		ldr	r3, [r7, #4]
 652 0034 1A64     		str	r2, [r3, #64]
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 653              		.loc 1 602 0
 654 0036 7B68     		ldr	r3, [r7, #4]
 655 0038 0022     		movs	r2, #0
 656 003a 83F83C20 		strb	r2, [r3, #60]
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     return HAL_ERROR;
 657              		.loc 1 604 0
 658 003e 0123     		movs	r3, #1
 659 0040 5CE0     		b	.L33
 660              	.L32:
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccsc4Dzg.s 			page 23


 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */ 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 661              		.loc 1 608 0
 662 0042 FFF7FEFF 		bl	HAL_GetTick
 663 0046 F860     		str	r0, [r7, #12]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 664              		.loc 1 611 0
 665 0048 1AE0     		b	.L34
 666              	.L36:
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 667              		.loc 1 614 0
 668 004a 3B68     		ldr	r3, [r7]
 669 004c B3F1FF3F 		cmp	r3, #-1
 670 0050 16D0     		beq	.L34
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 671              		.loc 1 616 0
 672 0052 3B68     		ldr	r3, [r7]
 673 0054 002B     		cmp	r3, #0
 674 0056 07D0     		beq	.L35
 675              		.loc 1 616 0 is_stmt 0 discriminator 1
 676 0058 FFF7FEFF 		bl	HAL_GetTick
 677 005c 0246     		mov	r2, r0
 678 005e FB68     		ldr	r3, [r7, #12]
 679 0060 D21A     		subs	r2, r2, r3
 680 0062 3B68     		ldr	r3, [r7]
 681 0064 9A42     		cmp	r2, r3
 682 0066 0BD9     		bls	.L34
 683              	.L35:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 684              		.loc 1 619 0 is_stmt 1
 685 0068 7B68     		ldr	r3, [r7, #4]
 686 006a 1B6C     		ldr	r3, [r3, #64]
 687 006c 43F00402 		orr	r2, r3, #4
 688 0070 7B68     		ldr	r3, [r7, #4]
 689 0072 1A64     		str	r2, [r3, #64]
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 690              		.loc 1 622 0
 691 0074 7B68     		ldr	r3, [r7, #4]
 692 0076 0022     		movs	r2, #0
 693 0078 83F83C20 		strb	r2, [r3, #60]
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 694              		.loc 1 624 0
 695 007c 0323     		movs	r3, #3
 696 007e 3DE0     		b	.L33
 697              	.L34:
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
ARM GAS  /tmp/ccsc4Dzg.s 			page 24


 698              		.loc 1 611 0
 699 0080 7B68     		ldr	r3, [r7, #4]
 700 0082 1B68     		ldr	r3, [r3]
 701 0084 1B68     		ldr	r3, [r3]
 702 0086 03F00203 		and	r3, r3, #2
 703 008a 022B     		cmp	r3, #2
 704 008c DDD1     		bne	.L36
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear regular group conversion flag */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 705              		.loc 1 630 0
 706 008e 7B68     		ldr	r3, [r7, #4]
 707 0090 1B68     		ldr	r3, [r3]
 708 0092 6FF01202 		mvn	r2, #18
 709 0096 1A60     		str	r2, [r3]
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update ADC state machine */
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 710              		.loc 1 633 0
 711 0098 7B68     		ldr	r3, [r7, #4]
 712 009a 1B6C     		ldr	r3, [r3, #64]
 713 009c 43F40072 		orr	r2, r3, #512
 714 00a0 7B68     		ldr	r3, [r7, #4]
 715 00a2 1A64     		str	r2, [r3, #64]
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: On STM32F4, there is no independent flag of end of sequence.       */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       The test of scan sequence on going is done either with scan        */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       sequence disabled or with end of conversion flag set to            */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       of end of sequence.                                                */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 716              		.loc 1 641 0
 717 00a4 7B68     		ldr	r3, [r7, #4]
 718 00a6 1B68     		ldr	r3, [r3]
 719 00a8 9B68     		ldr	r3, [r3, #8]
 720 00aa 03F04053 		and	r3, r3, #805306368
 721 00ae 002B     		cmp	r3, #0
 722 00b0 23D1     		bne	.L37
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 723              		.loc 1 642 0 discriminator 1
 724 00b2 7B68     		ldr	r3, [r7, #4]
 725 00b4 9B69     		ldr	r3, [r3, #24]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
 726              		.loc 1 641 0 discriminator 1
 727 00b6 002B     		cmp	r3, #0
 728 00b8 1FD1     		bne	.L37
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 729              		.loc 1 643 0
 730 00ba 7B68     		ldr	r3, [r7, #4]
 731 00bc 1B68     		ldr	r3, [r3]
 732 00be DB6A     		ldr	r3, [r3, #44]
 733 00c0 03F47003 		and	r3, r3, #15728640
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (hadc->Init.ContinuousConvMode == DISABLE)            &&
ARM GAS  /tmp/ccsc4Dzg.s 			page 25


 734              		.loc 1 642 0
 735 00c4 002B     		cmp	r3, #0
 736 00c6 06D0     		beq	.L38
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 737              		.loc 1 644 0
 738 00c8 7B68     		ldr	r3, [r7, #4]
 739 00ca 1B68     		ldr	r3, [r3]
 740 00cc 9B68     		ldr	r3, [r3, #8]
 741 00ce 03F48063 		and	r3, r3, #1024
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****      (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 742              		.loc 1 643 0
 743 00d2 002B     		cmp	r3, #0
 744 00d4 11D1     		bne	.L37
 745              	.L38:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 746              		.loc 1 647 0
 747 00d6 7B68     		ldr	r3, [r7, #4]
 748 00d8 1B6C     		ldr	r3, [r3, #64]
 749 00da 23F48072 		bic	r2, r3, #256
 750 00de 7B68     		ldr	r3, [r7, #4]
 751 00e0 1A64     		str	r2, [r3, #64]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 752              		.loc 1 649 0
 753 00e2 7B68     		ldr	r3, [r7, #4]
 754 00e4 1B6C     		ldr	r3, [r3, #64]
 755 00e6 03F48053 		and	r3, r3, #4096
 756 00ea 002B     		cmp	r3, #0
 757 00ec 05D1     		bne	.L37
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     { 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 758              		.loc 1 651 0
 759 00ee 7B68     		ldr	r3, [r7, #4]
 760 00f0 1B6C     		ldr	r3, [r3, #64]
 761 00f2 43F00102 		orr	r2, r3, #1
 762 00f6 7B68     		ldr	r3, [r7, #4]
 763 00f8 1A64     		str	r2, [r3, #64]
 764              	.L37:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 765              		.loc 1 656 0
 766 00fa 0023     		movs	r3, #0
 767              	.L33:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 768              		.loc 1 657 0
 769 00fc 1846     		mov	r0, r3
 770 00fe 1037     		adds	r7, r7, #16
 771              	.LCFI37:
 772              		.cfi_def_cfa_offset 8
 773 0100 BD46     		mov	sp, r7
 774              	.LCFI38:
 775              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccsc4Dzg.s 			page 26


 776              		@ sp needed
 777 0102 80BD     		pop	{r7, pc}
 778              		.cfi_endproc
 779              	.LFE130:
 781              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 782              		.align	1
 783              		.global	HAL_ADC_PollForEvent
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 787              		.fpu fpv4-sp-d16
 789              	HAL_ADC_PollForEvent:
 790              	.LFB131:
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Poll for conversion event
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  EventType the ADC event type.
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *          This parameter can be one of the following values:
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watch Dog event.
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Timeout Timeout value in millisecond.   
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 791              		.loc 1 671 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 24
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              	.LCFI39:
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 86B0     		sub	sp, sp, #24
 801              	.LCFI40:
 802              		.cfi_def_cfa_offset 32
 803 0004 00AF     		add	r7, sp, #0
 804              	.LCFI41:
 805              		.cfi_def_cfa_register 7
 806 0006 F860     		str	r0, [r7, #12]
 807 0008 B960     		str	r1, [r7, #8]
 808 000a 7A60     		str	r2, [r7, #4]
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tickstart = 0U;
 809              		.loc 1 672 0
 810 000c 0023     		movs	r3, #0
 811 000e 7B61     		str	r3, [r7, #20]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Get tick */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 812              		.loc 1 679 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 27


 813 0010 FFF7FEFF 		bl	HAL_GetTick
 814 0014 7861     		str	r0, [r7, #20]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check selected event flag */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   while(!(__HAL_ADC_GET_FLAG(hadc,EventType)))
 815              		.loc 1 682 0
 816 0016 1AE0     		b	.L40
 817              	.L43:
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check for the Timeout */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
 818              		.loc 1 685 0
 819 0018 7B68     		ldr	r3, [r7, #4]
 820 001a B3F1FF3F 		cmp	r3, #-1
 821 001e 16D0     		beq	.L40
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 822              		.loc 1 687 0
 823 0020 7B68     		ldr	r3, [r7, #4]
 824 0022 002B     		cmp	r3, #0
 825 0024 07D0     		beq	.L41
 826              		.loc 1 687 0 is_stmt 0 discriminator 1
 827 0026 FFF7FEFF 		bl	HAL_GetTick
 828 002a 0246     		mov	r2, r0
 829 002c 7B69     		ldr	r3, [r7, #20]
 830 002e D21A     		subs	r2, r2, r3
 831 0030 7B68     		ldr	r3, [r7, #4]
 832 0032 9A42     		cmp	r2, r3
 833 0034 0BD9     		bls	.L40
 834              	.L41:
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 835              		.loc 1 690 0 is_stmt 1
 836 0036 FB68     		ldr	r3, [r7, #12]
 837 0038 1B6C     		ldr	r3, [r3, #64]
 838 003a 43F00402 		orr	r2, r3, #4
 839 003e FB68     		ldr	r3, [r7, #12]
 840 0040 1A64     		str	r2, [r3, #64]
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Process unlocked */
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 841              		.loc 1 693 0
 842 0042 FB68     		ldr	r3, [r7, #12]
 843 0044 0022     		movs	r2, #0
 844 0046 83F83C20 		strb	r2, [r3, #60]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         return HAL_TIMEOUT;
 845              		.loc 1 695 0
 846 004a 0323     		movs	r3, #3
 847 004c 28E0     		b	.L42
 848              	.L40:
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 849              		.loc 1 682 0
 850 004e FB68     		ldr	r3, [r7, #12]
 851 0050 1B68     		ldr	r3, [r3]
 852 0052 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccsc4Dzg.s 			page 28


 853 0054 BB68     		ldr	r3, [r7, #8]
 854 0056 1A40     		ands	r2, r2, r3
 855 0058 BB68     		ldr	r3, [r7, #8]
 856 005a 9A42     		cmp	r2, r3
 857 005c DCD1     		bne	.L43
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(EventType == ADC_AWD_EVENT)
 858              		.loc 1 701 0
 859 005e BB68     		ldr	r3, [r7, #8]
 860 0060 012B     		cmp	r3, #1
 861 0062 0BD1     		bne	.L44
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 862              		.loc 1 704 0
 863 0064 FB68     		ldr	r3, [r7, #12]
 864 0066 1B6C     		ldr	r3, [r3, #64]
 865 0068 43F48032 		orr	r2, r3, #65536
 866 006c FB68     		ldr	r3, [r7, #12]
 867 006e 1A64     		str	r2, [r3, #64]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 868              		.loc 1 707 0
 869 0070 FB68     		ldr	r3, [r7, #12]
 870 0072 1B68     		ldr	r3, [r3]
 871 0074 6FF00102 		mvn	r2, #1
 872 0078 1A60     		str	r2, [r3]
 873 007a 10E0     		b	.L45
 874              	.L44:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Overrun event */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 875              		.loc 1 713 0
 876 007c FB68     		ldr	r3, [r7, #12]
 877 007e 1B6C     		ldr	r3, [r3, #64]
 878 0080 43F48062 		orr	r2, r3, #1024
 879 0084 FB68     		ldr	r3, [r7, #12]
 880 0086 1A64     		str	r2, [r3, #64]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 881              		.loc 1 715 0
 882 0088 FB68     		ldr	r3, [r7, #12]
 883 008a 5B6C     		ldr	r3, [r3, #68]
 884 008c 43F00202 		orr	r2, r3, #2
 885 0090 FB68     		ldr	r3, [r7, #12]
 886 0092 5A64     		str	r2, [r3, #68]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
ARM GAS  /tmp/ccsc4Dzg.s 			page 29


 887              		.loc 1 718 0
 888 0094 FB68     		ldr	r3, [r7, #12]
 889 0096 1B68     		ldr	r3, [r3]
 890 0098 6FF02002 		mvn	r2, #32
 891 009c 1A60     		str	r2, [r3]
 892              	.L45:
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 893              		.loc 1 722 0
 894 009e 0023     		movs	r3, #0
 895              	.L42:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 896              		.loc 1 723 0
 897 00a0 1846     		mov	r0, r3
 898 00a2 1837     		adds	r7, r7, #24
 899              	.LCFI42:
 900              		.cfi_def_cfa_offset 8
 901 00a4 BD46     		mov	sp, r7
 902              	.LCFI43:
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 00a6 80BD     		pop	{r7, pc}
 906              		.cfi_endproc
 907              	.LFE131:
 909              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 910              		.align	1
 911              		.global	HAL_ADC_Start_IT
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 915              		.fpu fpv4-sp-d16
 917              	HAL_ADC_Start_IT:
 918              	.LFB132:
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables the interrupt and starts ADC conversion of regular channels.
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 919              		.loc 1 733 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 16
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924 0000 80B4     		push	{r7}
 925              	.LCFI44:
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 7, -4
 928 0002 85B0     		sub	sp, sp, #20
 929              	.LCFI45:
 930              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccsc4Dzg.s 			page 30


 931 0004 00AF     		add	r7, sp, #0
 932              	.LCFI46:
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 935              		.loc 1 734 0
 936 0008 0023     		movs	r3, #0
 937 000a BB60     		str	r3, [r7, #8]
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 938              		.loc 1 742 0
 939 000c 7B68     		ldr	r3, [r7, #4]
 940 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 941 0012 012B     		cmp	r3, #1
 942 0014 01D1     		bne	.L47
 943              		.loc 1 742 0 is_stmt 0 discriminator 1
 944 0016 0223     		movs	r3, #2
 945 0018 93E0     		b	.L48
 946              	.L47:
 947              		.loc 1 742 0 discriminator 2
 948 001a 7B68     		ldr	r3, [r7, #4]
 949 001c 0122     		movs	r2, #1
 950 001e 83F83C20 		strb	r2, [r3, #60]
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 951              		.loc 1 747 0 is_stmt 1 discriminator 2
 952 0022 7B68     		ldr	r3, [r7, #4]
 953 0024 1B68     		ldr	r3, [r3]
 954 0026 9B68     		ldr	r3, [r3, #8]
 955 0028 03F00103 		and	r3, r3, #1
 956 002c 012B     		cmp	r3, #1
 957 002e 18D0     		beq	.L49
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 958              		.loc 1 750 0
 959 0030 7B68     		ldr	r3, [r7, #4]
 960 0032 1B68     		ldr	r3, [r3]
 961 0034 7A68     		ldr	r2, [r7, #4]
 962 0036 1268     		ldr	r2, [r2]
 963 0038 9268     		ldr	r2, [r2, #8]
 964 003a 42F00102 		orr	r2, r2, #1
 965 003e 9A60     		str	r2, [r3, #8]
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 966              		.loc 1 754 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 31


 967 0040 434B     		ldr	r3, .L58
 968 0042 1B68     		ldr	r3, [r3]
 969 0044 434A     		ldr	r2, .L58+4
 970 0046 A2FB0323 		umull	r2, r3, r2, r3
 971 004a 9A0C     		lsrs	r2, r3, #18
 972 004c 1346     		mov	r3, r2
 973 004e 5B00     		lsls	r3, r3, #1
 974 0050 1344     		add	r3, r3, r2
 975 0052 BB60     		str	r3, [r7, #8]
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 976              		.loc 1 755 0
 977 0054 02E0     		b	.L50
 978              	.L51:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 979              		.loc 1 757 0
 980 0056 BB68     		ldr	r3, [r7, #8]
 981 0058 013B     		subs	r3, r3, #1
 982 005a BB60     		str	r3, [r7, #8]
 983              	.L50:
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 984              		.loc 1 755 0
 985 005c BB68     		ldr	r3, [r7, #8]
 986 005e 002B     		cmp	r3, #0
 987 0060 F9D1     		bne	.L51
 988              	.L49:
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 989              		.loc 1 762 0
 990 0062 7B68     		ldr	r3, [r7, #4]
 991 0064 1B68     		ldr	r3, [r3]
 992 0066 9B68     		ldr	r3, [r3, #8]
 993 0068 03F00103 		and	r3, r3, #1
 994 006c 002B     		cmp	r3, #0
 995 006e 67D0     		beq	.L52
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 996              		.loc 1 767 0
 997 0070 7B68     		ldr	r3, [r7, #4]
 998 0072 1B6C     		ldr	r3, [r3, #64]
 999 0074 23F4E063 		bic	r3, r3, #1792
 1000 0078 23F00103 		bic	r3, r3, #1
 1001 007c 43F48072 		orr	r2, r3, #256
 1002 0080 7B68     		ldr	r3, [r7, #4]
 1003 0082 1A64     		str	r2, [r3, #64]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
ARM GAS  /tmp/ccsc4Dzg.s 			page 32


 1004              		.loc 1 773 0
 1005 0084 7B68     		ldr	r3, [r7, #4]
 1006 0086 1B68     		ldr	r3, [r3]
 1007 0088 5B68     		ldr	r3, [r3, #4]
 1008 008a 03F48063 		and	r3, r3, #1024
 1009 008e 002B     		cmp	r3, #0
 1010 0090 07D0     		beq	.L53
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1011              		.loc 1 775 0
 1012 0092 7B68     		ldr	r3, [r7, #4]
 1013 0094 1B6C     		ldr	r3, [r3, #64]
 1014 0096 23F44053 		bic	r3, r3, #12288
 1015 009a 43F48052 		orr	r2, r3, #4096
 1016 009e 7B68     		ldr	r3, [r7, #4]
 1017 00a0 1A64     		str	r2, [r3, #64]
 1018              	.L53:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1019              		.loc 1 779 0
 1020 00a2 7B68     		ldr	r3, [r7, #4]
 1021 00a4 1B6C     		ldr	r3, [r3, #64]
 1022 00a6 03F48053 		and	r3, r3, #4096
 1023 00aa 002B     		cmp	r3, #0
 1024 00ac 06D0     		beq	.L54
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1025              		.loc 1 782 0
 1026 00ae 7B68     		ldr	r3, [r7, #4]
 1027 00b0 5B6C     		ldr	r3, [r3, #68]
 1028 00b2 23F00602 		bic	r2, r3, #6
 1029 00b6 7B68     		ldr	r3, [r7, #4]
 1030 00b8 5A64     		str	r2, [r3, #68]
 1031 00ba 02E0     		b	.L55
 1032              	.L54:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1033              		.loc 1 787 0
 1034 00bc 7B68     		ldr	r3, [r7, #4]
 1035 00be 0022     		movs	r2, #0
 1036 00c0 5A64     		str	r2, [r3, #68]
 1037              	.L55:
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);
 1038              		.loc 1 793 0
 1039 00c2 7B68     		ldr	r3, [r7, #4]
 1040 00c4 0022     		movs	r2, #0
ARM GAS  /tmp/ccsc4Dzg.s 			page 33


 1041 00c6 83F83C20 		strb	r2, [r3, #60]
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1042              		.loc 1 798 0
 1043 00ca 234B     		ldr	r3, .L58+8
 1044 00cc FB60     		str	r3, [r7, #12]
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1045              		.loc 1 802 0
 1046 00ce 7B68     		ldr	r3, [r7, #4]
 1047 00d0 1B68     		ldr	r3, [r3]
 1048 00d2 6FF02202 		mvn	r2, #34
 1049 00d6 1A60     		str	r2, [r3]
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable end of conversion interrupt for regular group */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1050              		.loc 1 805 0
 1051 00d8 7B68     		ldr	r3, [r7, #4]
 1052 00da 1A68     		ldr	r2, [r3]
 1053 00dc 7B68     		ldr	r3, [r7, #4]
 1054 00de 1B68     		ldr	r3, [r3]
 1055 00e0 5B68     		ldr	r3, [r3, #4]
 1056 00e2 43F08063 		orr	r3, r3, #67108864
 1057 00e6 43F02003 		orr	r3, r3, #32
 1058 00ea 5360     		str	r3, [r2, #4]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1059              		.loc 1 808 0
 1060 00ec FB68     		ldr	r3, [r7, #12]
 1061 00ee 5B68     		ldr	r3, [r3, #4]
 1062 00f0 03F01F03 		and	r3, r3, #31
 1063 00f4 002B     		cmp	r3, #0
 1064 00f6 0FD1     		bne	.L56
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1065              		.loc 1 811 0
 1066 00f8 7B68     		ldr	r3, [r7, #4]
 1067 00fa 1B68     		ldr	r3, [r3]
 1068 00fc 9B68     		ldr	r3, [r3, #8]
 1069 00fe 03F04053 		and	r3, r3, #805306368
 1070 0102 002B     		cmp	r3, #0
 1071 0104 1CD1     		bne	.L52
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1072              		.loc 1 814 0
 1073 0106 7B68     		ldr	r3, [r7, #4]
 1074 0108 1B68     		ldr	r3, [r3]
 1075 010a 7A68     		ldr	r2, [r7, #4]
 1076 010c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccsc4Dzg.s 			page 34


 1077 010e 9268     		ldr	r2, [r2, #8]
 1078 0110 42F08042 		orr	r2, r2, #1073741824
 1079 0114 9A60     		str	r2, [r3, #8]
 1080 0116 13E0     		b	.L52
 1081              	.L56:
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1082              		.loc 1 820 0
 1083 0118 7B68     		ldr	r3, [r7, #4]
 1084 011a 1B68     		ldr	r3, [r3]
 1085 011c 0F4A     		ldr	r2, .L58+12
 1086 011e 9342     		cmp	r3, r2
 1087 0120 0ED1     		bne	.L52
 1088              		.loc 1 820 0 is_stmt 0 discriminator 1
 1089 0122 7B68     		ldr	r3, [r7, #4]
 1090 0124 1B68     		ldr	r3, [r3]
 1091 0126 9B68     		ldr	r3, [r3, #8]
 1092 0128 03F04053 		and	r3, r3, #805306368
 1093 012c 002B     		cmp	r3, #0
 1094 012e 07D1     		bne	.L52
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1095              		.loc 1 823 0 is_stmt 1
 1096 0130 7B68     		ldr	r3, [r7, #4]
 1097 0132 1B68     		ldr	r3, [r3]
 1098 0134 7A68     		ldr	r2, [r7, #4]
 1099 0136 1268     		ldr	r2, [r2]
 1100 0138 9268     		ldr	r2, [r2, #8]
 1101 013a 42F08042 		orr	r2, r2, #1073741824
 1102 013e 9A60     		str	r2, [r3, #8]
 1103              	.L52:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1104              		.loc 1 829 0
 1105 0140 0023     		movs	r3, #0
 1106              	.L48:
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1107              		.loc 1 830 0
 1108 0142 1846     		mov	r0, r3
 1109 0144 1437     		adds	r7, r7, #20
 1110              	.LCFI47:
 1111              		.cfi_def_cfa_offset 4
 1112 0146 BD46     		mov	sp, r7
 1113              	.LCFI48:
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0148 5DF8047B 		ldr	r7, [sp], #4
 1117              	.LCFI49:
ARM GAS  /tmp/ccsc4Dzg.s 			page 35


 1118              		.cfi_restore 7
 1119              		.cfi_def_cfa_offset 0
 1120 014c 7047     		bx	lr
 1121              	.L59:
 1122 014e 00BF     		.align	2
 1123              	.L58:
 1124 0150 00000000 		.word	SystemCoreClock
 1125 0154 83DE1B43 		.word	1125899907
 1126 0158 00230140 		.word	1073816320
 1127 015c 00200140 		.word	1073815552
 1128              		.cfi_endproc
 1129              	.LFE132:
 1131              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1132              		.align	1
 1133              		.global	HAL_ADC_Stop_IT
 1134              		.syntax unified
 1135              		.thumb
 1136              		.thumb_func
 1137              		.fpu fpv4-sp-d16
 1139              	HAL_ADC_Stop_IT:
 1140              	.LFB133:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables the interrupt and stop ADC conversion of regular channels.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   Caution: This function will stop also injected channels.  
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status.
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1141              		.loc 1 842 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              	.LCFI50:
 1148              		.cfi_def_cfa_offset 4
 1149              		.cfi_offset 7, -4
 1150 0002 83B0     		sub	sp, sp, #12
 1151              	.LCFI51:
 1152              		.cfi_def_cfa_offset 16
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI52:
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1157              		.loc 1 847 0
 1158 0008 7B68     		ldr	r3, [r7, #4]
 1159 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
ARM GAS  /tmp/ccsc4Dzg.s 			page 36


 1160 000e 012B     		cmp	r3, #1
 1161 0010 01D1     		bne	.L61
 1162              		.loc 1 847 0 is_stmt 0 discriminator 1
 1163 0012 0223     		movs	r3, #2
 1164 0014 2BE0     		b	.L62
 1165              	.L61:
 1166              		.loc 1 847 0 discriminator 2
 1167 0016 7B68     		ldr	r3, [r7, #4]
 1168 0018 0122     		movs	r2, #1
 1169 001a 83F83C20 		strb	r2, [r3, #60]
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1170              		.loc 1 851 0 is_stmt 1 discriminator 2
 1171 001e 7B68     		ldr	r3, [r7, #4]
 1172 0020 1B68     		ldr	r3, [r3]
 1173 0022 7A68     		ldr	r2, [r7, #4]
 1174 0024 1268     		ldr	r2, [r2]
 1175 0026 9268     		ldr	r2, [r2, #8]
 1176 0028 22F00102 		bic	r2, r2, #1
 1177 002c 9A60     		str	r2, [r3, #8]
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1178              		.loc 1 854 0 discriminator 2
 1179 002e 7B68     		ldr	r3, [r7, #4]
 1180 0030 1B68     		ldr	r3, [r3]
 1181 0032 9B68     		ldr	r3, [r3, #8]
 1182 0034 03F00103 		and	r3, r3, #1
 1183 0038 002B     		cmp	r3, #0
 1184 003a 13D1     		bne	.L63
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   	/* Disable ADC end of conversion interrupt for regular group */
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 1185              		.loc 1 857 0
 1186 003c 7B68     		ldr	r3, [r7, #4]
 1187 003e 1A68     		ldr	r2, [r3]
 1188 0040 7B68     		ldr	r3, [r7, #4]
 1189 0042 1B68     		ldr	r3, [r3]
 1190 0044 5B68     		ldr	r3, [r3, #4]
 1191 0046 23F08063 		bic	r3, r3, #67108864
 1192 004a 23F02003 		bic	r3, r3, #32
 1193 004e 5360     		str	r3, [r2, #4]
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1194              		.loc 1 860 0
 1195 0050 7B68     		ldr	r3, [r7, #4]
 1196 0052 1B6C     		ldr	r3, [r3, #64]
 1197 0054 23F48853 		bic	r3, r3, #4352
 1198 0058 23F00103 		bic	r3, r3, #1
 1199 005c 43F00102 		orr	r2, r3, #1
 1200 0060 7B68     		ldr	r3, [r7, #4]
 1201 0062 1A64     		str	r2, [r3, #64]
 1202              	.L63:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
ARM GAS  /tmp/ccsc4Dzg.s 			page 37


 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1203              		.loc 1 866 0
 1204 0064 7B68     		ldr	r3, [r7, #4]
 1205 0066 0022     		movs	r2, #0
 1206 0068 83F83C20 		strb	r2, [r3, #60]
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1207              		.loc 1 869 0
 1208 006c 0023     		movs	r3, #0
 1209              	.L62:
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1210              		.loc 1 870 0
 1211 006e 1846     		mov	r0, r3
 1212 0070 0C37     		adds	r7, r7, #12
 1213              	.LCFI53:
 1214              		.cfi_def_cfa_offset 4
 1215 0072 BD46     		mov	sp, r7
 1216              	.LCFI54:
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 0074 5DF8047B 		ldr	r7, [sp], #4
 1220              	.LCFI55:
 1221              		.cfi_restore 7
 1222              		.cfi_def_cfa_offset 0
 1223 0078 7047     		bx	lr
 1224              		.cfi_endproc
 1225              	.LFE133:
 1227              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_ADC_IRQHandler
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu fpv4-sp-d16
 1235              	HAL_ADC_IRQHandler:
 1236              	.LFB134:
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Handles ADC interrupt request  
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1237              		.loc 1 879 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 16
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241 0000 80B5     		push	{r7, lr}
 1242              	.LCFI56:
 1243              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccsc4Dzg.s 			page 38


 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 84B0     		sub	sp, sp, #16
 1247              	.LCFI57:
 1248              		.cfi_def_cfa_offset 24
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI58:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1253              		.loc 1 880 0
 1254 0008 0023     		movs	r3, #0
 1255 000a FB60     		str	r3, [r7, #12]
 1256 000c 0023     		movs	r3, #0
 1257 000e BB60     		str	r3, [r7, #8]
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC);
 1258              		.loc 1 887 0
 1259 0010 7B68     		ldr	r3, [r7, #4]
 1260 0012 1B68     		ldr	r3, [r3]
 1261 0014 1B68     		ldr	r3, [r3]
 1262 0016 03F00203 		and	r3, r3, #2
 1263 001a 022B     		cmp	r3, #2
 1264 001c 0CBF     		ite	eq
 1265 001e 0123     		moveq	r3, #1
 1266 0020 0023     		movne	r3, #0
 1267 0022 DBB2     		uxtb	r3, r3
 1268 0024 FB60     		str	r3, [r7, #12]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC);
 1269              		.loc 1 888 0
 1270 0026 7B68     		ldr	r3, [r7, #4]
 1271 0028 1B68     		ldr	r3, [r3]
 1272 002a 5B68     		ldr	r3, [r3, #4]
 1273 002c 03F02003 		and	r3, r3, #32
 1274 0030 202B     		cmp	r3, #32
 1275 0032 0CBF     		ite	eq
 1276 0034 0123     		moveq	r3, #1
 1277 0036 0023     		movne	r3, #0
 1278 0038 DBB2     		uxtb	r3, r3
 1279 003a BB60     		str	r3, [r7, #8]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for regular channels */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1280              		.loc 1 890 0
 1281 003c FB68     		ldr	r3, [r7, #12]
 1282 003e 002B     		cmp	r3, #0
 1283 0040 49D0     		beq	.L65
 1284              		.loc 1 890 0 is_stmt 0 discriminator 1
 1285 0042 BB68     		ldr	r3, [r7, #8]
 1286 0044 002B     		cmp	r3, #0
 1287 0046 46D0     		beq	.L65
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /tmp/ccsc4Dzg.s 			page 39


 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1288              		.loc 1 893 0 is_stmt 1
 1289 0048 7B68     		ldr	r3, [r7, #4]
 1290 004a 1B6C     		ldr	r3, [r3, #64]
 1291 004c 03F01003 		and	r3, r3, #16
 1292 0050 002B     		cmp	r3, #0
 1293 0052 05D1     		bne	.L66
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 1294              		.loc 1 896 0
 1295 0054 7B68     		ldr	r3, [r7, #4]
 1296 0056 1B6C     		ldr	r3, [r3, #64]
 1297 0058 43F40072 		orr	r2, r3, #512
 1298 005c 7B68     		ldr	r3, [r7, #4]
 1299 005e 1A64     		str	r2, [r3, #64]
 1300              	.L66:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 1301              		.loc 1 905 0
 1302 0060 7B68     		ldr	r3, [r7, #4]
 1303 0062 1B68     		ldr	r3, [r3]
 1304 0064 9B68     		ldr	r3, [r3, #8]
 1305 0066 03F04053 		and	r3, r3, #805306368
 1306 006a 002B     		cmp	r3, #0
 1307 006c 2BD1     		bne	.L67
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1308              		.loc 1 906 0 discriminator 1
 1309 006e 7B68     		ldr	r3, [r7, #4]
 1310 0070 9B69     		ldr	r3, [r3, #24]
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1311              		.loc 1 905 0 discriminator 1
 1312 0072 002B     		cmp	r3, #0
 1313 0074 27D1     		bne	.L67
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1314              		.loc 1 907 0
 1315 0076 7B68     		ldr	r3, [r7, #4]
 1316 0078 1B68     		ldr	r3, [r3]
 1317 007a DB6A     		ldr	r3, [r3, #44]
 1318 007c 03F47003 		and	r3, r3, #15728640
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 1319              		.loc 1 906 0
 1320 0080 002B     		cmp	r3, #0
 1321 0082 06D0     		beq	.L68
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 1322              		.loc 1 908 0
 1323 0084 7B68     		ldr	r3, [r7, #4]
 1324 0086 1B68     		ldr	r3, [r3]
 1325 0088 9B68     		ldr	r3, [r3, #8]
 1326 008a 03F48063 		and	r3, r3, #1024
ARM GAS  /tmp/ccsc4Dzg.s 			page 40


 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 1327              		.loc 1 907 0
 1328 008e 002B     		cmp	r3, #0
 1329 0090 19D1     		bne	.L67
 1330              	.L68:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1331              		.loc 1 914 0
 1332 0092 7B68     		ldr	r3, [r7, #4]
 1333 0094 1B68     		ldr	r3, [r3]
 1334 0096 7A68     		ldr	r2, [r7, #4]
 1335 0098 1268     		ldr	r2, [r2]
 1336 009a 5268     		ldr	r2, [r2, #4]
 1337 009c 22F02002 		bic	r2, r2, #32
 1338 00a0 5A60     		str	r2, [r3, #4]
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1339              		.loc 1 917 0
 1340 00a2 7B68     		ldr	r3, [r7, #4]
 1341 00a4 1B6C     		ldr	r3, [r3, #64]
 1342 00a6 23F48072 		bic	r2, r3, #256
 1343 00aa 7B68     		ldr	r3, [r7, #4]
 1344 00ac 1A64     		str	r2, [r3, #64]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1345              		.loc 1 919 0
 1346 00ae 7B68     		ldr	r3, [r7, #4]
 1347 00b0 1B6C     		ldr	r3, [r3, #64]
 1348 00b2 03F48053 		and	r3, r3, #4096
 1349 00b6 002B     		cmp	r3, #0
 1350 00b8 05D1     		bne	.L67
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1351              		.loc 1 921 0
 1352 00ba 7B68     		ldr	r3, [r7, #4]
 1353 00bc 1B6C     		ldr	r3, [r3, #64]
 1354 00be 43F00102 		orr	r2, r3, #1
 1355 00c2 7B68     		ldr	r3, [r7, #4]
 1356 00c4 1A64     		str	r2, [r3, #64]
 1357              	.L67:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 1358              		.loc 1 926 0
 1359 00c6 7868     		ldr	r0, [r7, #4]
 1360 00c8 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 1361              		.loc 1 929 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 41


 1362 00cc 7B68     		ldr	r3, [r7, #4]
 1363 00ce 1B68     		ldr	r3, [r3]
 1364 00d0 6FF01202 		mvn	r2, #18
 1365 00d4 1A60     		str	r2, [r3]
 1366              	.L65:
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC);
 1367              		.loc 1 932 0
 1368 00d6 7B68     		ldr	r3, [r7, #4]
 1369 00d8 1B68     		ldr	r3, [r3]
 1370 00da 1B68     		ldr	r3, [r3]
 1371 00dc 03F00403 		and	r3, r3, #4
 1372 00e0 042B     		cmp	r3, #4
 1373 00e2 0CBF     		ite	eq
 1374 00e4 0123     		moveq	r3, #1
 1375 00e6 0023     		movne	r3, #0
 1376 00e8 DBB2     		uxtb	r3, r3
 1377 00ea FB60     		str	r3, [r7, #12]
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC);                               
 1378              		.loc 1 933 0
 1379 00ec 7B68     		ldr	r3, [r7, #4]
 1380 00ee 1B68     		ldr	r3, [r3]
 1381 00f0 5B68     		ldr	r3, [r3, #4]
 1382 00f2 03F08003 		and	r3, r3, #128
 1383 00f6 802B     		cmp	r3, #128
 1384 00f8 0CBF     		ite	eq
 1385 00fa 0123     		moveq	r3, #1
 1386 00fc 0023     		movne	r3, #0
 1387 00fe DBB2     		uxtb	r3, r3
 1388 0100 BB60     		str	r3, [r7, #8]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check End of conversion flag for injected channels */
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1389              		.loc 1 935 0
 1390 0102 FB68     		ldr	r3, [r7, #12]
 1391 0104 002B     		cmp	r3, #0
 1392 0106 57D0     		beq	.L69
 1393              		.loc 1 935 0 is_stmt 0 discriminator 1
 1394 0108 BB68     		ldr	r3, [r7, #8]
 1395 010a 002B     		cmp	r3, #0
 1396 010c 54D0     		beq	.L69
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 1397              		.loc 1 938 0 is_stmt 1
 1398 010e 7B68     		ldr	r3, [r7, #4]
 1399 0110 1B6C     		ldr	r3, [r3, #64]
 1400 0112 03F01003 		and	r3, r3, #16
 1401 0116 002B     		cmp	r3, #0
 1402 0118 05D1     		bne	.L70
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1403              		.loc 1 941 0
 1404 011a 7B68     		ldr	r3, [r7, #4]
 1405 011c 1B6C     		ldr	r3, [r3, #64]
 1406 011e 43F40052 		orr	r2, r3, #8192
ARM GAS  /tmp/ccsc4Dzg.s 			page 42


 1407 0122 7B68     		ldr	r3, [r7, #4]
 1408 0124 1A64     		str	r2, [r3, #64]
 1409              	.L70:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group injected  */
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, scan sequence on going or by automatic injected */
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* conversion from group regular (same conditions as group regular      */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption disabling above).                                       */
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 1410              		.loc 1 948 0
 1411 0126 7B68     		ldr	r3, [r7, #4]
 1412 0128 1B68     		ldr	r3, [r3]
 1413 012a 9B68     		ldr	r3, [r3, #8]
 1414 012c 03F44013 		and	r3, r3, #3145728
 1415 0130 002B     		cmp	r3, #0
 1416 0132 39D1     		bne	.L71
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1417              		.loc 1 949 0 discriminator 1
 1418 0134 7B68     		ldr	r3, [r7, #4]
 1419 0136 1B68     		ldr	r3, [r3]
 1420 0138 9B6B     		ldr	r3, [r3, #56]
 1421 013a 03F44013 		and	r3, r3, #3145728
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1422              		.loc 1 948 0 discriminator 1
 1423 013e 002B     		cmp	r3, #0
 1424 0140 06D0     		beq	.L72
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1425              		.loc 1 950 0
 1426 0142 7B68     		ldr	r3, [r7, #4]
 1427 0144 1B68     		ldr	r3, [r3]
 1428 0146 9B68     		ldr	r3, [r3, #8]
 1429 0148 03F48063 		and	r3, r3, #1024
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 1430              		.loc 1 949 0
 1431 014c 002B     		cmp	r3, #0
 1432 014e 2BD1     		bne	.L71
 1433              	.L72:
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1434              		.loc 1 951 0
 1435 0150 7B68     		ldr	r3, [r7, #4]
 1436 0152 1B68     		ldr	r3, [r3]
 1437 0154 5B68     		ldr	r3, [r3, #4]
 1438 0156 03F48063 		and	r3, r3, #1024
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)    ) &&
 1439              		.loc 1 950 0
 1440 015a 002B     		cmp	r3, #0
 1441 015c 24D1     		bne	.L71
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1442              		.loc 1 952 0
 1443 015e 7B68     		ldr	r3, [r7, #4]
 1444 0160 1B68     		ldr	r3, [r3]
 1445 0162 9B68     		ldr	r3, [r3, #8]
 1446 0164 03F04053 		and	r3, r3, #805306368
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 1447              		.loc 1 951 0
 1448 0168 002B     		cmp	r3, #0
ARM GAS  /tmp/ccsc4Dzg.s 			page 43


 1449 016a 1DD1     		bne	.L71
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (hadc->Init.ContinuousConvMode == DISABLE)   )       )   )
 1450              		.loc 1 953 0
 1451 016c 7B68     		ldr	r3, [r7, #4]
 1452 016e 9B69     		ldr	r3, [r3, #24]
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 1453              		.loc 1 952 0
 1454 0170 002B     		cmp	r3, #0
 1455 0172 19D1     		bne	.L71
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group injected */
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 1456              		.loc 1 956 0
 1457 0174 7B68     		ldr	r3, [r7, #4]
 1458 0176 1B68     		ldr	r3, [r3]
 1459 0178 7A68     		ldr	r2, [r7, #4]
 1460 017a 1268     		ldr	r2, [r2]
 1461 017c 5268     		ldr	r2, [r2, #4]
 1462 017e 22F08002 		bic	r2, r2, #128
 1463 0182 5A60     		str	r2, [r3, #4]
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 1464              		.loc 1 959 0
 1465 0184 7B68     		ldr	r3, [r7, #4]
 1466 0186 1B6C     		ldr	r3, [r3, #64]
 1467 0188 23F48052 		bic	r2, r3, #4096
 1468 018c 7B68     		ldr	r3, [r7, #4]
 1469 018e 1A64     		str	r2, [r3, #64]
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 1470              		.loc 1 961 0
 1471 0190 7B68     		ldr	r3, [r7, #4]
 1472 0192 1B6C     		ldr	r3, [r3, #64]
 1473 0194 03F48073 		and	r3, r3, #256
 1474 0198 002B     		cmp	r3, #0
 1475 019a 05D1     		bne	.L71
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       { 
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1476              		.loc 1 963 0
 1477 019c 7B68     		ldr	r3, [r7, #4]
 1478 019e 1B6C     		ldr	r3, [r3, #64]
 1479 01a0 43F00102 		orr	r2, r3, #1
 1480 01a4 7B68     		ldr	r3, [r7, #4]
 1481 01a6 1A64     		str	r2, [r3, #64]
 1482              	.L71:
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */ 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 1483              		.loc 1 968 0
 1484 01a8 7868     		ldr	r0, [r7, #4]
 1485 01aa FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear injected group conversion flag */
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
ARM GAS  /tmp/ccsc4Dzg.s 			page 44


 1486              		.loc 1 971 0
 1487 01ae 7B68     		ldr	r3, [r7, #4]
 1488 01b0 1B68     		ldr	r3, [r3]
 1489 01b2 6FF00C02 		mvn	r2, #12
 1490 01b6 1A60     		str	r2, [r3]
 1491              	.L69:
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD);
 1492              		.loc 1 974 0
 1493 01b8 7B68     		ldr	r3, [r7, #4]
 1494 01ba 1B68     		ldr	r3, [r3]
 1495 01bc 1B68     		ldr	r3, [r3]
 1496 01be 03F00103 		and	r3, r3, #1
 1497 01c2 012B     		cmp	r3, #1
 1498 01c4 0CBF     		ite	eq
 1499 01c6 0123     		moveq	r3, #1
 1500 01c8 0023     		movne	r3, #0
 1501 01ca DBB2     		uxtb	r3, r3
 1502 01cc FB60     		str	r3, [r7, #12]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD);                          
 1503              		.loc 1 975 0
 1504 01ce 7B68     		ldr	r3, [r7, #4]
 1505 01d0 1B68     		ldr	r3, [r3]
 1506 01d2 5B68     		ldr	r3, [r3, #4]
 1507 01d4 03F04003 		and	r3, r3, #64
 1508 01d8 402B     		cmp	r3, #64
 1509 01da 0CBF     		ite	eq
 1510 01dc 0123     		moveq	r3, #1
 1511 01de 0023     		movne	r3, #0
 1512 01e0 DBB2     		uxtb	r3, r3
 1513 01e2 BB60     		str	r3, [r7, #8]
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Analog watchdog flag */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1514              		.loc 1 977 0
 1515 01e4 FB68     		ldr	r3, [r7, #12]
 1516 01e6 002B     		cmp	r3, #0
 1517 01e8 17D0     		beq	.L73
 1518              		.loc 1 977 0 is_stmt 0 discriminator 1
 1519 01ea BB68     		ldr	r3, [r7, #8]
 1520 01ec 002B     		cmp	r3, #0
 1521 01ee 14D0     		beq	.L73
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 1522              		.loc 1 979 0 is_stmt 1
 1523 01f0 7B68     		ldr	r3, [r7, #4]
 1524 01f2 1B68     		ldr	r3, [r3]
 1525 01f4 1B68     		ldr	r3, [r3]
 1526 01f6 03F00103 		and	r3, r3, #1
 1527 01fa 012B     		cmp	r3, #1
 1528 01fc 0DD1     		bne	.L73
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1529              		.loc 1 982 0
 1530 01fe 7B68     		ldr	r3, [r7, #4]
 1531 0200 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccsc4Dzg.s 			page 45


 1532 0202 43F48032 		orr	r2, r3, #65536
 1533 0206 7B68     		ldr	r3, [r7, #4]
 1534 0208 1A64     		str	r2, [r3, #64]
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Level out of window callback */ 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
 1535              		.loc 1 985 0
 1536 020a 7868     		ldr	r0, [r7, #4]
 1537 020c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Clear the ADC analog watchdog flag */
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 1538              		.loc 1 988 0
 1539 0210 7B68     		ldr	r3, [r7, #4]
 1540 0212 1B68     		ldr	r3, [r3]
 1541 0214 6FF00102 		mvn	r2, #1
 1542 0218 1A60     		str	r2, [r3]
 1543              	.L73:
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp1 = __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR);
 1544              		.loc 1 992 0
 1545 021a 7B68     		ldr	r3, [r7, #4]
 1546 021c 1B68     		ldr	r3, [r3]
 1547 021e 1B68     		ldr	r3, [r3]
 1548 0220 03F02003 		and	r3, r3, #32
 1549 0224 202B     		cmp	r3, #32
 1550 0226 0CBF     		ite	eq
 1551 0228 0123     		moveq	r3, #1
 1552 022a 0023     		movne	r3, #0
 1553 022c DBB2     		uxtb	r3, r3
 1554 022e FB60     		str	r3, [r7, #12]
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp2 = __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR);
 1555              		.loc 1 993 0
 1556 0230 7B68     		ldr	r3, [r7, #4]
 1557 0232 1B68     		ldr	r3, [r3]
 1558 0234 5B68     		ldr	r3, [r3, #4]
 1559 0236 03F08063 		and	r3, r3, #67108864
 1560 023a B3F1806F 		cmp	r3, #67108864
 1561 023e 0CBF     		ite	eq
 1562 0240 0123     		moveq	r3, #1
 1563 0242 0023     		movne	r3, #0
 1564 0244 DBB2     		uxtb	r3, r3
 1565 0246 BB60     		str	r3, [r7, #8]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check Overrun flag */
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(tmp1 && tmp2)
 1566              		.loc 1 995 0
 1567 0248 FB68     		ldr	r3, [r7, #12]
 1568 024a 002B     		cmp	r3, #0
 1569 024c 15D0     		beq	.L75
 1570              		.loc 1 995 0 is_stmt 0 discriminator 1
 1571 024e BB68     		ldr	r3, [r7, #8]
 1572 0250 002B     		cmp	r3, #0
 1573 0252 12D0     		beq	.L75
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, ADC overrun can be set through other parameters    */
ARM GAS  /tmp/ccsc4Dzg.s 			page 46


 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       refer to description of parameter "EOCSelection" for more      */
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       details.                                                       */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC error code to overrun */
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1574              		.loc 1 1002 0 is_stmt 1
 1575 0254 7B68     		ldr	r3, [r7, #4]
 1576 0256 5B6C     		ldr	r3, [r3, #68]
 1577 0258 43F00202 		orr	r2, r3, #2
 1578 025c 7B68     		ldr	r3, [r7, #4]
 1579 025e 5A64     		str	r2, [r3, #68]
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear ADC overrun flag */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1580              		.loc 1 1005 0
 1581 0260 7B68     		ldr	r3, [r7, #4]
 1582 0262 1B68     		ldr	r3, [r3]
 1583 0264 6FF02002 		mvn	r2, #32
 1584 0268 1A60     		str	r2, [r3]
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Error callback */ 
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ErrorCallback(hadc);
 1585              		.loc 1 1008 0
 1586 026a 7868     		ldr	r0, [r7, #4]
 1587 026c FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the Overrun flag */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1588              		.loc 1 1011 0
 1589 0270 7B68     		ldr	r3, [r7, #4]
 1590 0272 1B68     		ldr	r3, [r3]
 1591 0274 6FF02002 		mvn	r2, #32
 1592 0278 1A60     		str	r2, [r3]
 1593              	.L75:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1594              		.loc 1 1013 0
 1595 027a 00BF     		nop
 1596 027c 1037     		adds	r7, r7, #16
 1597              	.LCFI59:
 1598              		.cfi_def_cfa_offset 8
 1599 027e BD46     		mov	sp, r7
 1600              	.LCFI60:
 1601              		.cfi_def_cfa_register 13
 1602              		@ sp needed
 1603 0280 80BD     		pop	{r7, pc}
 1604              		.cfi_endproc
 1605              	.LFE134:
 1607              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1608              		.align	1
 1609              		.global	HAL_ADC_Start_DMA
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	HAL_ADC_Start_DMA:
 1616              	.LFB135:
ARM GAS  /tmp/ccsc4Dzg.s 			page 47


1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Enables ADC DMA request after last transfer (Single-ADC mode) and enables ADC periphera
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  pData The destination Buffer address.
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  Length The length of data to be transferred from ADC peripheral to memory.
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1617              		.loc 1 1024 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 24
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              	.LCFI61:
 1623              		.cfi_def_cfa_offset 8
 1624              		.cfi_offset 7, -8
 1625              		.cfi_offset 14, -4
 1626 0002 86B0     		sub	sp, sp, #24
 1627              	.LCFI62:
 1628              		.cfi_def_cfa_offset 32
 1629 0004 00AF     		add	r7, sp, #0
 1630              	.LCFI63:
 1631              		.cfi_def_cfa_register 7
 1632 0006 F860     		str	r0, [r7, #12]
 1633 0008 B960     		str	r1, [r7, #8]
 1634 000a 7A60     		str	r2, [r7, #4]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 1635              		.loc 1 1025 0
 1636 000c 0023     		movs	r3, #0
 1637 000e 3B61     		str	r3, [r7, #16]
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1638              		.loc 1 1033 0
 1639 0010 FB68     		ldr	r3, [r7, #12]
 1640 0012 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1641 0016 012B     		cmp	r3, #1
 1642 0018 01D1     		bne	.L77
 1643              		.loc 1 1033 0 is_stmt 0 discriminator 1
 1644 001a 0223     		movs	r3, #2
 1645 001c B0E0     		b	.L78
 1646              	.L77:
 1647              		.loc 1 1033 0 discriminator 2
 1648 001e FB68     		ldr	r3, [r7, #12]
 1649 0020 0122     		movs	r2, #1
 1650 0022 83F83C20 		strb	r2, [r3, #60]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable the ADC peripheral */
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC peripheral is disabled in order to enable it and wait during 
ARM GAS  /tmp/ccsc4Dzg.s 			page 48


1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   Tstab time the ADC's stabilization */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 1651              		.loc 1 1038 0 is_stmt 1 discriminator 2
 1652 0026 FB68     		ldr	r3, [r7, #12]
 1653 0028 1B68     		ldr	r3, [r3]
 1654 002a 9B68     		ldr	r3, [r3, #8]
 1655 002c 03F00103 		and	r3, r3, #1
 1656 0030 012B     		cmp	r3, #1
 1657 0032 18D0     		beq	.L79
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {  
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the Peripheral */
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE(hadc);
 1658              		.loc 1 1041 0
 1659 0034 FB68     		ldr	r3, [r7, #12]
 1660 0036 1B68     		ldr	r3, [r3]
 1661 0038 FA68     		ldr	r2, [r7, #12]
 1662 003a 1268     		ldr	r2, [r2]
 1663 003c 9268     		ldr	r2, [r2, #8]
 1664 003e 42F00102 		orr	r2, r2, #1
 1665 0042 9A60     		str	r2, [r3, #8]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Delay for ADC stabilization time */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Compute number of CPU cycles to wait for */
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 1666              		.loc 1 1045 0
 1667 0044 504B     		ldr	r3, .L88
 1668 0046 1B68     		ldr	r3, [r3]
 1669 0048 504A     		ldr	r2, .L88+4
 1670 004a A2FB0323 		umull	r2, r3, r2, r3
 1671 004e 9A0C     		lsrs	r2, r3, #18
 1672 0050 1346     		mov	r3, r2
 1673 0052 5B00     		lsls	r3, r3, #1
 1674 0054 1344     		add	r3, r3, r2
 1675 0056 3B61     		str	r3, [r7, #16]
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1676              		.loc 1 1046 0
 1677 0058 02E0     		b	.L80
 1678              	.L81:
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter--;
 1679              		.loc 1 1048 0
 1680 005a 3B69     		ldr	r3, [r7, #16]
 1681 005c 013B     		subs	r3, r3, #1
 1682 005e 3B61     		str	r3, [r7, #16]
 1683              	.L80:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     while(counter != 0U)
 1684              		.loc 1 1046 0
 1685 0060 3B69     		ldr	r3, [r7, #16]
 1686 0062 002B     		cmp	r3, #0
 1687 0064 F9D1     		bne	.L81
 1688              	.L79:
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Start conversion if ADC is effectively enabled */
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 1689              		.loc 1 1053 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 49


 1690 0066 FB68     		ldr	r3, [r7, #12]
 1691 0068 1B68     		ldr	r3, [r3]
 1692 006a 9B68     		ldr	r3, [r3, #8]
 1693 006c 03F00103 		and	r3, r3, #1
 1694 0070 002B     		cmp	r3, #0
 1695 0072 00F08480 		beq	.L82
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state                                                          */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Clear state bitfield related to regular group conversion results     */
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* - Set state bitfield related to regular group operation                */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1696              		.loc 1 1058 0
 1697 0076 FB68     		ldr	r3, [r7, #12]
 1698 0078 1B6C     		ldr	r3, [r3, #64]
 1699 007a 23F4E063 		bic	r3, r3, #1792
 1700 007e 23F00103 		bic	r3, r3, #1
 1701 0082 43F48072 		orr	r2, r3, #256
 1702 0086 FB68     		ldr	r3, [r7, #12]
 1703 0088 1A64     		str	r2, [r3, #64]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY);
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* If conversions on group regular are also triggering group injected,    */
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* update ADC state.                                                      */
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 1704              		.loc 1 1064 0
 1705 008a FB68     		ldr	r3, [r7, #12]
 1706 008c 1B68     		ldr	r3, [r3]
 1707 008e 5B68     		ldr	r3, [r3, #4]
 1708 0090 03F48063 		and	r3, r3, #1024
 1709 0094 002B     		cmp	r3, #0
 1710 0096 07D0     		beq	.L83
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1711              		.loc 1 1066 0
 1712 0098 FB68     		ldr	r3, [r7, #12]
 1713 009a 1B6C     		ldr	r3, [r3, #64]
 1714 009c 23F44053 		bic	r3, r3, #12288
 1715 00a0 43F48052 		orr	r2, r3, #4096
 1716 00a4 FB68     		ldr	r3, [r7, #12]
 1717 00a6 1A64     		str	r2, [r3, #64]
 1718              	.L83:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* State machine update: Check if an injected conversion is ongoing */
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1719              		.loc 1 1070 0
 1720 00a8 FB68     		ldr	r3, [r7, #12]
 1721 00aa 1B6C     		ldr	r3, [r3, #64]
 1722 00ac 03F48053 		and	r3, r3, #4096
 1723 00b0 002B     		cmp	r3, #0
 1724 00b2 06D0     		beq	.L84
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC error code fields related to conversions on group regular */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1725              		.loc 1 1073 0
 1726 00b4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccsc4Dzg.s 			page 50


 1727 00b6 5B6C     		ldr	r3, [r3, #68]
 1728 00b8 23F00602 		bic	r2, r3, #6
 1729 00bc FB68     		ldr	r3, [r7, #12]
 1730 00be 5A64     		str	r2, [r3, #68]
 1731 00c0 02E0     		b	.L85
 1732              	.L84:
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Reset ADC all error code fields */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 1733              		.loc 1 1078 0
 1734 00c2 FB68     		ldr	r3, [r7, #12]
 1735 00c4 0022     		movs	r2, #0
 1736 00c6 5A64     		str	r2, [r3, #68]
 1737              	.L85:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Process unlocked */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_UNLOCK(hadc);   
 1738              		.loc 1 1084 0
 1739 00c8 FB68     		ldr	r3, [r7, #12]
 1740 00ca 0022     		movs	r2, #0
 1741 00cc 83F83C20 		strb	r2, [r3, #60]
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1742              		.loc 1 1089 0
 1743 00d0 2F4B     		ldr	r3, .L88+8
 1744 00d2 7B61     		str	r3, [r7, #20]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA transfer complete callback */
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1745              		.loc 1 1092 0
 1746 00d4 FB68     		ldr	r3, [r7, #12]
 1747 00d6 9B6B     		ldr	r3, [r3, #56]
 1748 00d8 2E4A     		ldr	r2, .L88+12
 1749 00da DA63     		str	r2, [r3, #60]
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA half transfer complete callback */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1750              		.loc 1 1095 0
 1751 00dc FB68     		ldr	r3, [r7, #12]
 1752 00de 9B6B     		ldr	r3, [r3, #56]
 1753 00e0 2D4A     		ldr	r2, .L88+16
 1754 00e2 1A64     		str	r2, [r3, #64]
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the DMA error callback */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1755              		.loc 1 1098 0
 1756 00e4 FB68     		ldr	r3, [r7, #12]
 1757 00e6 9B6B     		ldr	r3, [r3, #56]
 1758 00e8 2C4A     		ldr	r2, .L88+20
ARM GAS  /tmp/ccsc4Dzg.s 			page 51


 1759 00ea DA64     		str	r2, [r3, #76]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* start (in case of SW start):                                           */
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear regular group conversion flag and overrun flag */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 1760              		.loc 1 1106 0
 1761 00ec FB68     		ldr	r3, [r7, #12]
 1762 00ee 1B68     		ldr	r3, [r3]
 1763 00f0 6FF02202 		mvn	r2, #34
 1764 00f4 1A60     		str	r2, [r3]
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC overrun interrupt */
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1765              		.loc 1 1109 0
 1766 00f6 FB68     		ldr	r3, [r7, #12]
 1767 00f8 1B68     		ldr	r3, [r3]
 1768 00fa FA68     		ldr	r2, [r7, #12]
 1769 00fc 1268     		ldr	r2, [r2]
 1770 00fe 5268     		ldr	r2, [r2, #4]
 1771 0100 42F08062 		orr	r2, r2, #67108864
 1772 0104 5A60     		str	r2, [r3, #4]
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable ADC DMA mode */
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
 1773              		.loc 1 1112 0
 1774 0106 FB68     		ldr	r3, [r7, #12]
 1775 0108 1B68     		ldr	r3, [r3]
 1776 010a FA68     		ldr	r2, [r7, #12]
 1777 010c 1268     		ldr	r2, [r2]
 1778 010e 9268     		ldr	r2, [r2, #8]
 1779 0110 42F48072 		orr	r2, r2, #256
 1780 0114 9A60     		str	r2, [r3, #8]
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Start the DMA channel */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1781              		.loc 1 1115 0
 1782 0116 FB68     		ldr	r3, [r7, #12]
 1783 0118 986B     		ldr	r0, [r3, #56]
 1784 011a FB68     		ldr	r3, [r7, #12]
 1785 011c 1B68     		ldr	r3, [r3]
 1786 011e 4C33     		adds	r3, r3, #76
 1787 0120 1946     		mov	r1, r3
 1788 0122 BA68     		ldr	r2, [r7, #8]
 1789 0124 7B68     		ldr	r3, [r7, #4]
 1790 0126 FFF7FEFF 		bl	HAL_DMA_Start_IT
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Check if Multimode enabled */
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 1791              		.loc 1 1118 0
 1792 012a 7B69     		ldr	r3, [r7, #20]
 1793 012c 5B68     		ldr	r3, [r3, #4]
 1794 012e 03F01F03 		and	r3, r3, #31
 1795 0132 002B     		cmp	r3, #0
ARM GAS  /tmp/ccsc4Dzg.s 			page 52


 1796 0134 0FD1     		bne	.L86
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if no external trigger present enable software conversion of regular channels */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 1797              		.loc 1 1121 0
 1798 0136 FB68     		ldr	r3, [r7, #12]
 1799 0138 1B68     		ldr	r3, [r3]
 1800 013a 9B68     		ldr	r3, [r3, #8]
 1801 013c 03F04053 		and	r3, r3, #805306368
 1802 0140 002B     		cmp	r3, #0
 1803 0142 1CD1     		bne	.L82
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1804              		.loc 1 1124 0
 1805 0144 FB68     		ldr	r3, [r7, #12]
 1806 0146 1B68     		ldr	r3, [r3]
 1807 0148 FA68     		ldr	r2, [r7, #12]
 1808 014a 1268     		ldr	r2, [r2]
 1809 014c 9268     		ldr	r2, [r2, #8]
 1810 014e 42F08042 		orr	r2, r2, #1073741824
 1811 0152 9A60     		str	r2, [r3, #8]
 1812 0154 13E0     		b	.L82
 1813              	.L86:
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     else
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* if instance of handle correspond to ADC1 and  no external trigger present enable software 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 1814              		.loc 1 1130 0
 1815 0156 FB68     		ldr	r3, [r7, #12]
 1816 0158 1B68     		ldr	r3, [r3]
 1817 015a 114A     		ldr	r2, .L88+24
 1818 015c 9342     		cmp	r3, r2
 1819 015e 0ED1     		bne	.L82
 1820              		.loc 1 1130 0 is_stmt 0 discriminator 1
 1821 0160 FB68     		ldr	r3, [r7, #12]
 1822 0162 1B68     		ldr	r3, [r3]
 1823 0164 9B68     		ldr	r3, [r3, #8]
 1824 0166 03F04053 		and	r3, r3, #805306368
 1825 016a 002B     		cmp	r3, #0
 1826 016c 07D1     		bne	.L82
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         /* Enable the selected ADC software conversion for regular group */
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****           hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 1827              		.loc 1 1133 0 is_stmt 1
 1828 016e FB68     		ldr	r3, [r7, #12]
 1829 0170 1B68     		ldr	r3, [r3]
 1830 0172 FA68     		ldr	r2, [r7, #12]
 1831 0174 1268     		ldr	r2, [r2]
 1832 0176 9268     		ldr	r2, [r2, #8]
 1833 0178 42F08042 		orr	r2, r2, #1073741824
 1834 017c 9A60     		str	r2, [r3, #8]
 1835              	.L82:
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccsc4Dzg.s 			page 53


1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 1836              		.loc 1 1139 0
 1837 017e 0023     		movs	r3, #0
 1838              	.L78:
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 1839              		.loc 1 1140 0
 1840 0180 1846     		mov	r0, r3
 1841 0182 1837     		adds	r7, r7, #24
 1842              	.LCFI64:
 1843              		.cfi_def_cfa_offset 8
 1844 0184 BD46     		mov	sp, r7
 1845              	.LCFI65:
 1846              		.cfi_def_cfa_register 13
 1847              		@ sp needed
 1848 0186 80BD     		pop	{r7, pc}
 1849              	.L89:
 1850              		.align	2
 1851              	.L88:
 1852 0188 00000000 		.word	SystemCoreClock
 1853 018c 83DE1B43 		.word	1125899907
 1854 0190 00230140 		.word	1073816320
 1855 0194 00000000 		.word	ADC_DMAConvCplt
 1856 0198 00000000 		.word	ADC_DMAHalfConvCplt
 1857 019c 00000000 		.word	ADC_DMAError
 1858 01a0 00200140 		.word	1073815552
 1859              		.cfi_endproc
 1860              	.LFE135:
 1862              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 1863              		.align	1
 1864              		.global	HAL_ADC_Stop_DMA
 1865              		.syntax unified
 1866              		.thumb
 1867              		.thumb_func
 1868              		.fpu fpv4-sp-d16
 1870              	HAL_ADC_Stop_DMA:
 1871              	.LFB136:
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Disables ADC DMA (Single-ADC mode) and disables ADC peripheral    
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 1872              		.loc 1 1149 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 16
 1875              		@ frame_needed = 1, uses_anonymous_args = 0
 1876 0000 80B5     		push	{r7, lr}
 1877              	.LCFI66:
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 7, -8
 1880              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsc4Dzg.s 			page 54


 1881 0002 84B0     		sub	sp, sp, #16
 1882              	.LCFI67:
 1883              		.cfi_def_cfa_offset 24
 1884 0004 00AF     		add	r7, sp, #0
 1885              	.LCFI68:
 1886              		.cfi_def_cfa_register 7
 1887 0006 7860     		str	r0, [r7, #4]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1888              		.loc 1 1150 0
 1889 0008 0023     		movs	r3, #0
 1890 000a FB73     		strb	r3, [r7, #15]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 1891              		.loc 1 1156 0
 1892 000c 7B68     		ldr	r3, [r7, #4]
 1893 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1894 0012 012B     		cmp	r3, #1
 1895 0014 01D1     		bne	.L91
 1896              		.loc 1 1156 0 is_stmt 0 discriminator 1
 1897 0016 0223     		movs	r3, #2
 1898 0018 38E0     		b	.L92
 1899              	.L91:
 1900              		.loc 1 1156 0 discriminator 2
 1901 001a 7B68     		ldr	r3, [r7, #4]
 1902 001c 0122     		movs	r2, #1
 1903 001e 83F83C20 		strb	r2, [r3, #60]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Stop potential conversion on going, on regular and injected groups */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Disable ADC peripheral */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_ADC_DISABLE(hadc);
 1904              		.loc 1 1160 0 is_stmt 1 discriminator 2
 1905 0022 7B68     		ldr	r3, [r7, #4]
 1906 0024 1B68     		ldr	r3, [r3]
 1907 0026 7A68     		ldr	r2, [r7, #4]
 1908 0028 1268     		ldr	r2, [r2]
 1909 002a 9268     		ldr	r2, [r2, #8]
 1910 002c 22F00102 		bic	r2, r2, #1
 1911 0030 9A60     		str	r2, [r3, #8]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check if ADC is effectively disabled */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_ADON))
 1912              		.loc 1 1163 0 discriminator 2
 1913 0032 7B68     		ldr	r3, [r7, #4]
 1914 0034 1B68     		ldr	r3, [r3]
 1915 0036 9B68     		ldr	r3, [r3, #8]
 1916 0038 03F00103 		and	r3, r3, #1
 1917 003c 002B     		cmp	r3, #0
 1918 003e 20D1     		bne	.L93
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC DMA mode */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
 1919              		.loc 1 1166 0
 1920 0040 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 55


 1921 0042 1B68     		ldr	r3, [r3]
 1922 0044 7A68     		ldr	r2, [r7, #4]
 1923 0046 1268     		ldr	r2, [r2]
 1924 0048 9268     		ldr	r2, [r2, #8]
 1925 004a 22F48072 		bic	r2, r2, #256
 1926 004e 9A60     		str	r2, [r3, #8]
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* DMA transfer is on going)                                              */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 1927              		.loc 1 1170 0
 1928 0050 7B68     		ldr	r3, [r7, #4]
 1929 0052 9B6B     		ldr	r3, [r3, #56]
 1930 0054 1846     		mov	r0, r3
 1931 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1932 005a 0346     		mov	r3, r0
 1933 005c FB73     		strb	r3, [r7, #15]
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1934              		.loc 1 1173 0
 1935 005e 7B68     		ldr	r3, [r7, #4]
 1936 0060 1B68     		ldr	r3, [r3]
 1937 0062 7A68     		ldr	r2, [r7, #4]
 1938 0064 1268     		ldr	r2, [r2]
 1939 0066 5268     		ldr	r2, [r2, #4]
 1940 0068 22F08062 		bic	r2, r2, #67108864
 1941 006c 5A60     		str	r2, [r3, #4]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set ADC state */
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 1942              		.loc 1 1176 0
 1943 006e 7B68     		ldr	r3, [r7, #4]
 1944 0070 1B6C     		ldr	r3, [r3, #64]
 1945 0072 23F48853 		bic	r3, r3, #4352
 1946 0076 23F00103 		bic	r3, r3, #1
 1947 007a 43F00102 		orr	r2, r3, #1
 1948 007e 7B68     		ldr	r3, [r7, #4]
 1949 0080 1A64     		str	r2, [r3, #64]
 1950              	.L93:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****                       HAL_ADC_STATE_READY);
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 1951              		.loc 1 1182 0
 1952 0082 7B68     		ldr	r3, [r7, #4]
 1953 0084 0022     		movs	r2, #0
 1954 0086 83F83C20 		strb	r2, [r3, #60]
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return tmp_hal_status;
 1955              		.loc 1 1185 0
 1956 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1957              	.L92:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  /tmp/ccsc4Dzg.s 			page 56


 1958              		.loc 1 1186 0
 1959 008c 1846     		mov	r0, r3
 1960 008e 1037     		adds	r7, r7, #16
 1961              	.LCFI69:
 1962              		.cfi_def_cfa_offset 8
 1963 0090 BD46     		mov	sp, r7
 1964              	.LCFI70:
 1965              		.cfi_def_cfa_register 13
 1966              		@ sp needed
 1967 0092 80BD     		pop	{r7, pc}
 1968              		.cfi_endproc
 1969              	.LFE136:
 1971              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1972              		.align	1
 1973              		.global	HAL_ADC_GetValue
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1977              		.fpu fpv4-sp-d16
 1979              	HAL_ADC_GetValue:
 1980              	.LFB137:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Gets the converted value from data register of regular channel.
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval Converted value
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {       
 1981              		.loc 1 1195 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 8
 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986 0000 80B4     		push	{r7}
 1987              	.LCFI71:
 1988              		.cfi_def_cfa_offset 4
 1989              		.cfi_offset 7, -4
 1990 0002 83B0     		sub	sp, sp, #12
 1991              	.LCFI72:
 1992              		.cfi_def_cfa_offset 16
 1993 0004 00AF     		add	r7, sp, #0
 1994              	.LCFI73:
 1995              		.cfi_def_cfa_register 7
 1996 0006 7860     		str	r0, [r7, #4]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return the selected ADC converted value */ 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->Instance->DR;
 1997              		.loc 1 1197 0
 1998 0008 7B68     		ldr	r3, [r7, #4]
 1999 000a 1B68     		ldr	r3, [r3]
 2000 000c DB6C     		ldr	r3, [r3, #76]
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2001              		.loc 1 1198 0
 2002 000e 1846     		mov	r0, r3
 2003 0010 0C37     		adds	r7, r7, #12
 2004              	.LCFI74:
ARM GAS  /tmp/ccsc4Dzg.s 			page 57


 2005              		.cfi_def_cfa_offset 4
 2006 0012 BD46     		mov	sp, r7
 2007              	.LCFI75:
 2008              		.cfi_def_cfa_register 13
 2009              		@ sp needed
 2010 0014 5DF8047B 		ldr	r7, [sp], #4
 2011              	.LCFI76:
 2012              		.cfi_restore 7
 2013              		.cfi_def_cfa_offset 0
 2014 0018 7047     		bx	lr
 2015              		.cfi_endproc
 2016              	.LFE137:
 2018              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 2019              		.align	1
 2020              		.weak	HAL_ADC_ConvCpltCallback
 2021              		.syntax unified
 2022              		.thumb
 2023              		.thumb_func
 2024              		.fpu fpv4-sp-d16
 2026              	HAL_ADC_ConvCpltCallback:
 2027              	.LFB138:
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion complete callback in non blocking mode 
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2028              		.loc 1 1207 0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 8
 2031              		@ frame_needed = 1, uses_anonymous_args = 0
 2032              		@ link register save eliminated.
 2033 0000 80B4     		push	{r7}
 2034              	.LCFI77:
 2035              		.cfi_def_cfa_offset 4
 2036              		.cfi_offset 7, -4
 2037 0002 83B0     		sub	sp, sp, #12
 2038              	.LCFI78:
 2039              		.cfi_def_cfa_offset 16
 2040 0004 00AF     		add	r7, sp, #0
 2041              	.LCFI79:
 2042              		.cfi_def_cfa_register 7
 2043 0006 7860     		str	r0, [r7, #4]
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvCpltCallback could be implemented in the user file
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2044              		.loc 1 1213 0
 2045 0008 00BF     		nop
 2046 000a 0C37     		adds	r7, r7, #12
 2047              	.LCFI80:
 2048              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccsc4Dzg.s 			page 58


 2049 000c BD46     		mov	sp, r7
 2050              	.LCFI81:
 2051              		.cfi_def_cfa_register 13
 2052              		@ sp needed
 2053 000e 5DF8047B 		ldr	r7, [sp], #4
 2054              	.LCFI82:
 2055              		.cfi_restore 7
 2056              		.cfi_def_cfa_offset 0
 2057 0012 7047     		bx	lr
 2058              		.cfi_endproc
 2059              	.LFE138:
 2061              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 2062              		.align	1
 2063              		.weak	HAL_ADC_ConvHalfCpltCallback
 2064              		.syntax unified
 2065              		.thumb
 2066              		.thumb_func
 2067              		.fpu fpv4-sp-d16
 2069              	HAL_ADC_ConvHalfCpltCallback:
 2070              	.LFB139:
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Regular conversion half DMA transfer callback in non blocking mode 
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2071              		.loc 1 1222 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 8
 2074              		@ frame_needed = 1, uses_anonymous_args = 0
 2075              		@ link register save eliminated.
 2076 0000 80B4     		push	{r7}
 2077              	.LCFI83:
 2078              		.cfi_def_cfa_offset 4
 2079              		.cfi_offset 7, -4
 2080 0002 83B0     		sub	sp, sp, #12
 2081              	.LCFI84:
 2082              		.cfi_def_cfa_offset 16
 2083 0004 00AF     		add	r7, sp, #0
 2084              	.LCFI85:
 2085              		.cfi_def_cfa_register 7
 2086 0006 7860     		str	r0, [r7, #4]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2087              		.loc 1 1228 0
 2088 0008 00BF     		nop
 2089 000a 0C37     		adds	r7, r7, #12
 2090              	.LCFI86:
 2091              		.cfi_def_cfa_offset 4
 2092 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccsc4Dzg.s 			page 59


 2093              	.LCFI87:
 2094              		.cfi_def_cfa_register 13
 2095              		@ sp needed
 2096 000e 5DF8047B 		ldr	r7, [sp], #4
 2097              	.LCFI88:
 2098              		.cfi_restore 7
 2099              		.cfi_def_cfa_offset 0
 2100 0012 7047     		bx	lr
 2101              		.cfi_endproc
 2102              	.LFE139:
 2104              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 2105              		.align	1
 2106              		.weak	HAL_ADC_LevelOutOfWindowCallback
 2107              		.syntax unified
 2108              		.thumb
 2109              		.thumb_func
 2110              		.fpu fpv4-sp-d16
 2112              	HAL_ADC_LevelOutOfWindowCallback:
 2113              	.LFB140:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode 
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2114              		.loc 1 1237 0
 2115              		.cfi_startproc
 2116              		@ args = 0, pretend = 0, frame = 8
 2117              		@ frame_needed = 1, uses_anonymous_args = 0
 2118              		@ link register save eliminated.
 2119 0000 80B4     		push	{r7}
 2120              	.LCFI89:
 2121              		.cfi_def_cfa_offset 4
 2122              		.cfi_offset 7, -4
 2123 0002 83B0     		sub	sp, sp, #12
 2124              	.LCFI90:
 2125              		.cfi_def_cfa_offset 16
 2126 0004 00AF     		add	r7, sp, #0
 2127              	.LCFI91:
 2128              		.cfi_def_cfa_register 7
 2129 0006 7860     		str	r0, [r7, #4]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2130              		.loc 1 1243 0
 2131 0008 00BF     		nop
 2132 000a 0C37     		adds	r7, r7, #12
 2133              	.LCFI92:
 2134              		.cfi_def_cfa_offset 4
 2135 000c BD46     		mov	sp, r7
 2136              	.LCFI93:
ARM GAS  /tmp/ccsc4Dzg.s 			page 60


 2137              		.cfi_def_cfa_register 13
 2138              		@ sp needed
 2139 000e 5DF8047B 		ldr	r7, [sp], #4
 2140              	.LCFI94:
 2141              		.cfi_restore 7
 2142              		.cfi_def_cfa_offset 0
 2143 0012 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE140:
 2147              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 2148              		.align	1
 2149              		.weak	HAL_ADC_ErrorCallback
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2153              		.fpu fpv4-sp-d16
 2155              	HAL_ADC_ErrorCallback:
 2156              	.LFB141:
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Error ADC callback.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         (HAL ADC handle paramater "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2157              		.loc 1 1258 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 8
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161              		@ link register save eliminated.
 2162 0000 80B4     		push	{r7}
 2163              	.LCFI95:
 2164              		.cfi_def_cfa_offset 4
 2165              		.cfi_offset 7, -4
 2166 0002 83B0     		sub	sp, sp, #12
 2167              	.LCFI96:
 2168              		.cfi_def_cfa_offset 16
 2169 0004 00AF     		add	r7, sp, #0
 2170              	.LCFI97:
 2171              		.cfi_def_cfa_register 7
 2172 0006 7860     		str	r0, [r7, #4]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   UNUSED(hadc);
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             the HAL_ADC_ErrorCallback could be implemented in the user file
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****    */
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2173              		.loc 1 1264 0
 2174 0008 00BF     		nop
ARM GAS  /tmp/ccsc4Dzg.s 			page 61


 2175 000a 0C37     		adds	r7, r7, #12
 2176              	.LCFI98:
 2177              		.cfi_def_cfa_offset 4
 2178 000c BD46     		mov	sp, r7
 2179              	.LCFI99:
 2180              		.cfi_def_cfa_register 13
 2181              		@ sp needed
 2182 000e 5DF8047B 		ldr	r7, [sp], #4
 2183              	.LCFI100:
 2184              		.cfi_restore 7
 2185              		.cfi_def_cfa_offset 0
 2186 0012 7047     		bx	lr
 2187              		.cfi_endproc
 2188              	.LFE141:
 2190              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2191              		.align	1
 2192              		.global	HAL_ADC_ConfigChannel
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu fpv4-sp-d16
 2198              	HAL_ADC_ConfigChannel:
 2199              	.LFB142:
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   	Peripheral Control functions 
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****              ##### Peripheral Control functions #####
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure regular channels. 
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure injected channels.
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure multimode.
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Configure the analog watch dog.
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /**
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         rank in the sequencer and its sample time.
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  sConfig ADC configuration structure. 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2200              		.loc 1 1296 0
 2201              		.cfi_startproc
ARM GAS  /tmp/ccsc4Dzg.s 			page 62


 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205 0000 90B4     		push	{r4, r7}
 2206              	.LCFI101:
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 4, -8
 2209              		.cfi_offset 7, -4
 2210 0002 84B0     		sub	sp, sp, #16
 2211              	.LCFI102:
 2212              		.cfi_def_cfa_offset 24
 2213 0004 00AF     		add	r7, sp, #0
 2214              	.LCFI103:
 2215              		.cfi_def_cfa_register 7
 2216 0006 7860     		str	r0, [r7, #4]
 2217 0008 3960     		str	r1, [r7]
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __IO uint32_t counter = 0U;
 2218              		.loc 1 1297 0
 2219 000a 0023     		movs	r3, #0
 2220 000c BB60     		str	r3, [r7, #8]
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2221              		.loc 1 1306 0
 2222 000e 7B68     		ldr	r3, [r7, #4]
 2223 0010 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2224 0014 012B     		cmp	r3, #1
 2225 0016 01D1     		bne	.L101
 2226              		.loc 1 1306 0 is_stmt 0 discriminator 1
 2227 0018 0223     		movs	r3, #2
 2228 001a 07E1     		b	.L102
 2229              	.L101:
 2230              		.loc 1 1306 0 discriminator 2
 2231 001c 7B68     		ldr	r3, [r7, #4]
 2232 001e 0122     		movs	r2, #1
 2233 0020 83F83C20 		strb	r2, [r3, #60]
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Channel > ADC_CHANNEL_9)
 2234              		.loc 1 1309 0 is_stmt 1 discriminator 2
 2235 0024 3B68     		ldr	r3, [r7]
 2236 0026 1B68     		ldr	r3, [r3]
 2237 0028 092B     		cmp	r3, #9
 2238 002a 26D9     		bls	.L103
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 2239              		.loc 1 1312 0
 2240 002c 7B68     		ldr	r3, [r7, #4]
 2241 002e 1A68     		ldr	r2, [r3]
 2242 0030 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 63


 2243 0032 1B68     		ldr	r3, [r3]
 2244 0034 D968     		ldr	r1, [r3, #12]
 2245 0036 3B68     		ldr	r3, [r7]
 2246 0038 1B68     		ldr	r3, [r3]
 2247 003a 9BB2     		uxth	r3, r3
 2248 003c 1846     		mov	r0, r3
 2249 003e 0346     		mov	r3, r0
 2250 0040 5B00     		lsls	r3, r3, #1
 2251 0042 0344     		add	r3, r3, r0
 2252 0044 1E3B     		subs	r3, r3, #30
 2253 0046 0720     		movs	r0, #7
 2254 0048 00FA03F3 		lsl	r3, r0, r3
 2255 004c DB43     		mvns	r3, r3
 2256 004e 0B40     		ands	r3, r3, r1
 2257 0050 D360     		str	r3, [r2, #12]
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 2258              		.loc 1 1315 0
 2259 0052 7B68     		ldr	r3, [r7, #4]
 2260 0054 1A68     		ldr	r2, [r3]
 2261 0056 7B68     		ldr	r3, [r7, #4]
 2262 0058 1B68     		ldr	r3, [r3]
 2263 005a D968     		ldr	r1, [r3, #12]
 2264 005c 3B68     		ldr	r3, [r7]
 2265 005e 9868     		ldr	r0, [r3, #8]
 2266 0060 3B68     		ldr	r3, [r7]
 2267 0062 1B68     		ldr	r3, [r3]
 2268 0064 9BB2     		uxth	r3, r3
 2269 0066 1C46     		mov	r4, r3
 2270 0068 2346     		mov	r3, r4
 2271 006a 5B00     		lsls	r3, r3, #1
 2272 006c 2344     		add	r3, r3, r4
 2273 006e 1E3B     		subs	r3, r3, #30
 2274 0070 00FA03F3 		lsl	r3, r0, r3
 2275 0074 0B43     		orrs	r3, r3, r1
 2276 0076 D360     		str	r3, [r2, #12]
 2277 0078 23E0     		b	.L104
 2278              	.L103:
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old sample time */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 2279              		.loc 1 1320 0
 2280 007a 7B68     		ldr	r3, [r7, #4]
 2281 007c 1A68     		ldr	r2, [r3]
 2282 007e 7B68     		ldr	r3, [r7, #4]
 2283 0080 1B68     		ldr	r3, [r3]
 2284 0082 1969     		ldr	r1, [r3, #16]
 2285 0084 3B68     		ldr	r3, [r7]
 2286 0086 1B68     		ldr	r3, [r3]
 2287 0088 9BB2     		uxth	r3, r3
 2288 008a 1846     		mov	r0, r3
 2289 008c 0346     		mov	r3, r0
 2290 008e 5B00     		lsls	r3, r3, #1
 2291 0090 0344     		add	r3, r3, r0
ARM GAS  /tmp/ccsc4Dzg.s 			page 64


 2292 0092 0720     		movs	r0, #7
 2293 0094 00FA03F3 		lsl	r3, r0, r3
 2294 0098 DB43     		mvns	r3, r3
 2295 009a 0B40     		ands	r3, r3, r1
 2296 009c 1361     		str	r3, [r2, #16]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the new sample time */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 2297              		.loc 1 1323 0
 2298 009e 7B68     		ldr	r3, [r7, #4]
 2299 00a0 1A68     		ldr	r2, [r3]
 2300 00a2 7B68     		ldr	r3, [r7, #4]
 2301 00a4 1B68     		ldr	r3, [r3]
 2302 00a6 1969     		ldr	r1, [r3, #16]
 2303 00a8 3B68     		ldr	r3, [r7]
 2304 00aa 9868     		ldr	r0, [r3, #8]
 2305 00ac 3B68     		ldr	r3, [r7]
 2306 00ae 1B68     		ldr	r3, [r3]
 2307 00b0 9BB2     		uxth	r3, r3
 2308 00b2 1C46     		mov	r4, r3
 2309 00b4 2346     		mov	r3, r4
 2310 00b6 5B00     		lsls	r3, r3, #1
 2311 00b8 2344     		add	r3, r3, r4
 2312 00ba 00FA03F3 		lsl	r3, r0, r3
 2313 00be 0B43     		orrs	r3, r3, r1
 2314 00c0 1361     		str	r3, [r2, #16]
 2315              	.L104:
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 1 to 6 */
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (sConfig->Rank < 7U)
 2316              		.loc 1 1327 0
 2317 00c2 3B68     		ldr	r3, [r7]
 2318 00c4 5B68     		ldr	r3, [r3, #4]
 2319 00c6 062B     		cmp	r3, #6
 2320 00c8 24D8     		bhi	.L105
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 2321              		.loc 1 1330 0
 2322 00ca 7B68     		ldr	r3, [r7, #4]
 2323 00cc 1968     		ldr	r1, [r3]
 2324 00ce 7B68     		ldr	r3, [r7, #4]
 2325 00d0 1B68     		ldr	r3, [r3]
 2326 00d2 586B     		ldr	r0, [r3, #52]
 2327 00d4 3B68     		ldr	r3, [r7]
 2328 00d6 5A68     		ldr	r2, [r3, #4]
 2329 00d8 1346     		mov	r3, r2
 2330 00da 9B00     		lsls	r3, r3, #2
 2331 00dc 1344     		add	r3, r3, r2
 2332 00de 053B     		subs	r3, r3, #5
 2333 00e0 1F22     		movs	r2, #31
 2334 00e2 02FA03F3 		lsl	r3, r2, r3
 2335 00e6 DB43     		mvns	r3, r3
 2336 00e8 0340     		ands	r3, r3, r0
 2337 00ea 4B63     		str	r3, [r1, #52]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
ARM GAS  /tmp/ccsc4Dzg.s 			page 65


1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 2338              		.loc 1 1333 0
 2339 00ec 7B68     		ldr	r3, [r7, #4]
 2340 00ee 1968     		ldr	r1, [r3]
 2341 00f0 7B68     		ldr	r3, [r7, #4]
 2342 00f2 1B68     		ldr	r3, [r3]
 2343 00f4 586B     		ldr	r0, [r3, #52]
 2344 00f6 3B68     		ldr	r3, [r7]
 2345 00f8 1B68     		ldr	r3, [r3]
 2346 00fa 9BB2     		uxth	r3, r3
 2347 00fc 1C46     		mov	r4, r3
 2348 00fe 3B68     		ldr	r3, [r7]
 2349 0100 5A68     		ldr	r2, [r3, #4]
 2350 0102 1346     		mov	r3, r2
 2351 0104 9B00     		lsls	r3, r3, #2
 2352 0106 1344     		add	r3, r3, r2
 2353 0108 053B     		subs	r3, r3, #5
 2354 010a 04FA03F3 		lsl	r3, r4, r3
 2355 010e 0343     		orrs	r3, r3, r0
 2356 0110 4B63     		str	r3, [r1, #52]
 2357 0112 4CE0     		b	.L106
 2358              	.L105:
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 7 to 12 */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else if (sConfig->Rank < 13U)
 2359              		.loc 1 1336 0
 2360 0114 3B68     		ldr	r3, [r7]
 2361 0116 5B68     		ldr	r3, [r3, #4]
 2362 0118 0C2B     		cmp	r3, #12
 2363 011a 24D8     		bhi	.L107
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 2364              		.loc 1 1339 0
 2365 011c 7B68     		ldr	r3, [r7, #4]
 2366 011e 1968     		ldr	r1, [r3]
 2367 0120 7B68     		ldr	r3, [r7, #4]
 2368 0122 1B68     		ldr	r3, [r3]
 2369 0124 186B     		ldr	r0, [r3, #48]
 2370 0126 3B68     		ldr	r3, [r7]
 2371 0128 5A68     		ldr	r2, [r3, #4]
 2372 012a 1346     		mov	r3, r2
 2373 012c 9B00     		lsls	r3, r3, #2
 2374 012e 1344     		add	r3, r3, r2
 2375 0130 233B     		subs	r3, r3, #35
 2376 0132 1F22     		movs	r2, #31
 2377 0134 02FA03F3 		lsl	r3, r2, r3
 2378 0138 DB43     		mvns	r3, r3
 2379 013a 0340     		ands	r3, r3, r0
 2380 013c 0B63     		str	r3, [r1, #48]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 2381              		.loc 1 1342 0
 2382 013e 7B68     		ldr	r3, [r7, #4]
 2383 0140 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccsc4Dzg.s 			page 66


 2384 0142 7B68     		ldr	r3, [r7, #4]
 2385 0144 1B68     		ldr	r3, [r3]
 2386 0146 186B     		ldr	r0, [r3, #48]
 2387 0148 3B68     		ldr	r3, [r7]
 2388 014a 1B68     		ldr	r3, [r3]
 2389 014c 9BB2     		uxth	r3, r3
 2390 014e 1C46     		mov	r4, r3
 2391 0150 3B68     		ldr	r3, [r7]
 2392 0152 5A68     		ldr	r2, [r3, #4]
 2393 0154 1346     		mov	r3, r2
 2394 0156 9B00     		lsls	r3, r3, #2
 2395 0158 1344     		add	r3, r3, r2
 2396 015a 233B     		subs	r3, r3, #35
 2397 015c 04FA03F3 		lsl	r3, r4, r3
 2398 0160 0343     		orrs	r3, r3, r0
 2399 0162 0B63     		str	r3, [r1, #48]
 2400 0164 23E0     		b	.L106
 2401              	.L107:
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* For Rank 13 to 16 */
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Clear the old SQx bits for the selected rank */
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 2402              		.loc 1 1348 0
 2403 0166 7B68     		ldr	r3, [r7, #4]
 2404 0168 1968     		ldr	r1, [r3]
 2405 016a 7B68     		ldr	r3, [r7, #4]
 2406 016c 1B68     		ldr	r3, [r3]
 2407 016e D86A     		ldr	r0, [r3, #44]
 2408 0170 3B68     		ldr	r3, [r7]
 2409 0172 5A68     		ldr	r2, [r3, #4]
 2410 0174 1346     		mov	r3, r2
 2411 0176 9B00     		lsls	r3, r3, #2
 2412 0178 1344     		add	r3, r3, r2
 2413 017a 413B     		subs	r3, r3, #65
 2414 017c 1F22     		movs	r2, #31
 2415 017e 02FA03F3 		lsl	r3, r2, r3
 2416 0182 DB43     		mvns	r3, r3
 2417 0184 0340     		ands	r3, r3, r0
 2418 0186 CB62     		str	r3, [r1, #44]
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the SQx bits for the selected rank */
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 2419              		.loc 1 1351 0
 2420 0188 7B68     		ldr	r3, [r7, #4]
 2421 018a 1968     		ldr	r1, [r3]
 2422 018c 7B68     		ldr	r3, [r7, #4]
 2423 018e 1B68     		ldr	r3, [r3]
 2424 0190 D86A     		ldr	r0, [r3, #44]
 2425 0192 3B68     		ldr	r3, [r7]
 2426 0194 1B68     		ldr	r3, [r3]
 2427 0196 9BB2     		uxth	r3, r3
 2428 0198 1C46     		mov	r4, r3
 2429 019a 3B68     		ldr	r3, [r7]
 2430 019c 5A68     		ldr	r2, [r3, #4]
 2431 019e 1346     		mov	r3, r2
ARM GAS  /tmp/ccsc4Dzg.s 			page 67


 2432 01a0 9B00     		lsls	r3, r3, #2
 2433 01a2 1344     		add	r3, r3, r2
 2434 01a4 413B     		subs	r3, r3, #65
 2435 01a6 04FA03F3 		lsl	r3, r4, r3
 2436 01aa 0343     		orrs	r3, r3, r0
 2437 01ac CB62     		str	r3, [r1, #44]
 2438              	.L106:
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Pointer to the common control register to which is belonging hadc    */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* control register)                                                    */
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2439              		.loc 1 1357 0
 2440 01ae 224B     		ldr	r3, .L113
 2441 01b0 FB60     		str	r3, [r7, #12]
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_18 is selected enable VBAT Channel */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 2442              		.loc 1 1360 0
 2443 01b2 7B68     		ldr	r3, [r7, #4]
 2444 01b4 1B68     		ldr	r3, [r3]
 2445 01b6 214A     		ldr	r2, .L113+4
 2446 01b8 9342     		cmp	r3, r2
 2447 01ba 09D1     		bne	.L108
 2448              		.loc 1 1360 0 is_stmt 0 discriminator 1
 2449 01bc 3B68     		ldr	r3, [r7]
 2450 01be 1B68     		ldr	r3, [r3]
 2451 01c0 122B     		cmp	r3, #18
 2452 01c2 05D1     		bne	.L108
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the VBAT channel*/
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_VBATE;
 2453              		.loc 1 1363 0 is_stmt 1
 2454 01c4 FB68     		ldr	r3, [r7, #12]
 2455 01c6 5B68     		ldr	r3, [r3, #4]
 2456 01c8 43F48002 		orr	r2, r3, #4194304
 2457 01cc FB68     		ldr	r3, [r7, #12]
 2458 01ce 5A60     		str	r2, [r3, #4]
 2459              	.L108:
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* if ADC1 Channel_16 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VRE
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channe
 2460              		.loc 1 1367 0
 2461 01d0 7B68     		ldr	r3, [r7, #4]
 2462 01d2 1B68     		ldr	r3, [r3]
 2463 01d4 194A     		ldr	r2, .L113+4
 2464 01d6 9342     		cmp	r3, r2
 2465 01d8 23D1     		bne	.L109
 2466              		.loc 1 1367 0 is_stmt 0 discriminator 1
 2467 01da 3B68     		ldr	r3, [r7]
 2468 01dc 1B68     		ldr	r3, [r3]
 2469 01de 102B     		cmp	r3, #16
 2470 01e0 03D0     		beq	.L110
 2471              		.loc 1 1367 0 discriminator 2
 2472 01e2 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccsc4Dzg.s 			page 68


 2473 01e4 1B68     		ldr	r3, [r3]
 2474 01e6 112B     		cmp	r3, #17
 2475 01e8 1BD1     		bne	.L109
 2476              	.L110:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the TSVREFE channel*/
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 2477              		.loc 1 1370 0 is_stmt 1
 2478 01ea FB68     		ldr	r3, [r7, #12]
 2479 01ec 5B68     		ldr	r3, [r3, #4]
 2480 01ee 43F40002 		orr	r2, r3, #8388608
 2481 01f2 FB68     		ldr	r3, [r7, #12]
 2482 01f4 5A60     		str	r2, [r3, #4]
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 2483              		.loc 1 1372 0
 2484 01f6 3B68     		ldr	r3, [r7]
 2485 01f8 1B68     		ldr	r3, [r3]
 2486 01fa 102B     		cmp	r3, #16
 2487 01fc 11D1     		bne	.L109
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Delay for temperature sensor stabilization time */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Compute number of CPU cycles to wait for */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 2488              		.loc 1 1376 0
 2489 01fe 104B     		ldr	r3, .L113+8
 2490 0200 1B68     		ldr	r3, [r3]
 2491 0202 104A     		ldr	r2, .L113+12
 2492 0204 A2FB0323 		umull	r2, r3, r2, r3
 2493 0208 9A0C     		lsrs	r2, r3, #18
 2494 020a 1346     		mov	r3, r2
 2495 020c 9B00     		lsls	r3, r3, #2
 2496 020e 1344     		add	r3, r3, r2
 2497 0210 5B00     		lsls	r3, r3, #1
 2498 0212 BB60     		str	r3, [r7, #8]
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2499              		.loc 1 1377 0
 2500 0214 02E0     		b	.L111
 2501              	.L112:
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         counter--;
 2502              		.loc 1 1379 0
 2503 0216 BB68     		ldr	r3, [r7, #8]
 2504 0218 013B     		subs	r3, r3, #1
 2505 021a BB60     		str	r3, [r7, #8]
 2506              	.L111:
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       while(counter != 0U)
 2507              		.loc 1 1377 0
 2508 021c BB68     		ldr	r3, [r7, #8]
 2509 021e 002B     		cmp	r3, #0
 2510 0220 F9D1     		bne	.L112
 2511              	.L109:
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
ARM GAS  /tmp/ccsc4Dzg.s 			page 69


1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2512              		.loc 1 1385 0
 2513 0222 7B68     		ldr	r3, [r7, #4]
 2514 0224 0022     		movs	r2, #0
 2515 0226 83F83C20 		strb	r2, [r3, #60]
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2516              		.loc 1 1388 0
 2517 022a 0023     		movs	r3, #0
 2518              	.L102:
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2519              		.loc 1 1389 0
 2520 022c 1846     		mov	r0, r3
 2521 022e 1037     		adds	r7, r7, #16
 2522              	.LCFI104:
 2523              		.cfi_def_cfa_offset 8
 2524 0230 BD46     		mov	sp, r7
 2525              	.LCFI105:
 2526              		.cfi_def_cfa_register 13
 2527              		@ sp needed
 2528 0232 90BC     		pop	{r4, r7}
 2529              	.LCFI106:
 2530              		.cfi_restore 7
 2531              		.cfi_restore 4
 2532              		.cfi_def_cfa_offset 0
 2533 0234 7047     		bx	lr
 2534              	.L114:
 2535 0236 00BF     		.align	2
 2536              	.L113:
 2537 0238 00230140 		.word	1073816320
 2538 023c 00200140 		.word	1073815552
 2539 0240 00000000 		.word	SystemCoreClock
 2540 0244 83DE1B43 		.word	1125899907
 2541              		.cfi_endproc
 2542              	.LFE142:
 2544              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2545              		.align	1
 2546              		.global	HAL_ADC_AnalogWDGConfig
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2550              		.fpu fpv4-sp-d16
 2552              	HAL_ADC_AnalogWDGConfig:
 2553              	.LFB143:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @note Analog watchdog thresholds can be modified while ADC conversion
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * is on going.
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * In this case, some constraints must be taken into account:
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * The programmed threshold values are effective from the next
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * ADC EOC (end of unitary conversion).
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * Considering that registers write delay may happen due to
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * bus activity, this might cause an uncertainty on the
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * effective timing of the new programmed threshold values.
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
ARM GAS  /tmp/ccsc4Dzg.s 			page 70


1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  AnalogWDGConfig  pointer to an ADC_AnalogWDGConfTypeDef structure 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         that contains the configuration information of ADC analog watchdog.
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL status	  
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2554              		.loc 1 1408 0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 8
 2557              		@ frame_needed = 1, uses_anonymous_args = 0
 2558              		@ link register save eliminated.
 2559 0000 80B4     		push	{r7}
 2560              	.LCFI107:
 2561              		.cfi_def_cfa_offset 4
 2562              		.cfi_offset 7, -4
 2563 0002 83B0     		sub	sp, sp, #12
 2564              	.LCFI108:
 2565              		.cfi_def_cfa_offset 16
 2566 0004 00AF     		add	r7, sp, #0
 2567              	.LCFI109:
 2568              		.cfi_def_cfa_register 7
 2569 0006 7860     		str	r0, [r7, #4]
 2570 0008 3960     		str	r1, [r7]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   uint32_t tmp = 0U;
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */  
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Check the parameters */
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(AnalogWDGConfig->WatchdogMode));
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #ifdef USE_FULL_ASSERT  
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmp = ADC_GET_RESOLUTION(hadc);
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->HighThreshold));
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(tmp, AnalogWDGConfig->LowThreshold));
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** #endif /* USE_FULL_ASSERT  */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process locked */
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 2571              		.loc 1 1425 0
 2572 000a 7B68     		ldr	r3, [r7, #4]
 2573 000c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2574 0010 012B     		cmp	r3, #1
 2575 0012 01D1     		bne	.L116
 2576              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2577 0014 0223     		movs	r3, #2
 2578 0016 4CE0     		b	.L117
 2579              	.L116:
 2580              		.loc 1 1425 0 discriminator 2
 2581 0018 7B68     		ldr	r3, [r7, #4]
 2582 001a 0122     		movs	r2, #1
 2583 001c 83F83C20 		strb	r2, [r3, #60]
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
 2584              		.loc 1 1427 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccsc4Dzg.s 			page 71


 2585 0020 3B68     		ldr	r3, [r7]
 2586 0022 1B69     		ldr	r3, [r3, #16]
 2587 0024 012B     		cmp	r3, #1
 2588 0026 08D1     		bne	.L118
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the ADC Analog watchdog interrupt */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
 2589              		.loc 1 1430 0
 2590 0028 7B68     		ldr	r3, [r7, #4]
 2591 002a 1B68     		ldr	r3, [r3]
 2592 002c 7A68     		ldr	r2, [r7, #4]
 2593 002e 1268     		ldr	r2, [r2]
 2594 0030 5268     		ldr	r2, [r2, #4]
 2595 0032 42F04002 		orr	r2, r2, #64
 2596 0036 5A60     		str	r2, [r3, #4]
 2597 0038 07E0     		b	.L119
 2598              	.L118:
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the ADC Analog watchdog interrupt */
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
 2599              		.loc 1 1435 0
 2600 003a 7B68     		ldr	r3, [r7, #4]
 2601 003c 1B68     		ldr	r3, [r3]
 2602 003e 7A68     		ldr	r2, [r7, #4]
 2603 0040 1268     		ldr	r2, [r2]
 2604 0042 5268     		ldr	r2, [r2, #4]
 2605 0044 22F04002 		bic	r2, r2, #64
 2606 0048 5A60     		str	r2, [r3, #4]
 2607              	.L119:
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &=  ~(ADC_CR1_AWDSGL | ADC_CR1_JAWDEN | ADC_CR1_AWDEN);
 2608              		.loc 1 1439 0
 2609 004a 7B68     		ldr	r3, [r7, #4]
 2610 004c 1A68     		ldr	r2, [r3]
 2611 004e 7B68     		ldr	r3, [r7, #4]
 2612 0050 1B68     		ldr	r3, [r3]
 2613 0052 5B68     		ldr	r3, [r3, #4]
 2614 0054 23F44003 		bic	r3, r3, #12582912
 2615 0058 23F40073 		bic	r3, r3, #512
 2616 005c 5360     		str	r3, [r2, #4]
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the analog watchdog enable mode */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= AnalogWDGConfig->WatchdogMode;
 2617              		.loc 1 1442 0
 2618 005e 7B68     		ldr	r3, [r7, #4]
 2619 0060 1B68     		ldr	r3, [r3]
 2620 0062 7A68     		ldr	r2, [r7, #4]
 2621 0064 1268     		ldr	r2, [r2]
 2622 0066 5168     		ldr	r1, [r2, #4]
 2623 0068 3A68     		ldr	r2, [r7]
 2624 006a 1268     		ldr	r2, [r2]
 2625 006c 0A43     		orrs	r2, r2, r1
 2626 006e 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 72


1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the high threshold */
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->HTR = AnalogWDGConfig->HighThreshold;
 2627              		.loc 1 1445 0
 2628 0070 7B68     		ldr	r3, [r7, #4]
 2629 0072 1B68     		ldr	r3, [r3]
 2630 0074 3A68     		ldr	r2, [r7]
 2631 0076 5268     		ldr	r2, [r2, #4]
 2632 0078 5A62     		str	r2, [r3, #36]
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the low threshold */
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->LTR = AnalogWDGConfig->LowThreshold;
 2633              		.loc 1 1448 0
 2634 007a 7B68     		ldr	r3, [r7, #4]
 2635 007c 1B68     		ldr	r3, [r3]
 2636 007e 3A68     		ldr	r2, [r7]
 2637 0080 9268     		ldr	r2, [r2, #8]
 2638 0082 9A62     		str	r2, [r3, #40]
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Clear the Analog watchdog channel select bits */
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~ADC_CR1_AWDCH;
 2639              		.loc 1 1451 0
 2640 0084 7B68     		ldr	r3, [r7, #4]
 2641 0086 1B68     		ldr	r3, [r3]
 2642 0088 7A68     		ldr	r2, [r7, #4]
 2643 008a 1268     		ldr	r2, [r2]
 2644 008c 5268     		ldr	r2, [r2, #4]
 2645 008e 22F01F02 		bic	r2, r2, #31
 2646 0092 5A60     		str	r2, [r3, #4]
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the Analog watchdog channel */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |= (uint32_t)((uint16_t)(AnalogWDGConfig->Channel));
 2647              		.loc 1 1454 0
 2648 0094 7B68     		ldr	r3, [r7, #4]
 2649 0096 1B68     		ldr	r3, [r3]
 2650 0098 7A68     		ldr	r2, [r7, #4]
 2651 009a 1268     		ldr	r2, [r2]
 2652 009c 5268     		ldr	r2, [r2, #4]
 2653 009e 3968     		ldr	r1, [r7]
 2654 00a0 C968     		ldr	r1, [r1, #12]
 2655 00a2 89B2     		uxth	r1, r1
 2656 00a4 0A43     		orrs	r2, r2, r1
 2657 00a6 5A60     		str	r2, [r3, #4]
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Process unlocked */
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2658              		.loc 1 1457 0
 2659 00a8 7B68     		ldr	r3, [r7, #4]
 2660 00aa 0022     		movs	r2, #0
 2661 00ac 83F83C20 		strb	r2, [r3, #60]
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return function status */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return HAL_OK;
 2662              		.loc 1 1460 0
 2663 00b0 0023     		movs	r3, #0
 2664              	.L117:
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
ARM GAS  /tmp/ccsc4Dzg.s 			page 73


 2665              		.loc 1 1461 0
 2666 00b2 1846     		mov	r0, r3
 2667 00b4 0C37     		adds	r7, r7, #12
 2668              	.LCFI110:
 2669              		.cfi_def_cfa_offset 4
 2670 00b6 BD46     		mov	sp, r7
 2671              	.LCFI111:
 2672              		.cfi_def_cfa_register 13
 2673              		@ sp needed
 2674 00b8 5DF8047B 		ldr	r7, [sp], #4
 2675              	.LCFI112:
 2676              		.cfi_restore 7
 2677              		.cfi_def_cfa_offset 0
 2678 00bc 7047     		bx	lr
 2679              		.cfi_endproc
 2680              	.LFE143:
 2682              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2683              		.align	1
 2684              		.global	HAL_ADC_GetState
 2685              		.syntax unified
 2686              		.thumb
 2687              		.thumb_func
 2688              		.fpu fpv4-sp-d16
 2690              	HAL_ADC_GetState:
 2691              	.LFB144:
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 ADC Peripheral State functions
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  *
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @verbatim   
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****             ##### Peripheral State and errors functions #####
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****  ===============================================================================  
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     [..]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     This subsection provides functions allowing to
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC state
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       (+) Check the ADC Error
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****          
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** @endverbatim
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  return the ADC state
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval HAL state
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2692              		.loc 1 1490 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccsc4Dzg.s 			page 74


 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696              		@ link register save eliminated.
 2697 0000 80B4     		push	{r7}
 2698              	.LCFI113:
 2699              		.cfi_def_cfa_offset 4
 2700              		.cfi_offset 7, -4
 2701 0002 83B0     		sub	sp, sp, #12
 2702              	.LCFI114:
 2703              		.cfi_def_cfa_offset 16
 2704 0004 00AF     		add	r7, sp, #0
 2705              	.LCFI115:
 2706              		.cfi_def_cfa_register 7
 2707 0006 7860     		str	r0, [r7, #4]
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Return ADC state */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->State;
 2708              		.loc 1 1492 0
 2709 0008 7B68     		ldr	r3, [r7, #4]
 2710 000a 1B6C     		ldr	r3, [r3, #64]
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2711              		.loc 1 1493 0
 2712 000c 1846     		mov	r0, r3
 2713 000e 0C37     		adds	r7, r7, #12
 2714              	.LCFI116:
 2715              		.cfi_def_cfa_offset 4
 2716 0010 BD46     		mov	sp, r7
 2717              	.LCFI117:
 2718              		.cfi_def_cfa_register 13
 2719              		@ sp needed
 2720 0012 5DF8047B 		ldr	r7, [sp], #4
 2721              	.LCFI118:
 2722              		.cfi_restore 7
 2723              		.cfi_def_cfa_offset 0
 2724 0016 7047     		bx	lr
 2725              		.cfi_endproc
 2726              	.LFE144:
 2728              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_ADC_GetError
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	HAL_ADC_GetError:
 2737              	.LFB145:
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Return the ADC error code
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval ADC Error Code
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2738              		.loc 1 1502 0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 8
 2741              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 75


 2742              		@ link register save eliminated.
 2743 0000 80B4     		push	{r7}
 2744              	.LCFI119:
 2745              		.cfi_def_cfa_offset 4
 2746              		.cfi_offset 7, -4
 2747 0002 83B0     		sub	sp, sp, #12
 2748              	.LCFI120:
 2749              		.cfi_def_cfa_offset 16
 2750 0004 00AF     		add	r7, sp, #0
 2751              	.LCFI121:
 2752              		.cfi_def_cfa_register 7
 2753 0006 7860     		str	r0, [r7, #4]
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   return hadc->ErrorCode;
 2754              		.loc 1 1503 0
 2755 0008 7B68     		ldr	r3, [r7, #4]
 2756 000a 5B6C     		ldr	r3, [r3, #68]
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 2757              		.loc 1 1504 0
 2758 000c 1846     		mov	r0, r3
 2759 000e 0C37     		adds	r7, r7, #12
 2760              	.LCFI122:
 2761              		.cfi_def_cfa_offset 4
 2762 0010 BD46     		mov	sp, r7
 2763              	.LCFI123:
 2764              		.cfi_def_cfa_register 13
 2765              		@ sp needed
 2766 0012 5DF8047B 		ldr	r7, [sp], #4
 2767              	.LCFI124:
 2768              		.cfi_restore 7
 2769              		.cfi_def_cfa_offset 0
 2770 0016 7047     		bx	lr
 2771              		.cfi_endproc
 2772              	.LFE145:
 2774              		.section	.text.ADC_Init,"ax",%progbits
 2775              		.align	1
 2776              		.syntax unified
 2777              		.thumb
 2778              		.thumb_func
 2779              		.fpu fpv4-sp-d16
 2781              	ADC_Init:
 2782              	.LFB146:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @}
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /** @addtogroup ADC_Private_Functions
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @{
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         in the ADC_InitStruct without initializing the ADC MSP.       
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *         the configuration information for the specified ADC.  
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccsc4Dzg.s 			page 76


1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_Init(ADC_HandleTypeDef* hadc)
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 2783              		.loc 1 1522 0
 2784              		.cfi_startproc
 2785              		@ args = 0, pretend = 0, frame = 16
 2786              		@ frame_needed = 1, uses_anonymous_args = 0
 2787              		@ link register save eliminated.
 2788 0000 80B4     		push	{r7}
 2789              	.LCFI125:
 2790              		.cfi_def_cfa_offset 4
 2791              		.cfi_offset 7, -4
 2792 0002 85B0     		sub	sp, sp, #20
 2793              	.LCFI126:
 2794              		.cfi_def_cfa_offset 24
 2795 0004 00AF     		add	r7, sp, #0
 2796              	.LCFI127:
 2797              		.cfi_def_cfa_register 7
 2798 0006 7860     		str	r0, [r7, #4]
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_Common_TypeDef *tmpADC_Common;
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC parameters */
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Pointer to the common control register to which is belonging hadc    */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* control register)                                                    */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2799              		.loc 1 1529 0
 2800 0008 784B     		ldr	r3, .L129
 2801 000a FB60     		str	r3, [r7, #12]
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set the ADC clock prescaler */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 2802              		.loc 1 1532 0
 2803 000c FB68     		ldr	r3, [r7, #12]
 2804 000e 5B68     		ldr	r3, [r3, #4]
 2805 0010 23F44032 		bic	r2, r3, #196608
 2806 0014 FB68     		ldr	r3, [r7, #12]
 2807 0016 5A60     		str	r2, [r3, #4]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 2808              		.loc 1 1533 0
 2809 0018 FB68     		ldr	r3, [r7, #12]
 2810 001a 5A68     		ldr	r2, [r3, #4]
 2811 001c 7B68     		ldr	r3, [r7, #4]
 2812 001e 5B68     		ldr	r3, [r3, #4]
 2813 0020 1A43     		orrs	r2, r2, r3
 2814 0022 FB68     		ldr	r3, [r7, #12]
 2815 0024 5A60     		str	r2, [r3, #4]
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC scan mode */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 2816              		.loc 1 1536 0
 2817 0026 7B68     		ldr	r3, [r7, #4]
 2818 0028 1B68     		ldr	r3, [r3]
 2819 002a 7A68     		ldr	r2, [r7, #4]
 2820 002c 1268     		ldr	r2, [r2]
 2821 002e 5268     		ldr	r2, [r2, #4]
 2822 0030 22F48072 		bic	r2, r2, #256
 2823 0034 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 77


1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 2824              		.loc 1 1537 0
 2825 0036 7B68     		ldr	r3, [r7, #4]
 2826 0038 1B68     		ldr	r3, [r3]
 2827 003a 7A68     		ldr	r2, [r7, #4]
 2828 003c 1268     		ldr	r2, [r2]
 2829 003e 5168     		ldr	r1, [r2, #4]
 2830 0040 7A68     		ldr	r2, [r7, #4]
 2831 0042 1269     		ldr	r2, [r2, #16]
 2832 0044 1202     		lsls	r2, r2, #8
 2833 0046 0A43     		orrs	r2, r2, r1
 2834 0048 5A60     		str	r2, [r3, #4]
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC resolution */
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 2835              		.loc 1 1540 0
 2836 004a 7B68     		ldr	r3, [r7, #4]
 2837 004c 1B68     		ldr	r3, [r3]
 2838 004e 7A68     		ldr	r2, [r7, #4]
 2839 0050 1268     		ldr	r2, [r2]
 2840 0052 5268     		ldr	r2, [r2, #4]
 2841 0054 22F04072 		bic	r2, r2, #50331648
 2842 0058 5A60     		str	r2, [r3, #4]
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR1 |=  hadc->Init.Resolution;
 2843              		.loc 1 1541 0
 2844 005a 7B68     		ldr	r3, [r7, #4]
 2845 005c 1B68     		ldr	r3, [r3]
 2846 005e 7A68     		ldr	r2, [r7, #4]
 2847 0060 1268     		ldr	r2, [r2]
 2848 0062 5168     		ldr	r1, [r2, #4]
 2849 0064 7A68     		ldr	r2, [r7, #4]
 2850 0066 9268     		ldr	r2, [r2, #8]
 2851 0068 0A43     		orrs	r2, r2, r1
 2852 006a 5A60     		str	r2, [r3, #4]
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC data alignment */
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 2853              		.loc 1 1544 0
 2854 006c 7B68     		ldr	r3, [r7, #4]
 2855 006e 1B68     		ldr	r3, [r3]
 2856 0070 7A68     		ldr	r2, [r7, #4]
 2857 0072 1268     		ldr	r2, [r2]
 2858 0074 9268     		ldr	r2, [r2, #8]
 2859 0076 22F40062 		bic	r2, r2, #2048
 2860 007a 9A60     		str	r2, [r3, #8]
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= hadc->Init.DataAlign;
 2861              		.loc 1 1545 0
 2862 007c 7B68     		ldr	r3, [r7, #4]
 2863 007e 1B68     		ldr	r3, [r3]
 2864 0080 7A68     		ldr	r2, [r7, #4]
 2865 0082 1268     		ldr	r2, [r2]
 2866 0084 9168     		ldr	r1, [r2, #8]
 2867 0086 7A68     		ldr	r2, [r7, #4]
 2868 0088 D268     		ldr	r2, [r2, #12]
 2869 008a 0A43     		orrs	r2, r2, r1
 2870 008c 9A60     		str	r2, [r3, #8]
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
ARM GAS  /tmp/ccsc4Dzg.s 			page 78


1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable external trigger if trigger selection is different of software  */
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* start.                                                                 */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Note: This configuration keeps the hardware feature of parameter       */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /*       software start.                                                  */
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 2871              		.loc 1 1552 0
 2872 008e 7B68     		ldr	r3, [r7, #4]
 2873 0090 9B6A     		ldr	r3, [r3, #40]
 2874 0092 574A     		ldr	r2, .L129+4
 2875 0094 9342     		cmp	r3, r2
 2876 0096 22D0     		beq	.L125
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger to start conversion */
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 2877              		.loc 1 1555 0
 2878 0098 7B68     		ldr	r3, [r7, #4]
 2879 009a 1B68     		ldr	r3, [r3]
 2880 009c 7A68     		ldr	r2, [r7, #4]
 2881 009e 1268     		ldr	r2, [r2]
 2882 00a0 9268     		ldr	r2, [r2, #8]
 2883 00a2 22F07062 		bic	r2, r2, #251658240
 2884 00a6 9A60     		str	r2, [r3, #8]
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 2885              		.loc 1 1556 0
 2886 00a8 7B68     		ldr	r3, [r7, #4]
 2887 00aa 1B68     		ldr	r3, [r3]
 2888 00ac 7A68     		ldr	r2, [r7, #4]
 2889 00ae 1268     		ldr	r2, [r2]
 2890 00b0 9168     		ldr	r1, [r2, #8]
 2891 00b2 7A68     		ldr	r2, [r7, #4]
 2892 00b4 926A     		ldr	r2, [r2, #40]
 2893 00b6 0A43     		orrs	r2, r2, r1
 2894 00b8 9A60     		str	r2, [r3, #8]
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Select external trigger polarity */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 2895              		.loc 1 1559 0
 2896 00ba 7B68     		ldr	r3, [r7, #4]
 2897 00bc 1B68     		ldr	r3, [r3]
 2898 00be 7A68     		ldr	r2, [r7, #4]
 2899 00c0 1268     		ldr	r2, [r2]
 2900 00c2 9268     		ldr	r2, [r2, #8]
 2901 00c4 22F04052 		bic	r2, r2, #805306368
 2902 00c8 9A60     		str	r2, [r3, #8]
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 2903              		.loc 1 1560 0
 2904 00ca 7B68     		ldr	r3, [r7, #4]
 2905 00cc 1B68     		ldr	r3, [r3]
 2906 00ce 7A68     		ldr	r2, [r7, #4]
 2907 00d0 1268     		ldr	r2, [r2]
 2908 00d2 9168     		ldr	r1, [r2, #8]
 2909 00d4 7A68     		ldr	r2, [r7, #4]
 2910 00d6 D26A     		ldr	r2, [r2, #44]
 2911 00d8 0A43     		orrs	r2, r2, r1
 2912 00da 9A60     		str	r2, [r3, #8]
 2913 00dc 0FE0     		b	.L126
ARM GAS  /tmp/ccsc4Dzg.s 			page 79


 2914              	.L125:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Reset the external trigger */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 2915              		.loc 1 1565 0
 2916 00de 7B68     		ldr	r3, [r7, #4]
 2917 00e0 1B68     		ldr	r3, [r3]
 2918 00e2 7A68     		ldr	r2, [r7, #4]
 2919 00e4 1268     		ldr	r2, [r2]
 2920 00e6 9268     		ldr	r2, [r2, #8]
 2921 00e8 22F07062 		bic	r2, r2, #251658240
 2922 00ec 9A60     		str	r2, [r3, #8]
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 2923              		.loc 1 1566 0
 2924 00ee 7B68     		ldr	r3, [r7, #4]
 2925 00f0 1B68     		ldr	r3, [r3]
 2926 00f2 7A68     		ldr	r2, [r7, #4]
 2927 00f4 1268     		ldr	r2, [r2]
 2928 00f6 9268     		ldr	r2, [r2, #8]
 2929 00f8 22F04052 		bic	r2, r2, #805306368
 2930 00fc 9A60     		str	r2, [r3, #8]
 2931              	.L126:
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC continuous conversion mode */
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 2932              		.loc 1 1570 0
 2933 00fe 7B68     		ldr	r3, [r7, #4]
 2934 0100 1B68     		ldr	r3, [r3]
 2935 0102 7A68     		ldr	r2, [r7, #4]
 2936 0104 1268     		ldr	r2, [r2]
 2937 0106 9268     		ldr	r2, [r2, #8]
 2938 0108 22F00202 		bic	r2, r2, #2
 2939 010c 9A60     		str	r2, [r3, #8]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode);
 2940              		.loc 1 1571 0
 2941 010e 7B68     		ldr	r3, [r7, #4]
 2942 0110 1B68     		ldr	r3, [r3]
 2943 0112 7A68     		ldr	r2, [r7, #4]
 2944 0114 1268     		ldr	r2, [r2]
 2945 0116 9168     		ldr	r1, [r2, #8]
 2946 0118 7A68     		ldr	r2, [r7, #4]
 2947 011a 9269     		ldr	r2, [r2, #24]
 2948 011c 5200     		lsls	r2, r2, #1
 2949 011e 0A43     		orrs	r2, r2, r1
 2950 0120 9A60     		str	r2, [r3, #8]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if(hadc->Init.DiscontinuousConvMode != DISABLE)
 2951              		.loc 1 1573 0
 2952 0122 7B68     		ldr	r3, [r7, #4]
 2953 0124 1B6A     		ldr	r3, [r3, #32]
 2954 0126 002B     		cmp	r3, #0
 2955 0128 1BD0     		beq	.L127
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
ARM GAS  /tmp/ccsc4Dzg.s 			page 80


1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 2956              		.loc 1 1578 0
 2957 012a 7B68     		ldr	r3, [r7, #4]
 2958 012c 1B68     		ldr	r3, [r3]
 2959 012e 7A68     		ldr	r2, [r7, #4]
 2960 0130 1268     		ldr	r2, [r2]
 2961 0132 5268     		ldr	r2, [r2, #4]
 2962 0134 42F40062 		orr	r2, r2, #2048
 2963 0138 5A60     		str	r2, [r3, #4]
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Set the number of channels to be converted in discontinuous mode */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 2964              		.loc 1 1581 0
 2965 013a 7B68     		ldr	r3, [r7, #4]
 2966 013c 1B68     		ldr	r3, [r3]
 2967 013e 7A68     		ldr	r2, [r7, #4]
 2968 0140 1268     		ldr	r2, [r2]
 2969 0142 5268     		ldr	r2, [r2, #4]
 2970 0144 22F46042 		bic	r2, r2, #57344
 2971 0148 5A60     		str	r2, [r3, #4]
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 2972              		.loc 1 1582 0
 2973 014a 7B68     		ldr	r3, [r7, #4]
 2974 014c 1B68     		ldr	r3, [r3]
 2975 014e 7A68     		ldr	r2, [r7, #4]
 2976 0150 1268     		ldr	r2, [r2]
 2977 0152 5168     		ldr	r1, [r2, #4]
 2978 0154 7A68     		ldr	r2, [r7, #4]
 2979 0156 526A     		ldr	r2, [r2, #36]
 2980 0158 013A     		subs	r2, r2, #1
 2981 015a 5203     		lsls	r2, r2, #13
 2982 015c 0A43     		orrs	r2, r2, r1
 2983 015e 5A60     		str	r2, [r3, #4]
 2984 0160 07E0     		b	.L128
 2985              	.L127:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 2986              		.loc 1 1587 0
 2987 0162 7B68     		ldr	r3, [r7, #4]
 2988 0164 1B68     		ldr	r3, [r3]
 2989 0166 7A68     		ldr	r2, [r7, #4]
 2990 0168 1268     		ldr	r2, [r2]
 2991 016a 5268     		ldr	r2, [r2, #4]
 2992 016c 22F40062 		bic	r2, r2, #2048
 2993 0170 5A60     		str	r2, [r3, #4]
 2994              	.L128:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC number of conversion */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 2995              		.loc 1 1591 0
 2996 0172 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccsc4Dzg.s 			page 81


 2997 0174 1B68     		ldr	r3, [r3]
 2998 0176 7A68     		ldr	r2, [r7, #4]
 2999 0178 1268     		ldr	r2, [r2]
 3000 017a D26A     		ldr	r2, [r2, #44]
 3001 017c 22F47002 		bic	r2, r2, #15728640
 3002 0180 DA62     		str	r2, [r3, #44]
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 3003              		.loc 1 1592 0
 3004 0182 7B68     		ldr	r3, [r7, #4]
 3005 0184 1B68     		ldr	r3, [r3]
 3006 0186 7A68     		ldr	r2, [r7, #4]
 3007 0188 1268     		ldr	r2, [r2]
 3008 018a D16A     		ldr	r1, [r2, #44]
 3009 018c 7A68     		ldr	r2, [r7, #4]
 3010 018e D269     		ldr	r2, [r2, #28]
 3011 0190 013A     		subs	r2, r2, #1
 3012 0192 1205     		lsls	r2, r2, #20
 3013 0194 0A43     		orrs	r2, r2, r1
 3014 0196 DA62     		str	r2, [r3, #44]
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC DMA continuous request */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 3015              		.loc 1 1595 0
 3016 0198 7B68     		ldr	r3, [r7, #4]
 3017 019a 1B68     		ldr	r3, [r3]
 3018 019c 7A68     		ldr	r2, [r7, #4]
 3019 019e 1268     		ldr	r2, [r2]
 3020 01a0 9268     		ldr	r2, [r2, #8]
 3021 01a2 22F40072 		bic	r2, r2, #512
 3022 01a6 9A60     		str	r2, [r3, #8]
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_DMAContReq(hadc->Init.DMAContinuousRequests);
 3023              		.loc 1 1596 0
 3024 01a8 7B68     		ldr	r3, [r7, #4]
 3025 01aa 1B68     		ldr	r3, [r3]
 3026 01ac 7A68     		ldr	r2, [r7, #4]
 3027 01ae 1268     		ldr	r2, [r2]
 3028 01b0 9168     		ldr	r1, [r2, #8]
 3029 01b2 7A68     		ldr	r2, [r7, #4]
 3030 01b4 126B     		ldr	r2, [r2, #48]
 3031 01b6 5202     		lsls	r2, r2, #9
 3032 01b8 0A43     		orrs	r2, r2, r1
 3033 01ba 9A60     		str	r2, [r3, #8]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Enable or disable ADC end of conversion selection */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 3034              		.loc 1 1599 0
 3035 01bc 7B68     		ldr	r3, [r7, #4]
 3036 01be 1B68     		ldr	r3, [r3]
 3037 01c0 7A68     		ldr	r2, [r7, #4]
 3038 01c2 1268     		ldr	r2, [r2]
 3039 01c4 9268     		ldr	r2, [r2, #8]
 3040 01c6 22F48062 		bic	r2, r2, #1024
 3041 01ca 9A60     		str	r2, [r3, #8]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 3042              		.loc 1 1600 0
 3043 01cc 7B68     		ldr	r3, [r7, #4]
 3044 01ce 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccsc4Dzg.s 			page 82


 3045 01d0 7A68     		ldr	r2, [r7, #4]
 3046 01d2 1268     		ldr	r2, [r2]
 3047 01d4 9168     		ldr	r1, [r2, #8]
 3048 01d6 7A68     		ldr	r2, [r7, #4]
 3049 01d8 5269     		ldr	r2, [r2, #20]
 3050 01da 9202     		lsls	r2, r2, #10
 3051 01dc 0A43     		orrs	r2, r2, r1
 3052 01de 9A60     		str	r2, [r3, #8]
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3053              		.loc 1 1601 0
 3054 01e0 00BF     		nop
 3055 01e2 1437     		adds	r7, r7, #20
 3056              	.LCFI128:
 3057              		.cfi_def_cfa_offset 4
 3058 01e4 BD46     		mov	sp, r7
 3059              	.LCFI129:
 3060              		.cfi_def_cfa_register 13
 3061              		@ sp needed
 3062 01e6 5DF8047B 		ldr	r7, [sp], #4
 3063              	.LCFI130:
 3064              		.cfi_restore 7
 3065              		.cfi_def_cfa_offset 0
 3066 01ea 7047     		bx	lr
 3067              	.L130:
 3068              		.align	2
 3069              	.L129:
 3070 01ec 00230140 		.word	1073816320
 3071 01f0 0100000F 		.word	251658241
 3072              		.cfi_endproc
 3073              	.LFE146:
 3075              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 3076              		.align	1
 3077              		.syntax unified
 3078              		.thumb
 3079              		.thumb_func
 3080              		.fpu fpv4-sp-d16
 3082              	ADC_DMAConvCplt:
 3083              	.LFB147:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)   
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3084              		.loc 1 1610 0
 3085              		.cfi_startproc
 3086              		@ args = 0, pretend = 0, frame = 16
 3087              		@ frame_needed = 1, uses_anonymous_args = 0
 3088 0000 80B5     		push	{r7, lr}
 3089              	.LCFI131:
 3090              		.cfi_def_cfa_offset 8
 3091              		.cfi_offset 7, -8
 3092              		.cfi_offset 14, -4
 3093 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/ccsc4Dzg.s 			page 83


 3094              	.LCFI132:
 3095              		.cfi_def_cfa_offset 24
 3096 0004 00AF     		add	r7, sp, #0
 3097              	.LCFI133:
 3098              		.cfi_def_cfa_register 7
 3099 0006 7860     		str	r0, [r7, #4]
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3100              		.loc 1 1612 0
 3101 0008 7B68     		ldr	r3, [r7, #4]
 3102 000a 9B6B     		ldr	r3, [r3, #56]
 3103 000c FB60     		str	r3, [r7, #12]
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 3104              		.loc 1 1615 0
 3105 000e FB68     		ldr	r3, [r7, #12]
 3106 0010 1B6C     		ldr	r3, [r3, #64]
 3107 0012 03F05003 		and	r3, r3, #80
 3108 0016 002B     		cmp	r3, #0
 3109 0018 3CD1     		bne	.L132
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Update ADC state machine */
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3110              		.loc 1 1618 0
 3111 001a FB68     		ldr	r3, [r7, #12]
 3112 001c 1B6C     		ldr	r3, [r3, #64]
 3113 001e 43F40072 		orr	r2, r3, #512
 3114 0022 FB68     		ldr	r3, [r7, #12]
 3115 0024 1A64     		str	r2, [r3, #64]
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular   */
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going.      */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Note: On STM32F4, there is no independent flag of end of sequence.   */
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       The test of scan sequence on going is done either with scan    */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       sequence disabled or with end of conversion flag set to        */
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /*       of end of sequence.                                            */
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 3116              		.loc 1 1626 0
 3117 0026 FB68     		ldr	r3, [r7, #12]
 3118 0028 1B68     		ldr	r3, [r3]
 3119 002a 9B68     		ldr	r3, [r3, #8]
 3120 002c 03F04053 		and	r3, r3, #805306368
 3121 0030 002B     		cmp	r3, #0
 3122 0032 2BD1     		bne	.L133
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3123              		.loc 1 1627 0 discriminator 1
 3124 0034 FB68     		ldr	r3, [r7, #12]
 3125 0036 9B69     		ldr	r3, [r3, #24]
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3126              		.loc 1 1626 0 discriminator 1
 3127 0038 002B     		cmp	r3, #0
 3128 003a 27D1     		bne	.L133
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3129              		.loc 1 1628 0
 3130 003c FB68     		ldr	r3, [r7, #12]
 3131 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccsc4Dzg.s 			page 84


 3132 0040 DB6A     		ldr	r3, [r3, #44]
 3133 0042 03F47003 		and	r3, r3, #15728640
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 3134              		.loc 1 1627 0
 3135 0046 002B     		cmp	r3, #0
 3136 0048 06D0     		beq	.L134
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 3137              		.loc 1 1629 0
 3138 004a FB68     		ldr	r3, [r7, #12]
 3139 004c 1B68     		ldr	r3, [r3]
 3140 004e 9B68     		ldr	r3, [r3, #8]
 3141 0050 03F48063 		and	r3, r3, #1024
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 3142              		.loc 1 1628 0
 3143 0054 002B     		cmp	r3, #0
 3144 0056 19D1     		bne	.L133
 3145              	.L134:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     {
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Disable ADC end of single conversion interrupt on group regular */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* by overrun IRQ process below.                                      */
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 3146              		.loc 1 1635 0
 3147 0058 FB68     		ldr	r3, [r7, #12]
 3148 005a 1B68     		ldr	r3, [r3]
 3149 005c FA68     		ldr	r2, [r7, #12]
 3150 005e 1268     		ldr	r2, [r2]
 3151 0060 5268     		ldr	r2, [r2, #4]
 3152 0062 22F02002 		bic	r2, r2, #32
 3153 0066 5A60     		str	r2, [r3, #4]
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       /* Set ADC state */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 3154              		.loc 1 1638 0
 3155 0068 FB68     		ldr	r3, [r7, #12]
 3156 006a 1B6C     		ldr	r3, [r3, #64]
 3157 006c 23F48072 		bic	r2, r3, #256
 3158 0070 FB68     		ldr	r3, [r7, #12]
 3159 0072 1A64     		str	r2, [r3, #64]
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 3160              		.loc 1 1640 0
 3161 0074 FB68     		ldr	r3, [r7, #12]
 3162 0076 1B6C     		ldr	r3, [r3, #64]
 3163 0078 03F48053 		and	r3, r3, #4096
 3164 007c 002B     		cmp	r3, #0
 3165 007e 05D1     		bne	.L133
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       {
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3166              		.loc 1 1642 0
 3167 0080 FB68     		ldr	r3, [r7, #12]
 3168 0082 1B6C     		ldr	r3, [r3, #64]
 3169 0084 43F00102 		orr	r2, r3, #1
 3170 0088 FB68     		ldr	r3, [r7, #12]
 3171 008a 1A64     		str	r2, [r3, #64]
 3172              	.L133:
ARM GAS  /tmp/ccsc4Dzg.s 			page 85


1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****       }
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     }
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Conversion complete callback */
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 3173              		.loc 1 1647 0
 3174 008c F868     		ldr	r0, [r7, #12]
 3175 008e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   else
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   {
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     /* Call DMA error callback */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3176              		.loc 1 1654 0
 3177 0092 04E0     		b	.L136
 3178              	.L132:
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   }
 3179              		.loc 1 1652 0
 3180 0094 FB68     		ldr	r3, [r7, #12]
 3181 0096 9B6B     		ldr	r3, [r3, #56]
 3182 0098 DB6C     		ldr	r3, [r3, #76]
 3183 009a 7868     		ldr	r0, [r7, #4]
 3184 009c 9847     		blx	r3
 3185              	.LVL0:
 3186              	.L136:
 3187              		.loc 1 1654 0
 3188 009e 00BF     		nop
 3189 00a0 1037     		adds	r7, r7, #16
 3190              	.LCFI134:
 3191              		.cfi_def_cfa_offset 8
 3192 00a2 BD46     		mov	sp, r7
 3193              	.LCFI135:
 3194              		.cfi_def_cfa_register 13
 3195              		@ sp needed
 3196 00a4 80BD     		pop	{r7, pc}
 3197              		.cfi_endproc
 3198              	.LFE147:
 3200              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 3201              		.align	1
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv4-sp-d16
 3207              	ADC_DMAHalfConvCplt:
 3208              	.LFB148:
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3209              		.loc 1 1663 0
ARM GAS  /tmp/ccsc4Dzg.s 			page 86


 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 16
 3212              		@ frame_needed = 1, uses_anonymous_args = 0
 3213 0000 80B5     		push	{r7, lr}
 3214              	.LCFI136:
 3215              		.cfi_def_cfa_offset 8
 3216              		.cfi_offset 7, -8
 3217              		.cfi_offset 14, -4
 3218 0002 84B0     		sub	sp, sp, #16
 3219              	.LCFI137:
 3220              		.cfi_def_cfa_offset 24
 3221 0004 00AF     		add	r7, sp, #0
 3222              	.LCFI138:
 3223              		.cfi_def_cfa_register 7
 3224 0006 7860     		str	r0, [r7, #4]
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3225              		.loc 1 1664 0
 3226 0008 7B68     		ldr	r3, [r7, #4]
 3227 000a 9B6B     		ldr	r3, [r3, #56]
 3228 000c FB60     		str	r3, [r7, #12]
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Conversion complete callback */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 3229              		.loc 1 1666 0
 3230 000e F868     		ldr	r0, [r7, #12]
 3231 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3232              		.loc 1 1667 0
 3233 0014 00BF     		nop
 3234 0016 1037     		adds	r7, r7, #16
 3235              	.LCFI139:
 3236              		.cfi_def_cfa_offset 8
 3237 0018 BD46     		mov	sp, r7
 3238              	.LCFI140:
 3239              		.cfi_def_cfa_register 13
 3240              		@ sp needed
 3241 001a 80BD     		pop	{r7, pc}
 3242              		.cfi_endproc
 3243              	.LFE148:
 3245              		.section	.text.ADC_DMAError,"ax",%progbits
 3246              		.align	1
 3247              		.syntax unified
 3248              		.thumb
 3249              		.thumb_func
 3250              		.fpu fpv4-sp-d16
 3252              	ADC_DMAError:
 3253              	.LFB149:
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** 
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** /**
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @brief  DMA error callback 
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   *                the configuration information for the specified DMA module.
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   * @retval None
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** {
 3254              		.loc 1 1676 0
 3255              		.cfi_startproc
ARM GAS  /tmp/ccsc4Dzg.s 			page 87


 3256              		@ args = 0, pretend = 0, frame = 16
 3257              		@ frame_needed = 1, uses_anonymous_args = 0
 3258 0000 80B5     		push	{r7, lr}
 3259              	.LCFI141:
 3260              		.cfi_def_cfa_offset 8
 3261              		.cfi_offset 7, -8
 3262              		.cfi_offset 14, -4
 3263 0002 84B0     		sub	sp, sp, #16
 3264              	.LCFI142:
 3265              		.cfi_def_cfa_offset 24
 3266 0004 00AF     		add	r7, sp, #0
 3267              	.LCFI143:
 3268              		.cfi_def_cfa_register 7
 3269 0006 7860     		str	r0, [r7, #4]
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3270              		.loc 1 1677 0
 3271 0008 7B68     		ldr	r3, [r7, #4]
 3272 000a 9B6B     		ldr	r3, [r3, #56]
 3273 000c FB60     		str	r3, [r7, #12]
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->State= HAL_ADC_STATE_ERROR_DMA;
 3274              		.loc 1 1678 0
 3275 000e FB68     		ldr	r3, [r7, #12]
 3276 0010 4022     		movs	r2, #64
 3277 0012 1A64     		str	r2, [r3, #64]
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 3278              		.loc 1 1680 0
 3279 0014 FB68     		ldr	r3, [r7, #12]
 3280 0016 5B6C     		ldr	r3, [r3, #68]
 3281 0018 43F00402 		orr	r2, r3, #4
 3282 001c FB68     		ldr	r3, [r7, #12]
 3283 001e 5A64     		str	r2, [r3, #68]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc); 
 3284              		.loc 1 1681 0
 3285 0020 F868     		ldr	r0, [r7, #12]
 3286 0022 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_adc.c **** }
 3287              		.loc 1 1682 0
 3288 0026 00BF     		nop
 3289 0028 1037     		adds	r7, r7, #16
 3290              	.LCFI144:
 3291              		.cfi_def_cfa_offset 8
 3292 002a BD46     		mov	sp, r7
 3293              	.LCFI145:
 3294              		.cfi_def_cfa_register 13
 3295              		@ sp needed
 3296 002c 80BD     		pop	{r7, pc}
 3297              		.cfi_endproc
 3298              	.LFE149:
 3300              		.text
 3301              	.Letext0:
 3302              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 3303              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 3304              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3305              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3306              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 3307              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  /tmp/ccsc4Dzg.s 			page 88


 3308              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 3309              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 3310              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3311              		.file 11 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 3312              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3313              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 3314              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
ARM GAS  /tmp/ccsc4Dzg.s 			page 89


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_adc.c
     /tmp/ccsc4Dzg.s:18     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccsc4Dzg.s:25     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccsc4Dzg.s:224    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccsc4Dzg.s:2781   .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccsc4Dzg.s:127    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccsc4Dzg.s:134    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccsc4Dzg.s:267    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccsc4Dzg.s:217    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccsc4Dzg.s:260    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccsc4Dzg.s:303    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccsc4Dzg.s:310    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccsc4Dzg.s:508    .text.HAL_ADC_Start:000000000000013c $d
     /tmp/ccsc4Dzg.s:516    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccsc4Dzg.s:523    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccsc4Dzg.s:603    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccsc4Dzg.s:610    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccsc4Dzg.s:782    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccsc4Dzg.s:789    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccsc4Dzg.s:910    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccsc4Dzg.s:917    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccsc4Dzg.s:1124   .text.HAL_ADC_Start_IT:0000000000000150 $d
     /tmp/ccsc4Dzg.s:1132   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccsc4Dzg.s:1139   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccsc4Dzg.s:1228   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccsc4Dzg.s:1235   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccsc4Dzg.s:2026   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccsc4Dzg.s:2112   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccsc4Dzg.s:2155   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccsc4Dzg.s:1608   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccsc4Dzg.s:1615   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccsc4Dzg.s:1852   .text.HAL_ADC_Start_DMA:0000000000000188 $d
     /tmp/ccsc4Dzg.s:3082   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccsc4Dzg.s:3207   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccsc4Dzg.s:3252   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccsc4Dzg.s:1863   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccsc4Dzg.s:1870   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccsc4Dzg.s:1972   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccsc4Dzg.s:1979   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccsc4Dzg.s:2019   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2062   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2069   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccsc4Dzg.s:2105   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2148   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2191   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2198   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccsc4Dzg.s:2537   .text.HAL_ADC_ConfigChannel:0000000000000238 $d
     /tmp/ccsc4Dzg.s:2545   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2552   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccsc4Dzg.s:2683   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2690   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccsc4Dzg.s:2729   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccsc4Dzg.s:2736   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccsc4Dzg.s:2775   .text.ADC_Init:0000000000000000 $t
     /tmp/ccsc4Dzg.s:3070   .text.ADC_Init:00000000000001ec $d
     /tmp/ccsc4Dzg.s:3076   .text.ADC_DMAConvCplt:0000000000000000 $t
ARM GAS  /tmp/ccsc4Dzg.s 			page 90


     /tmp/ccsc4Dzg.s:3201   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccsc4Dzg.s:3246   .text.ADC_DMAError:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_InjectedConvCpltCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
