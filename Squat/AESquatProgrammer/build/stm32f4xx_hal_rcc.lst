ARM GAS  /tmp/ccMmGI2M.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB124:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  /tmp/ccMmGI2M.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *      without specific prior written permission.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/ccMmGI2M.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMmGI2M.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
ARM GAS  /tmp/ccMmGI2M.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  28              		.loc 1 219 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  40              		.loc 1 220 0
  41 0004 0023     		movs	r3, #0
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  42              		.loc 1 221 0
  43 0006 1846     		mov	r0, r3
  44 0008 BD46     		mov	sp, r7
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 000a 5DF8047B 		ldr	r7, [sp], #4
  49              	.LCFI3:
  50              		.cfi_restore 7
  51              		.cfi_def_cfa_offset 0
  52 000e 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE124:
  56              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  57              		.align	1
  58              		.weak	HAL_RCC_OscConfig
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	HAL_RCC_OscConfig:
  65              	.LFB125:
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccMmGI2M.s 			page 6


 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  66              		.loc 1 238 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 24
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 86B0     		sub	sp, sp, #24
  76              	.LCFI5:
  77              		.cfi_def_cfa_offset 32
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI6:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  82              		.loc 1 242 0
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 002B     		cmp	r3, #0
  85 000c 01D1     		bne	.L4
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  86              		.loc 1 244 0
  87 000e 0123     		movs	r3, #1
  88 0010 2DE2     		b	.L5
  89              	.L4:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  90              		.loc 1 250 0
  91 0012 7B68     		ldr	r3, [r7, #4]
  92 0014 1B68     		ldr	r3, [r3]
  93 0016 03F00103 		and	r3, r3, #1
  94 001a 002B     		cmp	r3, #0
  95 001c 75D0     		beq	.L6
ARM GAS  /tmp/ccMmGI2M.s 			page 7


 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  96              		.loc 1 255 0
  97 001e A34B     		ldr	r3, .L57
  98 0020 9B68     		ldr	r3, [r3, #8]
  99 0022 03F00C03 		and	r3, r3, #12
 100 0026 042B     		cmp	r3, #4
 101 0028 0CD0     		beq	.L7
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 102              		.loc 1 256 0 discriminator 1
 103 002a A04B     		ldr	r3, .L57
 104 002c 9B68     		ldr	r3, [r3, #8]
 105 002e 03F00C03 		and	r3, r3, #12
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 106              		.loc 1 255 0 discriminator 1
 107 0032 082B     		cmp	r3, #8
 108 0034 12D1     		bne	.L8
 109              		.loc 1 256 0
 110 0036 9D4B     		ldr	r3, .L57
 111 0038 5B68     		ldr	r3, [r3, #4]
 112 003a 03F48003 		and	r3, r3, #4194304
 113 003e B3F5800F 		cmp	r3, #4194304
 114 0042 0BD1     		bne	.L8
 115              	.L7:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116              		.loc 1 258 0
 117 0044 994B     		ldr	r3, .L57
 118 0046 1B68     		ldr	r3, [r3]
 119 0048 03F40033 		and	r3, r3, #131072
 120 004c 002B     		cmp	r3, #0
 121 004e 5BD0     		beq	.L56
 122              		.loc 1 258 0 is_stmt 0 discriminator 1
 123 0050 7B68     		ldr	r3, [r7, #4]
 124 0052 5B68     		ldr	r3, [r3, #4]
 125 0054 002B     		cmp	r3, #0
 126 0056 57D1     		bne	.L56
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 127              		.loc 1 260 0 is_stmt 1
 128 0058 0123     		movs	r3, #1
 129 005a 08E2     		b	.L5
 130              	.L8:
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 131              		.loc 1 266 0
 132 005c 7B68     		ldr	r3, [r7, #4]
 133 005e 5B68     		ldr	r3, [r3, #4]
 134 0060 B3F5803F 		cmp	r3, #65536
 135 0064 06D1     		bne	.L10
ARM GAS  /tmp/ccMmGI2M.s 			page 8


 136              		.loc 1 266 0 is_stmt 0 discriminator 1
 137 0066 914A     		ldr	r2, .L57
 138 0068 904B     		ldr	r3, .L57
 139 006a 1B68     		ldr	r3, [r3]
 140 006c 43F48033 		orr	r3, r3, #65536
 141 0070 1360     		str	r3, [r2]
 142 0072 1DE0     		b	.L11
 143              	.L10:
 144              		.loc 1 266 0 discriminator 2
 145 0074 7B68     		ldr	r3, [r7, #4]
 146 0076 5B68     		ldr	r3, [r3, #4]
 147 0078 B3F5A02F 		cmp	r3, #327680
 148 007c 0CD1     		bne	.L12
 149              		.loc 1 266 0 discriminator 3
 150 007e 8B4A     		ldr	r2, .L57
 151 0080 8A4B     		ldr	r3, .L57
 152 0082 1B68     		ldr	r3, [r3]
 153 0084 43F48023 		orr	r3, r3, #262144
 154 0088 1360     		str	r3, [r2]
 155 008a 884A     		ldr	r2, .L57
 156 008c 874B     		ldr	r3, .L57
 157 008e 1B68     		ldr	r3, [r3]
 158 0090 43F48033 		orr	r3, r3, #65536
 159 0094 1360     		str	r3, [r2]
 160 0096 0BE0     		b	.L11
 161              	.L12:
 162              		.loc 1 266 0 discriminator 4
 163 0098 844A     		ldr	r2, .L57
 164 009a 844B     		ldr	r3, .L57
 165 009c 1B68     		ldr	r3, [r3]
 166 009e 23F48033 		bic	r3, r3, #65536
 167 00a2 1360     		str	r3, [r2]
 168 00a4 814A     		ldr	r2, .L57
 169 00a6 814B     		ldr	r3, .L57
 170 00a8 1B68     		ldr	r3, [r3]
 171 00aa 23F48023 		bic	r3, r3, #262144
 172 00ae 1360     		str	r3, [r2]
 173              	.L11:
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 174              		.loc 1 269 0 is_stmt 1
 175 00b0 7B68     		ldr	r3, [r7, #4]
 176 00b2 5B68     		ldr	r3, [r3, #4]
 177 00b4 002B     		cmp	r3, #0
 178 00b6 13D0     		beq	.L13
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 179              		.loc 1 272 0
 180 00b8 FFF7FEFF 		bl	HAL_GetTick
 181 00bc 3861     		str	r0, [r7, #16]
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 182              		.loc 1 275 0
 183 00be 08E0     		b	.L14
ARM GAS  /tmp/ccMmGI2M.s 			page 9


 184              	.L15:
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 185              		.loc 1 277 0
 186 00c0 FFF7FEFF 		bl	HAL_GetTick
 187 00c4 0246     		mov	r2, r0
 188 00c6 3B69     		ldr	r3, [r7, #16]
 189 00c8 D31A     		subs	r3, r2, r3
 190 00ca 642B     		cmp	r3, #100
 191 00cc 01D9     		bls	.L14
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 192              		.loc 1 279 0
 193 00ce 0323     		movs	r3, #3
 194 00d0 CDE1     		b	.L5
 195              	.L14:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 196              		.loc 1 275 0
 197 00d2 764B     		ldr	r3, .L57
 198 00d4 1B68     		ldr	r3, [r3]
 199 00d6 03F40033 		and	r3, r3, #131072
 200 00da 002B     		cmp	r3, #0
 201 00dc F0D0     		beq	.L15
 202 00de 14E0     		b	.L6
 203              	.L13:
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 204              		.loc 1 286 0
 205 00e0 FFF7FEFF 		bl	HAL_GetTick
 206 00e4 3861     		str	r0, [r7, #16]
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 207              		.loc 1 289 0
 208 00e6 08E0     		b	.L16
 209              	.L17:
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 210              		.loc 1 291 0
 211 00e8 FFF7FEFF 		bl	HAL_GetTick
 212 00ec 0246     		mov	r2, r0
 213 00ee 3B69     		ldr	r3, [r7, #16]
 214 00f0 D31A     		subs	r3, r2, r3
 215 00f2 642B     		cmp	r3, #100
 216 00f4 01D9     		bls	.L16
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 217              		.loc 1 293 0
 218 00f6 0323     		movs	r3, #3
 219 00f8 B9E1     		b	.L5
 220              	.L16:
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccMmGI2M.s 			page 10


 221              		.loc 1 289 0
 222 00fa 6C4B     		ldr	r3, .L57
 223 00fc 1B68     		ldr	r3, [r3]
 224 00fe 03F40033 		and	r3, r3, #131072
 225 0102 002B     		cmp	r3, #0
 226 0104 F0D1     		bne	.L17
 227 0106 00E0     		b	.L6
 228              	.L56:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 229              		.loc 1 258 0
 230 0108 00BF     		nop
 231              	.L6:
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 232              		.loc 1 300 0
 233 010a 7B68     		ldr	r3, [r7, #4]
 234 010c 1B68     		ldr	r3, [r3]
 235 010e 03F00203 		and	r3, r3, #2
 236 0112 002B     		cmp	r3, #0
 237 0114 63D0     		beq	.L18
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 238              		.loc 1 307 0
 239 0116 654B     		ldr	r3, .L57
 240 0118 9B68     		ldr	r3, [r3, #8]
 241 011a 03F00C03 		and	r3, r3, #12
 242 011e 002B     		cmp	r3, #0
 243 0120 0BD0     		beq	.L19
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 244              		.loc 1 308 0 discriminator 1
 245 0122 624B     		ldr	r3, .L57
 246 0124 9B68     		ldr	r3, [r3, #8]
 247 0126 03F00C03 		and	r3, r3, #12
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 248              		.loc 1 307 0 discriminator 1
 249 012a 082B     		cmp	r3, #8
 250 012c 1CD1     		bne	.L20
 251              		.loc 1 308 0
 252 012e 5F4B     		ldr	r3, .L57
 253 0130 5B68     		ldr	r3, [r3, #4]
 254 0132 03F48003 		and	r3, r3, #4194304
 255 0136 002B     		cmp	r3, #0
 256 0138 16D1     		bne	.L20
 257              	.L19:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
ARM GAS  /tmp/ccMmGI2M.s 			page 11


 258              		.loc 1 311 0
 259 013a 5C4B     		ldr	r3, .L57
 260 013c 1B68     		ldr	r3, [r3]
 261 013e 03F00203 		and	r3, r3, #2
 262 0142 002B     		cmp	r3, #0
 263 0144 05D0     		beq	.L21
 264              		.loc 1 311 0 is_stmt 0 discriminator 1
 265 0146 7B68     		ldr	r3, [r7, #4]
 266 0148 DB68     		ldr	r3, [r3, #12]
 267 014a 012B     		cmp	r3, #1
 268 014c 01D0     		beq	.L21
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 269              		.loc 1 313 0 is_stmt 1
 270 014e 0123     		movs	r3, #1
 271 0150 8DE1     		b	.L5
 272              	.L21:
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 273              		.loc 1 319 0
 274 0152 5649     		ldr	r1, .L57
 275 0154 554B     		ldr	r3, .L57
 276 0156 1B68     		ldr	r3, [r3]
 277 0158 23F0F802 		bic	r2, r3, #248
 278 015c 7B68     		ldr	r3, [r7, #4]
 279 015e 1B69     		ldr	r3, [r3, #16]
 280 0160 DB00     		lsls	r3, r3, #3
 281 0162 1343     		orrs	r3, r3, r2
 282 0164 0B60     		str	r3, [r1]
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 283              		.loc 1 311 0
 284 0166 3AE0     		b	.L18
 285              	.L20:
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 286              		.loc 1 325 0
 287 0168 7B68     		ldr	r3, [r7, #4]
 288 016a DB68     		ldr	r3, [r3, #12]
 289 016c 002B     		cmp	r3, #0
 290 016e 20D0     		beq	.L22
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 291              		.loc 1 328 0
 292 0170 4F4B     		ldr	r3, .L57+4
 293 0172 0122     		movs	r2, #1
 294 0174 1A60     		str	r2, [r3]
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
ARM GAS  /tmp/ccMmGI2M.s 			page 12


 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 295              		.loc 1 331 0
 296 0176 FFF7FEFF 		bl	HAL_GetTick
 297 017a 3861     		str	r0, [r7, #16]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 298              		.loc 1 334 0
 299 017c 08E0     		b	.L23
 300              	.L24:
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 301              		.loc 1 336 0
 302 017e FFF7FEFF 		bl	HAL_GetTick
 303 0182 0246     		mov	r2, r0
 304 0184 3B69     		ldr	r3, [r7, #16]
 305 0186 D31A     		subs	r3, r2, r3
 306 0188 022B     		cmp	r3, #2
 307 018a 01D9     		bls	.L23
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 308              		.loc 1 338 0
 309 018c 0323     		movs	r3, #3
 310 018e 6EE1     		b	.L5
 311              	.L23:
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 312              		.loc 1 334 0
 313 0190 464B     		ldr	r3, .L57
 314 0192 1B68     		ldr	r3, [r3]
 315 0194 03F00203 		and	r3, r3, #2
 316 0198 002B     		cmp	r3, #0
 317 019a F0D0     		beq	.L24
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 318              		.loc 1 343 0
 319 019c 4349     		ldr	r1, .L57
 320 019e 434B     		ldr	r3, .L57
 321 01a0 1B68     		ldr	r3, [r3]
 322 01a2 23F0F802 		bic	r2, r3, #248
 323 01a6 7B68     		ldr	r3, [r7, #4]
 324 01a8 1B69     		ldr	r3, [r3, #16]
 325 01aa DB00     		lsls	r3, r3, #3
 326 01ac 1343     		orrs	r3, r3, r2
 327 01ae 0B60     		str	r3, [r1]
 328 01b0 15E0     		b	.L18
 329              	.L22:
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 330              		.loc 1 348 0
 331 01b2 3F4B     		ldr	r3, .L57+4
 332 01b4 0022     		movs	r2, #0
ARM GAS  /tmp/ccMmGI2M.s 			page 13


 333 01b6 1A60     		str	r2, [r3]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 334              		.loc 1 351 0
 335 01b8 FFF7FEFF 		bl	HAL_GetTick
 336 01bc 3861     		str	r0, [r7, #16]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 337              		.loc 1 354 0
 338 01be 08E0     		b	.L25
 339              	.L26:
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 340              		.loc 1 356 0
 341 01c0 FFF7FEFF 		bl	HAL_GetTick
 342 01c4 0246     		mov	r2, r0
 343 01c6 3B69     		ldr	r3, [r7, #16]
 344 01c8 D31A     		subs	r3, r2, r3
 345 01ca 022B     		cmp	r3, #2
 346 01cc 01D9     		bls	.L25
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 347              		.loc 1 358 0
 348 01ce 0323     		movs	r3, #3
 349 01d0 4DE1     		b	.L5
 350              	.L25:
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 351              		.loc 1 354 0
 352 01d2 364B     		ldr	r3, .L57
 353 01d4 1B68     		ldr	r3, [r3]
 354 01d6 03F00203 		and	r3, r3, #2
 355 01da 002B     		cmp	r3, #0
 356 01dc F0D1     		bne	.L26
 357              	.L18:
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 358              		.loc 1 365 0
 359 01de 7B68     		ldr	r3, [r7, #4]
 360 01e0 1B68     		ldr	r3, [r3]
 361 01e2 03F00803 		and	r3, r3, #8
 362 01e6 002B     		cmp	r3, #0
 363 01e8 30D0     		beq	.L27
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 364              		.loc 1 371 0
 365 01ea 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMmGI2M.s 			page 14


 366 01ec 5B69     		ldr	r3, [r3, #20]
 367 01ee 002B     		cmp	r3, #0
 368 01f0 16D0     		beq	.L28
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 369              		.loc 1 374 0
 370 01f2 304B     		ldr	r3, .L57+8
 371 01f4 0122     		movs	r2, #1
 372 01f6 1A60     		str	r2, [r3]
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 373              		.loc 1 377 0
 374 01f8 FFF7FEFF 		bl	HAL_GetTick
 375 01fc 3861     		str	r0, [r7, #16]
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 376              		.loc 1 380 0
 377 01fe 08E0     		b	.L29
 378              	.L30:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 379              		.loc 1 382 0
 380 0200 FFF7FEFF 		bl	HAL_GetTick
 381 0204 0246     		mov	r2, r0
 382 0206 3B69     		ldr	r3, [r7, #16]
 383 0208 D31A     		subs	r3, r2, r3
 384 020a 022B     		cmp	r3, #2
 385 020c 01D9     		bls	.L29
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 386              		.loc 1 384 0
 387 020e 0323     		movs	r3, #3
 388 0210 2DE1     		b	.L5
 389              	.L29:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 390              		.loc 1 380 0
 391 0212 264B     		ldr	r3, .L57
 392 0214 5B6F     		ldr	r3, [r3, #116]
 393 0216 03F00203 		and	r3, r3, #2
 394 021a 002B     		cmp	r3, #0
 395 021c F0D0     		beq	.L30
 396 021e 15E0     		b	.L27
 397              	.L28:
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 398              		.loc 1 391 0
 399 0220 244B     		ldr	r3, .L57+8
 400 0222 0022     		movs	r2, #0
 401 0224 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccMmGI2M.s 			page 15


 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 402              		.loc 1 394 0
 403 0226 FFF7FEFF 		bl	HAL_GetTick
 404 022a 3861     		str	r0, [r7, #16]
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 405              		.loc 1 397 0
 406 022c 08E0     		b	.L31
 407              	.L32:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 408              		.loc 1 399 0
 409 022e FFF7FEFF 		bl	HAL_GetTick
 410 0232 0246     		mov	r2, r0
 411 0234 3B69     		ldr	r3, [r7, #16]
 412 0236 D31A     		subs	r3, r2, r3
 413 0238 022B     		cmp	r3, #2
 414 023a 01D9     		bls	.L31
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 415              		.loc 1 401 0
 416 023c 0323     		movs	r3, #3
 417 023e 16E1     		b	.L5
 418              	.L31:
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 419              		.loc 1 397 0
 420 0240 1A4B     		ldr	r3, .L57
 421 0242 5B6F     		ldr	r3, [r3, #116]
 422 0244 03F00203 		and	r3, r3, #2
 423 0248 002B     		cmp	r3, #0
 424 024a F0D1     		bne	.L32
 425              	.L27:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 426              		.loc 1 407 0
 427 024c 7B68     		ldr	r3, [r7, #4]
 428 024e 1B68     		ldr	r3, [r3]
 429 0250 03F00403 		and	r3, r3, #4
 430 0254 002B     		cmp	r3, #0
 431 0256 00F0A080 		beq	.L33
 432              	.LBB2:
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 433              		.loc 1 409 0
 434 025a 0023     		movs	r3, #0
 435 025c FB75     		strb	r3, [r7, #23]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMmGI2M.s 			page 16


 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 436              		.loc 1 416 0
 437 025e 134B     		ldr	r3, .L57
 438 0260 1B6C     		ldr	r3, [r3, #64]
 439 0262 03F08053 		and	r3, r3, #268435456
 440 0266 002B     		cmp	r3, #0
 441 0268 0FD1     		bne	.L34
 442              	.LBB3:
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 443              		.loc 1 418 0
 444 026a 0023     		movs	r3, #0
 445 026c FB60     		str	r3, [r7, #12]
 446 026e 0F4A     		ldr	r2, .L57
 447 0270 0E4B     		ldr	r3, .L57
 448 0272 1B6C     		ldr	r3, [r3, #64]
 449 0274 43F08053 		orr	r3, r3, #268435456
 450 0278 1364     		str	r3, [r2, #64]
 451 027a 0C4B     		ldr	r3, .L57
 452 027c 1B6C     		ldr	r3, [r3, #64]
 453 027e 03F08053 		and	r3, r3, #268435456
 454 0282 FB60     		str	r3, [r7, #12]
 455 0284 FB68     		ldr	r3, [r7, #12]
 456              	.LBE3:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 457              		.loc 1 419 0
 458 0286 0123     		movs	r3, #1
 459 0288 FB75     		strb	r3, [r7, #23]
 460              	.L34:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 461              		.loc 1 422 0
 462 028a 0B4B     		ldr	r3, .L57+12
 463 028c 1B68     		ldr	r3, [r3]
 464 028e 03F48073 		and	r3, r3, #256
 465 0292 002B     		cmp	r3, #0
 466 0294 21D1     		bne	.L35
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 467              		.loc 1 425 0
 468 0296 084A     		ldr	r2, .L57+12
 469 0298 074B     		ldr	r3, .L57+12
 470 029a 1B68     		ldr	r3, [r3]
 471 029c 43F48073 		orr	r3, r3, #256
 472 02a0 1360     		str	r3, [r2]
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 473              		.loc 1 428 0
 474 02a2 FFF7FEFF 		bl	HAL_GetTick
 475 02a6 3861     		str	r0, [r7, #16]
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
ARM GAS  /tmp/ccMmGI2M.s 			page 17


 476              		.loc 1 430 0
 477 02a8 11E0     		b	.L36
 478              	.L58:
 479 02aa 00BF     		.align	2
 480              	.L57:
 481 02ac 00380240 		.word	1073887232
 482 02b0 00004742 		.word	1111949312
 483 02b4 800E4742 		.word	1111953024
 484 02b8 00700040 		.word	1073770496
 485              	.L37:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 486              		.loc 1 432 0
 487 02bc FFF7FEFF 		bl	HAL_GetTick
 488 02c0 0246     		mov	r2, r0
 489 02c2 3B69     		ldr	r3, [r7, #16]
 490 02c4 D31A     		subs	r3, r2, r3
 491 02c6 022B     		cmp	r3, #2
 492 02c8 01D9     		bls	.L36
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 493              		.loc 1 434 0
 494 02ca 0323     		movs	r3, #3
 495 02cc CFE0     		b	.L5
 496              	.L36:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 497              		.loc 1 430 0
 498 02ce 6A4B     		ldr	r3, .L59
 499 02d0 1B68     		ldr	r3, [r3]
 500 02d2 03F48073 		and	r3, r3, #256
 501 02d6 002B     		cmp	r3, #0
 502 02d8 F0D0     		beq	.L37
 503              	.L35:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 504              		.loc 1 440 0
 505 02da 7B68     		ldr	r3, [r7, #4]
 506 02dc 9B68     		ldr	r3, [r3, #8]
 507 02de 012B     		cmp	r3, #1
 508 02e0 06D1     		bne	.L38
 509              		.loc 1 440 0 is_stmt 0 discriminator 1
 510 02e2 664A     		ldr	r2, .L59+4
 511 02e4 654B     		ldr	r3, .L59+4
 512 02e6 1B6F     		ldr	r3, [r3, #112]
 513 02e8 43F00103 		orr	r3, r3, #1
 514 02ec 1367     		str	r3, [r2, #112]
 515 02ee 1CE0     		b	.L39
 516              	.L38:
 517              		.loc 1 440 0 discriminator 2
 518 02f0 7B68     		ldr	r3, [r7, #4]
 519 02f2 9B68     		ldr	r3, [r3, #8]
 520 02f4 052B     		cmp	r3, #5
 521 02f6 0CD1     		bne	.L40
ARM GAS  /tmp/ccMmGI2M.s 			page 18


 522              		.loc 1 440 0 discriminator 3
 523 02f8 604A     		ldr	r2, .L59+4
 524 02fa 604B     		ldr	r3, .L59+4
 525 02fc 1B6F     		ldr	r3, [r3, #112]
 526 02fe 43F00403 		orr	r3, r3, #4
 527 0302 1367     		str	r3, [r2, #112]
 528 0304 5D4A     		ldr	r2, .L59+4
 529 0306 5D4B     		ldr	r3, .L59+4
 530 0308 1B6F     		ldr	r3, [r3, #112]
 531 030a 43F00103 		orr	r3, r3, #1
 532 030e 1367     		str	r3, [r2, #112]
 533 0310 0BE0     		b	.L39
 534              	.L40:
 535              		.loc 1 440 0 discriminator 4
 536 0312 5A4A     		ldr	r2, .L59+4
 537 0314 594B     		ldr	r3, .L59+4
 538 0316 1B6F     		ldr	r3, [r3, #112]
 539 0318 23F00103 		bic	r3, r3, #1
 540 031c 1367     		str	r3, [r2, #112]
 541 031e 574A     		ldr	r2, .L59+4
 542 0320 564B     		ldr	r3, .L59+4
 543 0322 1B6F     		ldr	r3, [r3, #112]
 544 0324 23F00403 		bic	r3, r3, #4
 545 0328 1367     		str	r3, [r2, #112]
 546              	.L39:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 547              		.loc 1 442 0 is_stmt 1
 548 032a 7B68     		ldr	r3, [r7, #4]
 549 032c 9B68     		ldr	r3, [r3, #8]
 550 032e 002B     		cmp	r3, #0
 551 0330 15D0     		beq	.L41
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 552              		.loc 1 445 0
 553 0332 FFF7FEFF 		bl	HAL_GetTick
 554 0336 3861     		str	r0, [r7, #16]
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 555              		.loc 1 448 0
 556 0338 0AE0     		b	.L42
 557              	.L43:
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 558              		.loc 1 450 0
 559 033a FFF7FEFF 		bl	HAL_GetTick
 560 033e 0246     		mov	r2, r0
 561 0340 3B69     		ldr	r3, [r7, #16]
 562 0342 D31A     		subs	r3, r2, r3
 563 0344 41F28832 		movw	r2, #5000
 564 0348 9342     		cmp	r3, r2
 565 034a 01D9     		bls	.L42
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 566              		.loc 1 452 0
ARM GAS  /tmp/ccMmGI2M.s 			page 19


 567 034c 0323     		movs	r3, #3
 568 034e 8EE0     		b	.L5
 569              	.L42:
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 570              		.loc 1 448 0
 571 0350 4A4B     		ldr	r3, .L59+4
 572 0352 1B6F     		ldr	r3, [r3, #112]
 573 0354 03F00203 		and	r3, r3, #2
 574 0358 002B     		cmp	r3, #0
 575 035a EED0     		beq	.L43
 576 035c 14E0     		b	.L44
 577              	.L41:
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 578              		.loc 1 459 0
 579 035e FFF7FEFF 		bl	HAL_GetTick
 580 0362 3861     		str	r0, [r7, #16]
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 581              		.loc 1 462 0
 582 0364 0AE0     		b	.L45
 583              	.L46:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 584              		.loc 1 464 0
 585 0366 FFF7FEFF 		bl	HAL_GetTick
 586 036a 0246     		mov	r2, r0
 587 036c 3B69     		ldr	r3, [r7, #16]
 588 036e D31A     		subs	r3, r2, r3
 589 0370 41F28832 		movw	r2, #5000
 590 0374 9342     		cmp	r3, r2
 591 0376 01D9     		bls	.L45
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 592              		.loc 1 466 0
 593 0378 0323     		movs	r3, #3
 594 037a 78E0     		b	.L5
 595              	.L45:
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 596              		.loc 1 462 0
 597 037c 3F4B     		ldr	r3, .L59+4
 598 037e 1B6F     		ldr	r3, [r3, #112]
 599 0380 03F00203 		and	r3, r3, #2
 600 0384 002B     		cmp	r3, #0
 601 0386 EED1     		bne	.L46
 602              	.L44:
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
ARM GAS  /tmp/ccMmGI2M.s 			page 20


 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 603              		.loc 1 472 0
 604 0388 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 605 038a 012B     		cmp	r3, #1
 606 038c 05D1     		bne	.L33
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 607              		.loc 1 474 0
 608 038e 3B4A     		ldr	r2, .L59+4
 609 0390 3A4B     		ldr	r3, .L59+4
 610 0392 1B6C     		ldr	r3, [r3, #64]
 611 0394 23F08053 		bic	r3, r3, #268435456
 612 0398 1364     		str	r3, [r2, #64]
 613              	.L33:
 614              	.LBE2:
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 615              		.loc 1 480 0
 616 039a 7B68     		ldr	r3, [r7, #4]
 617 039c 9B69     		ldr	r3, [r3, #24]
 618 039e 002B     		cmp	r3, #0
 619 03a0 64D0     		beq	.L47
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 620              		.loc 1 483 0
 621 03a2 364B     		ldr	r3, .L59+4
 622 03a4 9B68     		ldr	r3, [r3, #8]
 623 03a6 03F00C03 		and	r3, r3, #12
 624 03aa 082B     		cmp	r3, #8
 625 03ac 5CD0     		beq	.L48
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 626              		.loc 1 485 0
 627 03ae 7B68     		ldr	r3, [r7, #4]
 628 03b0 9B69     		ldr	r3, [r3, #24]
 629 03b2 022B     		cmp	r3, #2
 630 03b4 41D1     		bne	.L49
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 631              		.loc 1 495 0
 632 03b6 324B     		ldr	r3, .L59+8
 633 03b8 0022     		movs	r2, #0
 634 03ba 1A60     		str	r2, [r3]
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMmGI2M.s 			page 21


 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 635              		.loc 1 498 0
 636 03bc FFF7FEFF 		bl	HAL_GetTick
 637 03c0 3861     		str	r0, [r7, #16]
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 638              		.loc 1 501 0
 639 03c2 08E0     		b	.L50
 640              	.L51:
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 641              		.loc 1 503 0
 642 03c4 FFF7FEFF 		bl	HAL_GetTick
 643 03c8 0246     		mov	r2, r0
 644 03ca 3B69     		ldr	r3, [r7, #16]
 645 03cc D31A     		subs	r3, r2, r3
 646 03ce 022B     		cmp	r3, #2
 647 03d0 01D9     		bls	.L50
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 648              		.loc 1 505 0
 649 03d2 0323     		movs	r3, #3
 650 03d4 4BE0     		b	.L5
 651              	.L50:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 652              		.loc 1 501 0
 653 03d6 294B     		ldr	r3, .L59+4
 654 03d8 1B68     		ldr	r3, [r3]
 655 03da 03F00073 		and	r3, r3, #33554432
 656 03de 002B     		cmp	r3, #0
 657 03e0 F0D1     		bne	.L51
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 658              		.loc 1 510 0
 659 03e2 2649     		ldr	r1, .L59+4
 660 03e4 7B68     		ldr	r3, [r7, #4]
 661 03e6 DA69     		ldr	r2, [r3, #28]
 662 03e8 7B68     		ldr	r3, [r7, #4]
 663 03ea 1B6A     		ldr	r3, [r3, #32]
 664 03ec 1A43     		orrs	r2, r2, r3
 665 03ee 7B68     		ldr	r3, [r7, #4]
 666 03f0 5B6A     		ldr	r3, [r3, #36]
 667 03f2 9B01     		lsls	r3, r3, #6
 668 03f4 1A43     		orrs	r2, r2, r3
 669 03f6 7B68     		ldr	r3, [r7, #4]
 670 03f8 9B6A     		ldr	r3, [r3, #40]
 671 03fa 5B08     		lsrs	r3, r3, #1
 672 03fc 013B     		subs	r3, r3, #1
 673 03fe 1B04     		lsls	r3, r3, #16
 674 0400 1A43     		orrs	r2, r2, r3
 675 0402 7B68     		ldr	r3, [r7, #4]
 676 0404 DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccMmGI2M.s 			page 22


 677 0406 1B06     		lsls	r3, r3, #24
 678 0408 1343     		orrs	r3, r3, r2
 679 040a 4B60     		str	r3, [r1, #4]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 680              		.loc 1 516 0
 681 040c 1C4B     		ldr	r3, .L59+8
 682 040e 0122     		movs	r2, #1
 683 0410 1A60     		str	r2, [r3]
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 684              		.loc 1 519 0
 685 0412 FFF7FEFF 		bl	HAL_GetTick
 686 0416 3861     		str	r0, [r7, #16]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 687              		.loc 1 522 0
 688 0418 08E0     		b	.L52
 689              	.L53:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 690              		.loc 1 524 0
 691 041a FFF7FEFF 		bl	HAL_GetTick
 692 041e 0246     		mov	r2, r0
 693 0420 3B69     		ldr	r3, [r7, #16]
 694 0422 D31A     		subs	r3, r2, r3
 695 0424 022B     		cmp	r3, #2
 696 0426 01D9     		bls	.L52
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 697              		.loc 1 526 0
 698 0428 0323     		movs	r3, #3
 699 042a 20E0     		b	.L5
 700              	.L52:
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 701              		.loc 1 522 0
 702 042c 134B     		ldr	r3, .L59+4
 703 042e 1B68     		ldr	r3, [r3]
 704 0430 03F00073 		and	r3, r3, #33554432
 705 0434 002B     		cmp	r3, #0
 706 0436 F0D0     		beq	.L53
 707 0438 18E0     		b	.L47
 708              	.L49:
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 709              		.loc 1 533 0
ARM GAS  /tmp/ccMmGI2M.s 			page 23


 710 043a 114B     		ldr	r3, .L59+8
 711 043c 0022     		movs	r2, #0
 712 043e 1A60     		str	r2, [r3]
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 713              		.loc 1 536 0
 714 0440 FFF7FEFF 		bl	HAL_GetTick
 715 0444 3861     		str	r0, [r7, #16]
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 716              		.loc 1 539 0
 717 0446 08E0     		b	.L54
 718              	.L55:
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 719              		.loc 1 541 0
 720 0448 FFF7FEFF 		bl	HAL_GetTick
 721 044c 0246     		mov	r2, r0
 722 044e 3B69     		ldr	r3, [r7, #16]
 723 0450 D31A     		subs	r3, r2, r3
 724 0452 022B     		cmp	r3, #2
 725 0454 01D9     		bls	.L54
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 726              		.loc 1 543 0
 727 0456 0323     		movs	r3, #3
 728 0458 09E0     		b	.L5
 729              	.L54:
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 730              		.loc 1 539 0
 731 045a 084B     		ldr	r3, .L59+4
 732 045c 1B68     		ldr	r3, [r3]
 733 045e 03F00073 		and	r3, r3, #33554432
 734 0462 002B     		cmp	r3, #0
 735 0464 F0D1     		bne	.L55
 736 0466 01E0     		b	.L47
 737              	.L48:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 738              		.loc 1 550 0
 739 0468 0123     		movs	r3, #1
 740 046a 00E0     		b	.L5
 741              	.L47:
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 742              		.loc 1 553 0
 743 046c 0023     		movs	r3, #0
 744              	.L5:
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
ARM GAS  /tmp/ccMmGI2M.s 			page 24


 745              		.loc 1 554 0
 746 046e 1846     		mov	r0, r3
 747 0470 1837     		adds	r7, r7, #24
 748              	.LCFI7:
 749              		.cfi_def_cfa_offset 8
 750 0472 BD46     		mov	sp, r7
 751              	.LCFI8:
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 0474 80BD     		pop	{r7, pc}
 755              	.L60:
 756 0476 00BF     		.align	2
 757              	.L59:
 758 0478 00700040 		.word	1073770496
 759 047c 00380240 		.word	1073887232
 760 0480 60004742 		.word	1111949408
 761              		.cfi_endproc
 762              	.LFE125:
 764              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_RCC_ClockConfig
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 770              		.fpu fpv4-sp-d16
 772              	HAL_RCC_ClockConfig:
 773              	.LFB126:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 774              		.loc 1 582 0
 775              		.cfi_startproc
ARM GAS  /tmp/ccMmGI2M.s 			page 25


 776              		@ args = 0, pretend = 0, frame = 16
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              	.LCFI9:
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 84B0     		sub	sp, sp, #16
 784              	.LCFI10:
 785              		.cfi_def_cfa_offset 24
 786 0004 00AF     		add	r7, sp, #0
 787              	.LCFI11:
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 790 0008 3960     		str	r1, [r7]
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 791              		.loc 1 586 0
 792 000a 7B68     		ldr	r3, [r7, #4]
 793 000c 002B     		cmp	r3, #0
 794 000e 01D1     		bne	.L62
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 795              		.loc 1 588 0
 796 0010 0123     		movs	r3, #1
 797 0012 CAE0     		b	.L63
 798              	.L62:
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 799              		.loc 1 600 0
 800 0014 674B     		ldr	r3, .L79
 801 0016 1B68     		ldr	r3, [r3]
 802 0018 03F00F02 		and	r2, r3, #15
 803 001c 3B68     		ldr	r3, [r7]
 804 001e 9A42     		cmp	r2, r3
 805 0020 0CD2     		bcs	.L64
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 806              		.loc 1 603 0
 807 0022 644B     		ldr	r3, .L79
 808 0024 3A68     		ldr	r2, [r7]
 809 0026 D2B2     		uxtb	r2, r2
 810 0028 1A70     		strb	r2, [r3]
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMmGI2M.s 			page 26


 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 811              		.loc 1 607 0
 812 002a 624B     		ldr	r3, .L79
 813 002c 1B68     		ldr	r3, [r3]
 814 002e 03F00F02 		and	r2, r3, #15
 815 0032 3B68     		ldr	r3, [r7]
 816 0034 9A42     		cmp	r2, r3
 817 0036 01D0     		beq	.L64
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 818              		.loc 1 609 0
 819 0038 0123     		movs	r3, #1
 820 003a B6E0     		b	.L63
 821              	.L64:
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 822              		.loc 1 614 0
 823 003c 7B68     		ldr	r3, [r7, #4]
 824 003e 1B68     		ldr	r3, [r3]
 825 0040 03F00203 		and	r3, r3, #2
 826 0044 002B     		cmp	r3, #0
 827 0046 20D0     		beq	.L65
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 828              		.loc 1 618 0
 829 0048 7B68     		ldr	r3, [r7, #4]
 830 004a 1B68     		ldr	r3, [r3]
 831 004c 03F00403 		and	r3, r3, #4
 832 0050 002B     		cmp	r3, #0
 833 0052 05D0     		beq	.L66
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 834              		.loc 1 620 0
 835 0054 584A     		ldr	r2, .L79+4
 836 0056 584B     		ldr	r3, .L79+4
 837 0058 9B68     		ldr	r3, [r3, #8]
 838 005a 43F4E053 		orr	r3, r3, #7168
 839 005e 9360     		str	r3, [r2, #8]
 840              	.L66:
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 841              		.loc 1 623 0
 842 0060 7B68     		ldr	r3, [r7, #4]
 843 0062 1B68     		ldr	r3, [r3]
 844 0064 03F00803 		and	r3, r3, #8
 845 0068 002B     		cmp	r3, #0
 846 006a 05D0     		beq	.L67
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
ARM GAS  /tmp/ccMmGI2M.s 			page 27


 847              		.loc 1 625 0
 848 006c 524A     		ldr	r2, .L79+4
 849 006e 524B     		ldr	r3, .L79+4
 850 0070 9B68     		ldr	r3, [r3, #8]
 851 0072 43F46043 		orr	r3, r3, #57344
 852 0076 9360     		str	r3, [r2, #8]
 853              	.L67:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 854              		.loc 1 629 0
 855 0078 4F49     		ldr	r1, .L79+4
 856 007a 4F4B     		ldr	r3, .L79+4
 857 007c 9B68     		ldr	r3, [r3, #8]
 858 007e 23F0F002 		bic	r2, r3, #240
 859 0082 7B68     		ldr	r3, [r7, #4]
 860 0084 9B68     		ldr	r3, [r3, #8]
 861 0086 1343     		orrs	r3, r3, r2
 862 0088 8B60     		str	r3, [r1, #8]
 863              	.L65:
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 864              		.loc 1 633 0
 865 008a 7B68     		ldr	r3, [r7, #4]
 866 008c 1B68     		ldr	r3, [r3]
 867 008e 03F00103 		and	r3, r3, #1
 868 0092 002B     		cmp	r3, #0
 869 0094 44D0     		beq	.L68
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 870              		.loc 1 638 0
 871 0096 7B68     		ldr	r3, [r7, #4]
 872 0098 5B68     		ldr	r3, [r3, #4]
 873 009a 012B     		cmp	r3, #1
 874 009c 07D1     		bne	.L69
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 875              		.loc 1 641 0
 876 009e 464B     		ldr	r3, .L79+4
 877 00a0 1B68     		ldr	r3, [r3]
 878 00a2 03F40033 		and	r3, r3, #131072
 879 00a6 002B     		cmp	r3, #0
 880 00a8 19D1     		bne	.L70
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 881              		.loc 1 643 0
 882 00aa 0123     		movs	r3, #1
 883 00ac 7DE0     		b	.L63
 884              	.L69:
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccMmGI2M.s 			page 28


 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 885              		.loc 1 647 0
 886 00ae 7B68     		ldr	r3, [r7, #4]
 887 00b0 5B68     		ldr	r3, [r3, #4]
 888 00b2 022B     		cmp	r3, #2
 889 00b4 03D0     		beq	.L71
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 890              		.loc 1 648 0 discriminator 1
 891 00b6 7B68     		ldr	r3, [r7, #4]
 892 00b8 5B68     		ldr	r3, [r3, #4]
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 893              		.loc 1 647 0 discriminator 1
 894 00ba 032B     		cmp	r3, #3
 895 00bc 07D1     		bne	.L72
 896              	.L71:
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 897              		.loc 1 651 0
 898 00be 3E4B     		ldr	r3, .L79+4
 899 00c0 1B68     		ldr	r3, [r3]
 900 00c2 03F00073 		and	r3, r3, #33554432
 901 00c6 002B     		cmp	r3, #0
 902 00c8 09D1     		bne	.L70
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 903              		.loc 1 653 0
 904 00ca 0123     		movs	r3, #1
 905 00cc 6DE0     		b	.L63
 906              	.L72:
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 907              		.loc 1 660 0
 908 00ce 3A4B     		ldr	r3, .L79+4
 909 00d0 1B68     		ldr	r3, [r3]
 910 00d2 03F00203 		and	r3, r3, #2
 911 00d6 002B     		cmp	r3, #0
 912 00d8 01D1     		bne	.L70
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 913              		.loc 1 662 0
 914 00da 0123     		movs	r3, #1
 915 00dc 65E0     		b	.L63
 916              	.L70:
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 917              		.loc 1 666 0
 918 00de 3649     		ldr	r1, .L79+4
ARM GAS  /tmp/ccMmGI2M.s 			page 29


 919 00e0 354B     		ldr	r3, .L79+4
 920 00e2 9B68     		ldr	r3, [r3, #8]
 921 00e4 23F00302 		bic	r2, r3, #3
 922 00e8 7B68     		ldr	r3, [r7, #4]
 923 00ea 5B68     		ldr	r3, [r3, #4]
 924 00ec 1343     		orrs	r3, r3, r2
 925 00ee 8B60     		str	r3, [r1, #8]
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 926              		.loc 1 669 0
 927 00f0 FFF7FEFF 		bl	HAL_GetTick
 928 00f4 F860     		str	r0, [r7, #12]
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 929              		.loc 1 671 0
 930 00f6 0AE0     		b	.L74
 931              	.L75:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 932              		.loc 1 673 0
 933 00f8 FFF7FEFF 		bl	HAL_GetTick
 934 00fc 0246     		mov	r2, r0
 935 00fe FB68     		ldr	r3, [r7, #12]
 936 0100 D31A     		subs	r3, r2, r3
 937 0102 41F28832 		movw	r2, #5000
 938 0106 9342     		cmp	r3, r2
 939 0108 01D9     		bls	.L74
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 940              		.loc 1 675 0
 941 010a 0323     		movs	r3, #3
 942 010c 4DE0     		b	.L63
 943              	.L74:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 944              		.loc 1 671 0
 945 010e 2A4B     		ldr	r3, .L79+4
 946 0110 9B68     		ldr	r3, [r3, #8]
 947 0112 03F00C02 		and	r2, r3, #12
 948 0116 7B68     		ldr	r3, [r7, #4]
 949 0118 5B68     		ldr	r3, [r3, #4]
 950 011a 9B00     		lsls	r3, r3, #2
 951 011c 9A42     		cmp	r2, r3
 952 011e EBD1     		bne	.L75
 953              	.L68:
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 954              		.loc 1 681 0
 955 0120 244B     		ldr	r3, .L79
 956 0122 1B68     		ldr	r3, [r3]
 957 0124 03F00F02 		and	r2, r3, #15
 958 0128 3B68     		ldr	r3, [r7]
 959 012a 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccMmGI2M.s 			page 30


 960 012c 0CD9     		bls	.L76
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 961              		.loc 1 684 0
 962 012e 214B     		ldr	r3, .L79
 963 0130 3A68     		ldr	r2, [r7]
 964 0132 D2B2     		uxtb	r2, r2
 965 0134 1A70     		strb	r2, [r3]
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 966              		.loc 1 688 0
 967 0136 1F4B     		ldr	r3, .L79
 968 0138 1B68     		ldr	r3, [r3]
 969 013a 03F00F02 		and	r2, r3, #15
 970 013e 3B68     		ldr	r3, [r7]
 971 0140 9A42     		cmp	r2, r3
 972 0142 01D0     		beq	.L76
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 973              		.loc 1 690 0
 974 0144 0123     		movs	r3, #1
 975 0146 30E0     		b	.L63
 976              	.L76:
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 977              		.loc 1 695 0
 978 0148 7B68     		ldr	r3, [r7, #4]
 979 014a 1B68     		ldr	r3, [r3]
 980 014c 03F00403 		and	r3, r3, #4
 981 0150 002B     		cmp	r3, #0
 982 0152 08D0     		beq	.L77
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 983              		.loc 1 698 0
 984 0154 1849     		ldr	r1, .L79+4
 985 0156 184B     		ldr	r3, .L79+4
 986 0158 9B68     		ldr	r3, [r3, #8]
 987 015a 23F4E052 		bic	r2, r3, #7168
 988 015e 7B68     		ldr	r3, [r7, #4]
 989 0160 DB68     		ldr	r3, [r3, #12]
 990 0162 1343     		orrs	r3, r3, r2
 991 0164 8B60     		str	r3, [r1, #8]
 992              	.L77:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 993              		.loc 1 702 0
 994 0166 7B68     		ldr	r3, [r7, #4]
 995 0168 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMmGI2M.s 			page 31


 996 016a 03F00803 		and	r3, r3, #8
 997 016e 002B     		cmp	r3, #0
 998 0170 09D0     		beq	.L78
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 999              		.loc 1 705 0
 1000 0172 1149     		ldr	r1, .L79+4
 1001 0174 104B     		ldr	r3, .L79+4
 1002 0176 9B68     		ldr	r3, [r3, #8]
 1003 0178 23F46042 		bic	r2, r3, #57344
 1004 017c 7B68     		ldr	r3, [r7, #4]
 1005 017e 1B69     		ldr	r3, [r3, #16]
 1006 0180 DB00     		lsls	r3, r3, #3
 1007 0182 1343     		orrs	r3, r3, r2
 1008 0184 8B60     		str	r3, [r1, #8]
 1009              	.L78:
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1010              		.loc 1 709 0
 1011 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1012 018a 0146     		mov	r1, r0
 1013 018c 0A4B     		ldr	r3, .L79+4
 1014 018e 9B68     		ldr	r3, [r3, #8]
 1015 0190 1B09     		lsrs	r3, r3, #4
 1016 0192 03F00F03 		and	r3, r3, #15
 1017 0196 094A     		ldr	r2, .L79+8
 1018 0198 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1019 019a 21FA03F3 		lsr	r3, r1, r3
 1020 019e 084A     		ldr	r2, .L79+12
 1021 01a0 1360     		str	r3, [r2]
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1022              		.loc 1 712 0
 1023 01a2 0020     		movs	r0, #0
 1024 01a4 FFF7FEFF 		bl	HAL_InitTick
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1025              		.loc 1 714 0
 1026 01a8 0023     		movs	r3, #0
 1027              	.L63:
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1028              		.loc 1 715 0
 1029 01aa 1846     		mov	r0, r3
 1030 01ac 1037     		adds	r7, r7, #16
 1031              	.LCFI12:
 1032              		.cfi_def_cfa_offset 8
 1033 01ae BD46     		mov	sp, r7
 1034              	.LCFI13:
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 01b0 80BD     		pop	{r7, pc}
 1038              	.L80:
 1039 01b2 00BF     		.align	2
ARM GAS  /tmp/ccMmGI2M.s 			page 32


 1040              	.L79:
 1041 01b4 003C0240 		.word	1073888256
 1042 01b8 00380240 		.word	1073887232
 1043 01bc 00000000 		.word	AHBPrescTable
 1044 01c0 00000000 		.word	SystemCoreClock
 1045              		.cfi_endproc
 1046              	.LFE126:
 1048              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_RCC_MCOConfig
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv4-sp-d16
 1056              	HAL_RCC_MCOConfig:
 1057              	.LFB127:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
ARM GAS  /tmp/ccMmGI2M.s 			page 33


 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1058              		.loc 1 766 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 48
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062 0000 80B5     		push	{r7, lr}
 1063              	.LCFI14:
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 8CB0     		sub	sp, sp, #48
 1068              	.LCFI15:
 1069              		.cfi_def_cfa_offset 56
 1070 0004 00AF     		add	r7, sp, #0
 1071              	.LCFI16:
 1072              		.cfi_def_cfa_register 7
 1073 0006 F860     		str	r0, [r7, #12]
 1074 0008 B960     		str	r1, [r7, #8]
 1075 000a 7A60     		str	r2, [r7, #4]
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1076              		.loc 1 772 0
 1077 000c FB68     		ldr	r3, [r7, #12]
 1078 000e 002B     		cmp	r3, #0
 1079 0010 29D1     		bne	.L82
 1080              	.LBB4:
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1081              		.loc 1 777 0
 1082 0012 0023     		movs	r3, #0
 1083 0014 BB61     		str	r3, [r7, #24]
 1084 0016 2B4A     		ldr	r2, .L85
 1085 0018 2A4B     		ldr	r3, .L85
 1086 001a 1B6B     		ldr	r3, [r3, #48]
 1087 001c 43F00103 		orr	r3, r3, #1
 1088 0020 1363     		str	r3, [r2, #48]
 1089 0022 284B     		ldr	r3, .L85
 1090 0024 1B6B     		ldr	r3, [r3, #48]
 1091 0026 03F00103 		and	r3, r3, #1
 1092 002a BB61     		str	r3, [r7, #24]
 1093 002c BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccMmGI2M.s 			page 34


 1094              	.LBE4:
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1095              		.loc 1 780 0
 1096 002e 4FF48073 		mov	r3, #256
 1097 0032 FB61     		str	r3, [r7, #28]
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1098              		.loc 1 781 0
 1099 0034 0223     		movs	r3, #2
 1100 0036 3B62     		str	r3, [r7, #32]
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1101              		.loc 1 782 0
 1102 0038 0323     		movs	r3, #3
 1103 003a BB62     		str	r3, [r7, #40]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1104              		.loc 1 783 0
 1105 003c 0023     		movs	r3, #0
 1106 003e 7B62     		str	r3, [r7, #36]
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1107              		.loc 1 784 0
 1108 0040 0023     		movs	r3, #0
 1109 0042 FB62     		str	r3, [r7, #44]
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1110              		.loc 1 785 0
 1111 0044 07F11C03 		add	r3, r7, #28
 1112 0048 1946     		mov	r1, r3
 1113 004a 1F48     		ldr	r0, .L85+4
 1114 004c FFF7FEFF 		bl	HAL_GPIO_Init
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1115              		.loc 1 788 0
 1116 0050 1C48     		ldr	r0, .L85
 1117 0052 1C4B     		ldr	r3, .L85
 1118 0054 9B68     		ldr	r3, [r3, #8]
 1119 0056 23F0EC62 		bic	r2, r3, #123731968
 1120 005a B968     		ldr	r1, [r7, #8]
 1121 005c 7B68     		ldr	r3, [r7, #4]
 1122 005e 0B43     		orrs	r3, r3, r1
 1123 0060 1343     		orrs	r3, r3, r2
 1124 0062 8360     		str	r3, [r0, #8]
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
ARM GAS  /tmp/ccMmGI2M.s 			page 35


 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1125              		.loc 1 820 0
 1126 0064 29E0     		b	.L84
 1127              	.L82:
 1128              	.LBB5:
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1129              		.loc 1 801 0
 1130 0066 0023     		movs	r3, #0
 1131 0068 7B61     		str	r3, [r7, #20]
 1132 006a 164A     		ldr	r2, .L85
 1133 006c 154B     		ldr	r3, .L85
 1134 006e 1B6B     		ldr	r3, [r3, #48]
 1135 0070 43F00403 		orr	r3, r3, #4
 1136 0074 1363     		str	r3, [r2, #48]
 1137 0076 134B     		ldr	r3, .L85
 1138 0078 1B6B     		ldr	r3, [r3, #48]
 1139 007a 03F00403 		and	r3, r3, #4
 1140 007e 7B61     		str	r3, [r7, #20]
 1141 0080 7B69     		ldr	r3, [r7, #20]
 1142              	.LBE5:
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1143              		.loc 1 804 0
 1144 0082 4FF40073 		mov	r3, #512
 1145 0086 FB61     		str	r3, [r7, #28]
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1146              		.loc 1 805 0
 1147 0088 0223     		movs	r3, #2
 1148 008a 3B62     		str	r3, [r7, #32]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1149              		.loc 1 806 0
 1150 008c 0323     		movs	r3, #3
 1151 008e BB62     		str	r3, [r7, #40]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1152              		.loc 1 807 0
 1153 0090 0023     		movs	r3, #0
 1154 0092 7B62     		str	r3, [r7, #36]
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1155              		.loc 1 808 0
 1156 0094 0023     		movs	r3, #0
 1157 0096 FB62     		str	r3, [r7, #44]
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccMmGI2M.s 			page 36


 1158              		.loc 1 809 0
 1159 0098 07F11C03 		add	r3, r7, #28
 1160 009c 1946     		mov	r1, r3
 1161 009e 0B48     		ldr	r0, .L85+8
 1162 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1163              		.loc 1 812 0
 1164 00a4 0748     		ldr	r0, .L85
 1165 00a6 074B     		ldr	r3, .L85
 1166 00a8 9B68     		ldr	r3, [r3, #8]
 1167 00aa 23F07842 		bic	r2, r3, #-134217728
 1168 00ae 7B68     		ldr	r3, [r7, #4]
 1169 00b0 D900     		lsls	r1, r3, #3
 1170 00b2 BB68     		ldr	r3, [r7, #8]
 1171 00b4 0B43     		orrs	r3, r3, r1
 1172 00b6 1343     		orrs	r3, r3, r2
 1173 00b8 8360     		str	r3, [r0, #8]
 1174              	.L84:
 1175              		.loc 1 820 0
 1176 00ba 00BF     		nop
 1177 00bc 3037     		adds	r7, r7, #48
 1178              	.LCFI17:
 1179              		.cfi_def_cfa_offset 8
 1180 00be BD46     		mov	sp, r7
 1181              	.LCFI18:
 1182              		.cfi_def_cfa_register 13
 1183              		@ sp needed
 1184 00c0 80BD     		pop	{r7, pc}
 1185              	.L86:
 1186 00c2 00BF     		.align	2
 1187              	.L85:
 1188 00c4 00380240 		.word	1073887232
 1189 00c8 00000240 		.word	1073872896
 1190 00cc 00080240 		.word	1073874944
 1191              		.cfi_endproc
 1192              	.LFE127:
 1194              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1195              		.align	1
 1196              		.global	HAL_RCC_EnableCSS
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1200              		.fpu fpv4-sp-d16
 1202              	HAL_RCC_EnableCSS:
 1203              	.LFB128:
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccMmGI2M.s 			page 37


 1204              		.loc 1 832 0
 1205              		.cfi_startproc
 1206              		@ args = 0, pretend = 0, frame = 0
 1207              		@ frame_needed = 1, uses_anonymous_args = 0
 1208              		@ link register save eliminated.
 1209 0000 80B4     		push	{r7}
 1210              	.LCFI19:
 1211              		.cfi_def_cfa_offset 4
 1212              		.cfi_offset 7, -4
 1213 0002 00AF     		add	r7, sp, #0
 1214              	.LCFI20:
 1215              		.cfi_def_cfa_register 7
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1216              		.loc 1 833 0
 1217 0004 034B     		ldr	r3, .L88
 1218 0006 0122     		movs	r2, #1
 1219 0008 1A60     		str	r2, [r3]
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1220              		.loc 1 834 0
 1221 000a 00BF     		nop
 1222 000c BD46     		mov	sp, r7
 1223              	.LCFI21:
 1224              		.cfi_def_cfa_register 13
 1225              		@ sp needed
 1226 000e 5DF8047B 		ldr	r7, [sp], #4
 1227              	.LCFI22:
 1228              		.cfi_restore 7
 1229              		.cfi_def_cfa_offset 0
 1230 0012 7047     		bx	lr
 1231              	.L89:
 1232              		.align	2
 1233              	.L88:
 1234 0014 4C004742 		.word	1111949388
 1235              		.cfi_endproc
 1236              	.LFE128:
 1238              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1239              		.align	1
 1240              		.global	HAL_RCC_DisableCSS
 1241              		.syntax unified
 1242              		.thumb
 1243              		.thumb_func
 1244              		.fpu fpv4-sp-d16
 1246              	HAL_RCC_DisableCSS:
 1247              	.LFB129:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1248              		.loc 1 841 0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccMmGI2M.s 			page 38


 1254              	.LCFI23:
 1255              		.cfi_def_cfa_offset 4
 1256              		.cfi_offset 7, -4
 1257 0002 00AF     		add	r7, sp, #0
 1258              	.LCFI24:
 1259              		.cfi_def_cfa_register 7
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1260              		.loc 1 842 0
 1261 0004 034B     		ldr	r3, .L91
 1262 0006 0022     		movs	r2, #0
 1263 0008 1A60     		str	r2, [r3]
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1264              		.loc 1 843 0
 1265 000a 00BF     		nop
 1266 000c BD46     		mov	sp, r7
 1267              	.LCFI25:
 1268              		.cfi_def_cfa_register 13
 1269              		@ sp needed
 1270 000e 5DF8047B 		ldr	r7, [sp], #4
 1271              	.LCFI26:
 1272              		.cfi_restore 7
 1273              		.cfi_def_cfa_offset 0
 1274 0012 7047     		bx	lr
 1275              	.L92:
 1276              		.align	2
 1277              	.L91:
 1278 0014 4C004742 		.word	1111949388
 1279              		.cfi_endproc
 1280              	.LFE129:
 1282              		.global	__aeabi_uldivmod
 1283              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1284              		.align	1
 1285              		.weak	HAL_RCC_GetSysClockFreq
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1289              		.fpu fpv4-sp-d16
 1291              	HAL_RCC_GetSysClockFreq:
 1292              	.LFB130:
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
ARM GAS  /tmp/ccMmGI2M.s 			page 39


 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1293              		.loc 1 876 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 56
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1298              	.LCFI27:
 1299              		.cfi_def_cfa_offset 36
 1300              		.cfi_offset 4, -36
 1301              		.cfi_offset 5, -32
 1302              		.cfi_offset 6, -28
 1303              		.cfi_offset 7, -24
 1304              		.cfi_offset 8, -20
 1305              		.cfi_offset 9, -16
 1306              		.cfi_offset 10, -12
 1307              		.cfi_offset 11, -8
 1308              		.cfi_offset 14, -4
 1309 0004 8FB0     		sub	sp, sp, #60
 1310              	.LCFI28:
 1311              		.cfi_def_cfa_offset 96
 1312 0006 00AF     		add	r7, sp, #0
 1313              	.LCFI29:
 1314              		.cfi_def_cfa_register 7
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1315              		.loc 1 877 0
 1316 0008 0023     		movs	r3, #0
 1317 000a FB62     		str	r3, [r7, #44]
 1318 000c 0023     		movs	r3, #0
 1319 000e 7B63     		str	r3, [r7, #52]
 1320 0010 0023     		movs	r3, #0
 1321 0012 BB62     		str	r3, [r7, #40]
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1322              		.loc 1 878 0
 1323 0014 0023     		movs	r3, #0
 1324 0016 3B63     		str	r3, [r7, #48]
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1325              		.loc 1 881 0
 1326 0018 624B     		ldr	r3, .L103
 1327 001a 9B68     		ldr	r3, [r3, #8]
 1328 001c 03F00C03 		and	r3, r3, #12
 1329 0020 042B     		cmp	r3, #4
ARM GAS  /tmp/ccMmGI2M.s 			page 40


 1330 0022 07D0     		beq	.L95
 1331 0024 082B     		cmp	r3, #8
 1332 0026 08D0     		beq	.L96
 1333 0028 002B     		cmp	r3, #0
 1334 002a 40F0B280 		bne	.L102
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1335              		.loc 1 885 0
 1336 002e 5E4B     		ldr	r3, .L103+4
 1337 0030 3B63     		str	r3, [r7, #48]
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1338              		.loc 1 886 0
 1339 0032 B1E0     		b	.L98
 1340              	.L95:
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1341              		.loc 1 890 0
 1342 0034 5D4B     		ldr	r3, .L103+8
 1343 0036 3B63     		str	r3, [r7, #48]
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1344              		.loc 1 891 0
 1345 0038 AEE0     		b	.L98
 1346              	.L96:
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1347              		.loc 1 897 0
 1348 003a 5A4B     		ldr	r3, .L103
 1349 003c 5B68     		ldr	r3, [r3, #4]
 1350 003e 03F03F03 		and	r3, r3, #63
 1351 0042 FB62     		str	r3, [r7, #44]
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1352              		.loc 1 898 0
 1353 0044 574B     		ldr	r3, .L103
 1354 0046 5B68     		ldr	r3, [r3, #4]
 1355 0048 03F48003 		and	r3, r3, #4194304
 1356 004c 002B     		cmp	r3, #0
 1357 004e 4ED0     		beq	.L99
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1358              		.loc 1 901 0
 1359 0050 544B     		ldr	r3, .L103
 1360 0052 5B68     		ldr	r3, [r3, #4]
 1361 0054 9B09     		lsrs	r3, r3, #6
 1362 0056 4FF00004 		mov	r4, #0
 1363 005a 40F2FF11 		movw	r1, #511
 1364 005e 4FF00002 		mov	r2, #0
 1365 0062 01EA0301 		and	r1, r1, r3
 1366 0066 02EA0402 		and	r2, r2, r4
ARM GAS  /tmp/ccMmGI2M.s 			page 41


 1367 006a 0B46     		mov	r3, r1
 1368 006c 1446     		mov	r4, r2
 1369 006e 6001     		lsls	r0, r4, #5
 1370 0070 7862     		str	r0, [r7, #36]
 1371 0072 786A     		ldr	r0, [r7, #36]
 1372 0074 40EAD360 		orr	r0, r0, r3, lsr #27
 1373 0078 7862     		str	r0, [r7, #36]
 1374 007a 5B01     		lsls	r3, r3, #5
 1375 007c 3B62     		str	r3, [r7, #32]
 1376 007e D7E90834 		ldrd	r3, [r7, #32]
 1377 0082 5B1A     		subs	r3, r3, r1
 1378 0084 64EB0204 		sbc	r4, r4, r2
 1379 0088 4FEA8419 		lsl	r9, r4, #6
 1380 008c 49EA9369 		orr	r9, r9, r3, lsr #26
 1381 0090 4FEA8318 		lsl	r8, r3, #6
 1382 0094 B8EB0308 		subs	r8, r8, r3
 1383 0098 69EB0409 		sbc	r9, r9, r4
 1384 009c 4FEAC903 		lsl	r3, r9, #3
 1385 00a0 FB61     		str	r3, [r7, #28]
 1386 00a2 FB69     		ldr	r3, [r7, #28]
 1387 00a4 43EA5873 		orr	r3, r3, r8, lsr #29
 1388 00a8 FB61     		str	r3, [r7, #28]
 1389 00aa 4FEAC803 		lsl	r3, r8, #3
 1390 00ae BB61     		str	r3, [r7, #24]
 1391 00b0 D7E90689 		ldrd	r8, [r7, #24]
 1392 00b4 18EB0108 		adds	r8, r8, r1
 1393 00b8 49EB0209 		adc	r9, r9, r2
 1394 00bc 4FEA4923 		lsl	r3, r9, #9
 1395 00c0 7B61     		str	r3, [r7, #20]
 1396 00c2 7B69     		ldr	r3, [r7, #20]
 1397 00c4 43EAD853 		orr	r3, r3, r8, lsr #23
 1398 00c8 7B61     		str	r3, [r7, #20]
 1399 00ca 4FEA4823 		lsl	r3, r8, #9
 1400 00ce 3B61     		str	r3, [r7, #16]
 1401 00d0 D7E90489 		ldrd	r8, [r7, #16]
 1402 00d4 4046     		mov	r0, r8
 1403 00d6 4946     		mov	r1, r9
 1404 00d8 FB6A     		ldr	r3, [r7, #44]
 1405 00da 4FF00004 		mov	r4, #0
 1406 00de 1A46     		mov	r2, r3
 1407 00e0 2346     		mov	r3, r4
 1408 00e2 FFF7FEFF 		bl	__aeabi_uldivmod
 1409              	.LVL0:
 1410 00e6 0346     		mov	r3, r0
 1411 00e8 0C46     		mov	r4, r1
 1412 00ea 7B63     		str	r3, [r7, #52]
 1413 00ec 43E0     		b	.L100
 1414              	.L99:
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1415              		.loc 1 906 0
 1416 00ee 2D4B     		ldr	r3, .L103
 1417 00f0 5B68     		ldr	r3, [r3, #4]
 1418 00f2 9B09     		lsrs	r3, r3, #6
ARM GAS  /tmp/ccMmGI2M.s 			page 42


 1419 00f4 4FF00004 		mov	r4, #0
 1420 00f8 40F2FF11 		movw	r1, #511
 1421 00fc 4FF00002 		mov	r2, #0
 1422 0100 01EA0301 		and	r1, r1, r3
 1423 0104 02EA0402 		and	r2, r2, r4
 1424 0108 0B46     		mov	r3, r1
 1425 010a 1446     		mov	r4, r2
 1426 010c 6001     		lsls	r0, r4, #5
 1427 010e F860     		str	r0, [r7, #12]
 1428 0110 F868     		ldr	r0, [r7, #12]
 1429 0112 40EAD360 		orr	r0, r0, r3, lsr #27
 1430 0116 F860     		str	r0, [r7, #12]
 1431 0118 5B01     		lsls	r3, r3, #5
 1432 011a BB60     		str	r3, [r7, #8]
 1433 011c D7E90234 		ldrd	r3, [r7, #8]
 1434 0120 5B1A     		subs	r3, r3, r1
 1435 0122 64EB0204 		sbc	r4, r4, r2
 1436 0126 A601     		lsls	r6, r4, #6
 1437 0128 46EA9366 		orr	r6, r6, r3, lsr #26
 1438 012c 9D01     		lsls	r5, r3, #6
 1439 012e ED1A     		subs	r5, r5, r3
 1440 0130 66EB0406 		sbc	r6, r6, r4
 1441 0134 F300     		lsls	r3, r6, #3
 1442 0136 7B60     		str	r3, [r7, #4]
 1443 0138 7B68     		ldr	r3, [r7, #4]
 1444 013a 43EA5573 		orr	r3, r3, r5, lsr #29
 1445 013e 7B60     		str	r3, [r7, #4]
 1446 0140 EB00     		lsls	r3, r5, #3
 1447 0142 3B60     		str	r3, [r7]
 1448 0144 D7E90056 		ldrd	r5, [r7]
 1449 0148 6D18     		adds	r5, r5, r1
 1450 014a 46EB0206 		adc	r6, r6, r2
 1451 014e 4FEA862B 		lsl	fp, r6, #10
 1452 0152 4BEA955B 		orr	fp, fp, r5, lsr #22
 1453 0156 4FEA852A 		lsl	r10, r5, #10
 1454 015a 5546     		mov	r5, r10
 1455 015c 5E46     		mov	r6, fp
 1456 015e 2846     		mov	r0, r5
 1457 0160 3146     		mov	r1, r6
 1458 0162 FB6A     		ldr	r3, [r7, #44]
 1459 0164 4FF00004 		mov	r4, #0
 1460 0168 1A46     		mov	r2, r3
 1461 016a 2346     		mov	r3, r4
 1462 016c FFF7FEFF 		bl	__aeabi_uldivmod
 1463              	.LVL1:
 1464 0170 0346     		mov	r3, r0
 1465 0172 0C46     		mov	r4, r1
 1466 0174 7B63     		str	r3, [r7, #52]
 1467              	.L100:
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1468              		.loc 1 908 0
 1469 0176 0B4B     		ldr	r3, .L103
 1470 0178 5B68     		ldr	r3, [r3, #4]
 1471 017a 1B0C     		lsrs	r3, r3, #16
 1472 017c 03F00303 		and	r3, r3, #3
 1473 0180 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccMmGI2M.s 			page 43


 1474 0182 5B00     		lsls	r3, r3, #1
 1475 0184 BB62     		str	r3, [r7, #40]
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1476              		.loc 1 910 0
 1477 0186 7A6B     		ldr	r2, [r7, #52]
 1478 0188 BB6A     		ldr	r3, [r7, #40]
 1479 018a B2FBF3F3 		udiv	r3, r2, r3
 1480 018e 3B63     		str	r3, [r7, #48]
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1481              		.loc 1 911 0
 1482 0190 02E0     		b	.L98
 1483              	.L102:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1484              		.loc 1 915 0
 1485 0192 054B     		ldr	r3, .L103+4
 1486 0194 3B63     		str	r3, [r7, #48]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1487              		.loc 1 916 0
 1488 0196 00BF     		nop
 1489              	.L98:
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1490              		.loc 1 919 0
 1491 0198 3B6B     		ldr	r3, [r7, #48]
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1492              		.loc 1 920 0
 1493 019a 1846     		mov	r0, r3
 1494 019c 3C37     		adds	r7, r7, #60
 1495              	.LCFI30:
 1496              		.cfi_def_cfa_offset 36
 1497 019e BD46     		mov	sp, r7
 1498              	.LCFI31:
 1499              		.cfi_def_cfa_register 13
 1500              		@ sp needed
 1501 01a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1502              	.L104:
 1503              		.align	2
 1504              	.L103:
 1505 01a4 00380240 		.word	1073887232
 1506 01a8 0024F400 		.word	16000000
 1507 01ac 00127A00 		.word	8000000
 1508              		.cfi_endproc
 1509              	.LFE130:
 1511              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1512              		.align	1
 1513              		.global	HAL_RCC_GetHCLKFreq
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	HAL_RCC_GetHCLKFreq:
 1520              	.LFB131:
ARM GAS  /tmp/ccMmGI2M.s 			page 44


 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1521              		.loc 1 932 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 1526 0000 80B4     		push	{r7}
 1527              	.LCFI32:
 1528              		.cfi_def_cfa_offset 4
 1529              		.cfi_offset 7, -4
 1530 0002 00AF     		add	r7, sp, #0
 1531              	.LCFI33:
 1532              		.cfi_def_cfa_register 7
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1533              		.loc 1 933 0
 1534 0004 034B     		ldr	r3, .L107
 1535 0006 1B68     		ldr	r3, [r3]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1536              		.loc 1 934 0
 1537 0008 1846     		mov	r0, r3
 1538 000a BD46     		mov	sp, r7
 1539              	.LCFI34:
 1540              		.cfi_def_cfa_register 13
 1541              		@ sp needed
 1542 000c 5DF8047B 		ldr	r7, [sp], #4
 1543              	.LCFI35:
 1544              		.cfi_restore 7
 1545              		.cfi_def_cfa_offset 0
 1546 0010 7047     		bx	lr
 1547              	.L108:
 1548 0012 00BF     		.align	2
 1549              	.L107:
 1550 0014 00000000 		.word	SystemCoreClock
 1551              		.cfi_endproc
 1552              	.LFE131:
 1554              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1555              		.align	1
 1556              		.global	HAL_RCC_GetPCLK1Freq
 1557              		.syntax unified
 1558              		.thumb
 1559              		.thumb_func
 1560              		.fpu fpv4-sp-d16
 1562              	HAL_RCC_GetPCLK1Freq:
 1563              	.LFB132:
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccMmGI2M.s 			page 45


 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1564              		.loc 1 943 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 1, uses_anonymous_args = 0
 1568 0000 80B5     		push	{r7, lr}
 1569              	.LCFI36:
 1570              		.cfi_def_cfa_offset 8
 1571              		.cfi_offset 7, -8
 1572              		.cfi_offset 14, -4
 1573 0002 00AF     		add	r7, sp, #0
 1574              	.LCFI37:
 1575              		.cfi_def_cfa_register 7
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1576              		.loc 1 945 0
 1577 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1578 0008 0146     		mov	r1, r0
 1579 000a 054B     		ldr	r3, .L111
 1580 000c 9B68     		ldr	r3, [r3, #8]
 1581 000e 9B0A     		lsrs	r3, r3, #10
 1582 0010 03F00703 		and	r3, r3, #7
 1583 0014 034A     		ldr	r2, .L111+4
 1584 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1585 0018 21FA03F3 		lsr	r3, r1, r3
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1586              		.loc 1 946 0
 1587 001c 1846     		mov	r0, r3
 1588 001e 80BD     		pop	{r7, pc}
 1589              	.L112:
 1590              		.align	2
 1591              	.L111:
 1592 0020 00380240 		.word	1073887232
 1593 0024 00000000 		.word	APBPrescTable
 1594              		.cfi_endproc
 1595              	.LFE132:
 1597              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1598              		.align	1
 1599              		.global	HAL_RCC_GetPCLK2Freq
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu fpv4-sp-d16
 1605              	HAL_RCC_GetPCLK2Freq:
 1606              	.LFB133:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
ARM GAS  /tmp/ccMmGI2M.s 			page 46


 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1607              		.loc 1 955 0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 0
 1610              		@ frame_needed = 1, uses_anonymous_args = 0
 1611 0000 80B5     		push	{r7, lr}
 1612              	.LCFI38:
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 00AF     		add	r7, sp, #0
 1617              	.LCFI39:
 1618              		.cfi_def_cfa_register 7
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1619              		.loc 1 957 0
 1620 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1621 0008 0146     		mov	r1, r0
 1622 000a 054B     		ldr	r3, .L115
 1623 000c 9B68     		ldr	r3, [r3, #8]
 1624 000e 5B0B     		lsrs	r3, r3, #13
 1625 0010 03F00703 		and	r3, r3, #7
 1626 0014 034A     		ldr	r2, .L115+4
 1627 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1628 0018 21FA03F3 		lsr	r3, r1, r3
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1629              		.loc 1 958 0
 1630 001c 1846     		mov	r0, r3
 1631 001e 80BD     		pop	{r7, pc}
 1632              	.L116:
 1633              		.align	2
 1634              	.L115:
 1635 0020 00380240 		.word	1073887232
 1636 0024 00000000 		.word	APBPrescTable
 1637              		.cfi_endproc
 1638              	.LFE133:
 1640              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1641              		.align	1
 1642              		.weak	HAL_RCC_GetOscConfig
 1643              		.syntax unified
 1644              		.thumb
 1645              		.thumb_func
 1646              		.fpu fpv4-sp-d16
 1648              	HAL_RCC_GetOscConfig:
 1649              	.LFB134:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccMmGI2M.s 			page 47


 1650              		.loc 1 968 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 8
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654              		@ link register save eliminated.
 1655 0000 80B4     		push	{r7}
 1656              	.LCFI40:
 1657              		.cfi_def_cfa_offset 4
 1658              		.cfi_offset 7, -4
 1659 0002 83B0     		sub	sp, sp, #12
 1660              	.LCFI41:
 1661              		.cfi_def_cfa_offset 16
 1662 0004 00AF     		add	r7, sp, #0
 1663              	.LCFI42:
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1666              		.loc 1 970 0
 1667 0008 7B68     		ldr	r3, [r7, #4]
 1668 000a 0F22     		movs	r2, #15
 1669 000c 1A60     		str	r2, [r3]
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1670              		.loc 1 973 0
 1671 000e 454B     		ldr	r3, .L130
 1672 0010 1B68     		ldr	r3, [r3]
 1673 0012 03F48023 		and	r3, r3, #262144
 1674 0016 B3F5802F 		cmp	r3, #262144
 1675 001a 04D1     		bne	.L118
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1676              		.loc 1 975 0
 1677 001c 7B68     		ldr	r3, [r7, #4]
 1678 001e 4FF4A022 		mov	r2, #327680
 1679 0022 5A60     		str	r2, [r3, #4]
 1680 0024 0EE0     		b	.L119
 1681              	.L118:
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1682              		.loc 1 977 0
 1683 0026 3F4B     		ldr	r3, .L130
 1684 0028 1B68     		ldr	r3, [r3]
 1685 002a 03F48033 		and	r3, r3, #65536
 1686 002e B3F5803F 		cmp	r3, #65536
 1687 0032 04D1     		bne	.L120
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1688              		.loc 1 979 0
 1689 0034 7B68     		ldr	r3, [r7, #4]
 1690 0036 4FF48032 		mov	r2, #65536
 1691 003a 5A60     		str	r2, [r3, #4]
 1692 003c 02E0     		b	.L119
 1693              	.L120:
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
ARM GAS  /tmp/ccMmGI2M.s 			page 48


 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1694              		.loc 1 983 0
 1695 003e 7B68     		ldr	r3, [r7, #4]
 1696 0040 0022     		movs	r2, #0
 1697 0042 5A60     		str	r2, [r3, #4]
 1698              	.L119:
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1699              		.loc 1 987 0
 1700 0044 374B     		ldr	r3, .L130
 1701 0046 1B68     		ldr	r3, [r3]
 1702 0048 03F00103 		and	r3, r3, #1
 1703 004c 012B     		cmp	r3, #1
 1704 004e 03D1     		bne	.L121
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1705              		.loc 1 989 0
 1706 0050 7B68     		ldr	r3, [r7, #4]
 1707 0052 0122     		movs	r2, #1
 1708 0054 DA60     		str	r2, [r3, #12]
 1709 0056 02E0     		b	.L122
 1710              	.L121:
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1711              		.loc 1 993 0
 1712 0058 7B68     		ldr	r3, [r7, #4]
 1713 005a 0022     		movs	r2, #0
 1714 005c DA60     		str	r2, [r3, #12]
 1715              	.L122:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1716              		.loc 1 996 0
 1717 005e 314B     		ldr	r3, .L130
 1718 0060 1B68     		ldr	r3, [r3]
 1719 0062 DB08     		lsrs	r3, r3, #3
 1720 0064 03F01F02 		and	r2, r3, #31
 1721 0068 7B68     		ldr	r3, [r7, #4]
 1722 006a 1A61     		str	r2, [r3, #16]
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1723              		.loc 1 999 0
 1724 006c 2D4B     		ldr	r3, .L130
 1725 006e 1B6F     		ldr	r3, [r3, #112]
 1726 0070 03F00403 		and	r3, r3, #4
 1727 0074 042B     		cmp	r3, #4
 1728 0076 03D1     		bne	.L123
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1729              		.loc 1 1001 0
 1730 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMmGI2M.s 			page 49


 1731 007a 0522     		movs	r2, #5
 1732 007c 9A60     		str	r2, [r3, #8]
 1733 007e 0CE0     		b	.L124
 1734              	.L123:
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1735              		.loc 1 1003 0
 1736 0080 284B     		ldr	r3, .L130
 1737 0082 1B6F     		ldr	r3, [r3, #112]
 1738 0084 03F00103 		and	r3, r3, #1
 1739 0088 012B     		cmp	r3, #1
 1740 008a 03D1     		bne	.L125
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1741              		.loc 1 1005 0
 1742 008c 7B68     		ldr	r3, [r7, #4]
 1743 008e 0122     		movs	r2, #1
 1744 0090 9A60     		str	r2, [r3, #8]
 1745 0092 02E0     		b	.L124
 1746              	.L125:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1747              		.loc 1 1009 0
 1748 0094 7B68     		ldr	r3, [r7, #4]
 1749 0096 0022     		movs	r2, #0
 1750 0098 9A60     		str	r2, [r3, #8]
 1751              	.L124:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1752              		.loc 1 1013 0
 1753 009a 224B     		ldr	r3, .L130
 1754 009c 5B6F     		ldr	r3, [r3, #116]
 1755 009e 03F00103 		and	r3, r3, #1
 1756 00a2 012B     		cmp	r3, #1
 1757 00a4 03D1     		bne	.L126
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1758              		.loc 1 1015 0
 1759 00a6 7B68     		ldr	r3, [r7, #4]
 1760 00a8 0122     		movs	r2, #1
 1761 00aa 5A61     		str	r2, [r3, #20]
 1762 00ac 02E0     		b	.L127
 1763              	.L126:
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1764              		.loc 1 1019 0
 1765 00ae 7B68     		ldr	r3, [r7, #4]
 1766 00b0 0022     		movs	r2, #0
 1767 00b2 5A61     		str	r2, [r3, #20]
 1768              	.L127:
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccMmGI2M.s 			page 50


1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1769              		.loc 1 1023 0
 1770 00b4 1B4B     		ldr	r3, .L130
 1771 00b6 1B68     		ldr	r3, [r3]
 1772 00b8 03F08073 		and	r3, r3, #16777216
 1773 00bc B3F1807F 		cmp	r3, #16777216
 1774 00c0 03D1     		bne	.L128
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1775              		.loc 1 1025 0
 1776 00c2 7B68     		ldr	r3, [r7, #4]
 1777 00c4 0222     		movs	r2, #2
 1778 00c6 9A61     		str	r2, [r3, #24]
 1779 00c8 02E0     		b	.L129
 1780              	.L128:
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1781              		.loc 1 1029 0
 1782 00ca 7B68     		ldr	r3, [r7, #4]
 1783 00cc 0122     		movs	r2, #1
 1784 00ce 9A61     		str	r2, [r3, #24]
 1785              	.L129:
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1786              		.loc 1 1031 0
 1787 00d0 144B     		ldr	r3, .L130
 1788 00d2 5B68     		ldr	r3, [r3, #4]
 1789 00d4 03F48002 		and	r2, r3, #4194304
 1790 00d8 7B68     		ldr	r3, [r7, #4]
 1791 00da DA61     		str	r2, [r3, #28]
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 1792              		.loc 1 1032 0
 1793 00dc 114B     		ldr	r3, .L130
 1794 00de 5B68     		ldr	r3, [r3, #4]
 1795 00e0 03F03F02 		and	r2, r3, #63
 1796 00e4 7B68     		ldr	r3, [r7, #4]
 1797 00e6 1A62     		str	r2, [r3, #32]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1798              		.loc 1 1033 0
 1799 00e8 0E4B     		ldr	r3, .L130
 1800 00ea 5B68     		ldr	r3, [r3, #4]
 1801 00ec 9B09     		lsrs	r3, r3, #6
 1802 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1803 00f2 7B68     		ldr	r3, [r7, #4]
 1804 00f4 5A62     		str	r2, [r3, #36]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1805              		.loc 1 1034 0
 1806 00f6 0B4B     		ldr	r3, .L130
 1807 00f8 5B68     		ldr	r3, [r3, #4]
 1808 00fa 03F44033 		and	r3, r3, #196608
 1809 00fe 03F58033 		add	r3, r3, #65536
 1810 0102 5B00     		lsls	r3, r3, #1
 1811 0104 1A0C     		lsrs	r2, r3, #16
ARM GAS  /tmp/ccMmGI2M.s 			page 51


 1812 0106 7B68     		ldr	r3, [r7, #4]
 1813 0108 9A62     		str	r2, [r3, #40]
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 1814              		.loc 1 1035 0
 1815 010a 064B     		ldr	r3, .L130
 1816 010c 5B68     		ldr	r3, [r3, #4]
 1817 010e 1B0E     		lsrs	r3, r3, #24
 1818 0110 03F00F02 		and	r2, r3, #15
 1819 0114 7B68     		ldr	r3, [r7, #4]
 1820 0116 DA62     		str	r2, [r3, #44]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1821              		.loc 1 1036 0
 1822 0118 00BF     		nop
 1823 011a 0C37     		adds	r7, r7, #12
 1824              	.LCFI43:
 1825              		.cfi_def_cfa_offset 4
 1826 011c BD46     		mov	sp, r7
 1827              	.LCFI44:
 1828              		.cfi_def_cfa_register 13
 1829              		@ sp needed
 1830 011e 5DF8047B 		ldr	r7, [sp], #4
 1831              	.LCFI45:
 1832              		.cfi_restore 7
 1833              		.cfi_def_cfa_offset 0
 1834 0122 7047     		bx	lr
 1835              	.L131:
 1836              		.align	2
 1837              	.L130:
 1838 0124 00380240 		.word	1073887232
 1839              		.cfi_endproc
 1840              	.LFE134:
 1842              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1843              		.align	1
 1844              		.global	HAL_RCC_GetClockConfig
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	HAL_RCC_GetClockConfig:
 1851              	.LFB135:
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1852              		.loc 1 1047 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 8
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccMmGI2M.s 			page 52


 1858              	.LCFI46:
 1859              		.cfi_def_cfa_offset 4
 1860              		.cfi_offset 7, -4
 1861 0002 83B0     		sub	sp, sp, #12
 1862              	.LCFI47:
 1863              		.cfi_def_cfa_offset 16
 1864 0004 00AF     		add	r7, sp, #0
 1865              	.LCFI48:
 1866              		.cfi_def_cfa_register 7
 1867 0006 7860     		str	r0, [r7, #4]
 1868 0008 3960     		str	r1, [r7]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 1869              		.loc 1 1049 0
 1870 000a 7B68     		ldr	r3, [r7, #4]
 1871 000c 0F22     		movs	r2, #15
 1872 000e 1A60     		str	r2, [r3]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1873              		.loc 1 1052 0
 1874 0010 124B     		ldr	r3, .L133
 1875 0012 9B68     		ldr	r3, [r3, #8]
 1876 0014 03F00302 		and	r2, r3, #3
 1877 0018 7B68     		ldr	r3, [r7, #4]
 1878 001a 5A60     		str	r2, [r3, #4]
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 1879              		.loc 1 1055 0
 1880 001c 0F4B     		ldr	r3, .L133
 1881 001e 9B68     		ldr	r3, [r3, #8]
 1882 0020 03F0F002 		and	r2, r3, #240
 1883 0024 7B68     		ldr	r3, [r7, #4]
 1884 0026 9A60     		str	r2, [r3, #8]
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 1885              		.loc 1 1058 0
 1886 0028 0C4B     		ldr	r3, .L133
 1887 002a 9B68     		ldr	r3, [r3, #8]
 1888 002c 03F4E052 		and	r2, r3, #7168
 1889 0030 7B68     		ldr	r3, [r7, #4]
 1890 0032 DA60     		str	r2, [r3, #12]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 1891              		.loc 1 1061 0
 1892 0034 094B     		ldr	r3, .L133
 1893 0036 9B68     		ldr	r3, [r3, #8]
 1894 0038 DB08     		lsrs	r3, r3, #3
 1895 003a 03F4E052 		and	r2, r3, #7168
 1896 003e 7B68     		ldr	r3, [r7, #4]
 1897 0040 1A61     		str	r2, [r3, #16]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
ARM GAS  /tmp/ccMmGI2M.s 			page 53


 1898              		.loc 1 1064 0
 1899 0042 074B     		ldr	r3, .L133+4
 1900 0044 1B68     		ldr	r3, [r3]
 1901 0046 03F00F02 		and	r2, r3, #15
 1902 004a 3B68     		ldr	r3, [r7]
 1903 004c 1A60     		str	r2, [r3]
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1904              		.loc 1 1065 0
 1905 004e 00BF     		nop
 1906 0050 0C37     		adds	r7, r7, #12
 1907              	.LCFI49:
 1908              		.cfi_def_cfa_offset 4
 1909 0052 BD46     		mov	sp, r7
 1910              	.LCFI50:
 1911              		.cfi_def_cfa_register 13
 1912              		@ sp needed
 1913 0054 5DF8047B 		ldr	r7, [sp], #4
 1914              	.LCFI51:
 1915              		.cfi_restore 7
 1916              		.cfi_def_cfa_offset 0
 1917 0058 7047     		bx	lr
 1918              	.L134:
 1919 005a 00BF     		.align	2
 1920              	.L133:
 1921 005c 00380240 		.word	1073887232
 1922 0060 003C0240 		.word	1073888256
 1923              		.cfi_endproc
 1924              	.LFE135:
 1926              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1927              		.align	1
 1928              		.global	HAL_RCC_NMI_IRQHandler
 1929              		.syntax unified
 1930              		.thumb
 1931              		.thumb_func
 1932              		.fpu fpv4-sp-d16
 1934              	HAL_RCC_NMI_IRQHandler:
 1935              	.LFB136:
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1936              		.loc 1 1073 0
 1937              		.cfi_startproc
 1938              		@ args = 0, pretend = 0, frame = 0
 1939              		@ frame_needed = 1, uses_anonymous_args = 0
 1940 0000 80B5     		push	{r7, lr}
 1941              	.LCFI52:
 1942              		.cfi_def_cfa_offset 8
 1943              		.cfi_offset 7, -8
 1944              		.cfi_offset 14, -4
 1945 0002 00AF     		add	r7, sp, #0
 1946              	.LCFI53:
 1947              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccMmGI2M.s 			page 54


1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 1948              		.loc 1 1075 0
 1949 0004 064B     		ldr	r3, .L138
 1950 0006 DB68     		ldr	r3, [r3, #12]
 1951 0008 03F08003 		and	r3, r3, #128
 1952 000c 802B     		cmp	r3, #128
 1953 000e 04D1     		bne	.L137
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 1954              		.loc 1 1078 0
 1955 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 1956              		.loc 1 1081 0
 1957 0014 034B     		ldr	r3, .L138+4
 1958 0016 8022     		movs	r2, #128
 1959 0018 1A70     		strb	r2, [r3]
 1960              	.L137:
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1961              		.loc 1 1083 0
 1962 001a 00BF     		nop
 1963 001c 80BD     		pop	{r7, pc}
 1964              	.L139:
 1965 001e 00BF     		.align	2
 1966              	.L138:
 1967 0020 00380240 		.word	1073887232
 1968 0024 0E380240 		.word	1073887246
 1969              		.cfi_endproc
 1970              	.LFE136:
 1972              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1973              		.align	1
 1974              		.weak	HAL_RCC_CSSCallback
 1975              		.syntax unified
 1976              		.thumb
 1977              		.thumb_func
 1978              		.fpu fpv4-sp-d16
 1980              	HAL_RCC_CSSCallback:
 1981              	.LFB137:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1982              		.loc 1 1090 0
 1983              		.cfi_startproc
 1984              		@ args = 0, pretend = 0, frame = 0
 1985              		@ frame_needed = 1, uses_anonymous_args = 0
 1986              		@ link register save eliminated.
 1987 0000 80B4     		push	{r7}
 1988              	.LCFI54:
 1989              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccMmGI2M.s 			page 55


 1990              		.cfi_offset 7, -4
 1991 0002 00AF     		add	r7, sp, #0
 1992              	.LCFI55:
 1993              		.cfi_def_cfa_register 7
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1994              		.loc 1 1094 0
 1995 0004 00BF     		nop
 1996 0006 BD46     		mov	sp, r7
 1997              	.LCFI56:
 1998              		.cfi_def_cfa_register 13
 1999              		@ sp needed
 2000 0008 5DF8047B 		ldr	r7, [sp], #4
 2001              	.LCFI57:
 2002              		.cfi_restore 7
 2003              		.cfi_def_cfa_offset 0
 2004 000c 7047     		bx	lr
 2005              		.cfi_endproc
 2006              	.LFE137:
 2008              		.text
 2009              	.Letext0:
 2010              		.file 2 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 2011              		.file 3 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 2012              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2013              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2014              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2015              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2016              		.file 8 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/lock.h"
 2017              		.file 9 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/_types.h"
 2018              		.file 10 "/opt/gcc4mbed/gcc-arm-none-eabi/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2019              		.file 11 "/opt/gcc4mbed/gcc-arm-none-eabi/arm-none-eabi/include/sys/reent.h"
 2020              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2021              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2022              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2023              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/ccMmGI2M.s 			page 56


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccMmGI2M.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccMmGI2M.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccMmGI2M.s:57     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccMmGI2M.s:64     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccMmGI2M.s:481    .text.HAL_RCC_OscConfig:00000000000002ac $d
     /tmp/ccMmGI2M.s:487    .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccMmGI2M.s:758    .text.HAL_RCC_OscConfig:0000000000000478 $d
     /tmp/ccMmGI2M.s:765    .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccMmGI2M.s:772    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccMmGI2M.s:1291   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccMmGI2M.s:1041   .text.HAL_RCC_ClockConfig:00000000000001b4 $d
     /tmp/ccMmGI2M.s:1049   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccMmGI2M.s:1056   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccMmGI2M.s:1188   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
     /tmp/ccMmGI2M.s:1195   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccMmGI2M.s:1202   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccMmGI2M.s:1234   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccMmGI2M.s:1239   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccMmGI2M.s:1246   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccMmGI2M.s:1278   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccMmGI2M.s:1284   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccMmGI2M.s:1505   .text.HAL_RCC_GetSysClockFreq:00000000000001a4 $d
     /tmp/ccMmGI2M.s:1512   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccMmGI2M.s:1519   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccMmGI2M.s:1550   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccMmGI2M.s:1555   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccMmGI2M.s:1562   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccMmGI2M.s:1592   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccMmGI2M.s:1598   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccMmGI2M.s:1605   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccMmGI2M.s:1635   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccMmGI2M.s:1641   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccMmGI2M.s:1648   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccMmGI2M.s:1838   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccMmGI2M.s:1843   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccMmGI2M.s:1850   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccMmGI2M.s:1921   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccMmGI2M.s:1927   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccMmGI2M.s:1934   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccMmGI2M.s:1980   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccMmGI2M.s:1967   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccMmGI2M.s:1973   .text.HAL_RCC_CSSCallback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
